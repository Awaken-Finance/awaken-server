// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: controller_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Awaken.Contracts.Controller {

  /// <summary>Holder for reflection information generated from controller_contract.proto</summary>
  public static partial class ControllerContractReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chljb250cm9sbGVyX2NvbnRyYWN0LnByb3RvGg9hZWxmL2NvcmUucHJvdG8a",
            "EmFlbGYvb3B0aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnBy",
            "b3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8iWQoPSW5pdGlh",
            "bGl6ZUlucHV0EicKEGFfdG9rZW5fY29udHJhY3QYASABKAsyDS5hZWxmLkFk",
            "ZHJlc3MSHQoVcGxhdGZvcm1fdG9rZW5fc3ltYm9sGAIgASgJIkcKGFNldE1h",
            "cmtldEJvcnJvd0NhcHNJbnB1dBIrChFtYXJrZXRfYm9ycm93X2NhcBgBIAMo",
            "CzIQLk1hcmtldEJvcnJvd0NhcCJJCg9NYXJrZXRCb3Jyb3dDYXASHgoHYV90",
            "b2tlbhgBIAEoCzINLmFlbGYuQWRkcmVzcxIWCg5uZXdfYm9ycm93X2NhcBgC",
            "IAEoAyI/Cg5TZXRQYXVzZWRJbnB1dBIeCgdhX3Rva2VuGAEgASgLMg0uYWVs",
            "Zi5BZGRyZXNzEg0KBXN0YXRlGAIgASgIIsEBChFTZWl6ZUFsbG93ZWRJbnB1",
            "dBIpChJhX3Rva2VuX2NvbGxhdGVyYWwYASABKAsyDS5hZWxmLkFkZHJlc3MS",
            "JwoQYV90b2tlbl9ib3Jyb3dlZBgCIAEoCzINLmFlbGYuQWRkcmVzcxIhCgps",
            "aXF1aWRhdG9yGAMgASgLMg0uYWVsZi5BZGRyZXNzEh8KCGJvcnJvd2VyGAQg",
            "ASgLMg0uYWVsZi5BZGRyZXNzEhQKDHNlaXplX3Rva2VucxgFIAEoAyLAAQoQ",
            "U2VpemVWZXJpZnlJbnB1dBIpChJhX3Rva2VuX2NvbGxhdGVyYWwYASABKAsy",
            "DS5hZWxmLkFkZHJlc3MSJwoQYV90b2tlbl9ib3Jyb3dlZBgCIAEoCzINLmFl",
            "bGYuQWRkcmVzcxIhCgpsaXF1aWRhdG9yGAMgASgLMg0uYWVsZi5BZGRyZXNz",
            "Eh8KCGJvcnJvd2VyGAQgASgLMg0uYWVsZi5BZGRyZXNzEhQKDHNlaXplX3Rv",
            "a2VucxgFIAEoAyKHAQoUVHJhbnNmZXJBbGxvd2VkSW5wdXQSHgoHYV90b2tl",
            "bhgBIAEoCzINLmFlbGYuQWRkcmVzcxIaCgNzcmMYAiABKAsyDS5hZWxmLkFk",
            "ZHJlc3MSGgoDZHN0GAMgASgLMg0uYWVsZi5BZGRyZXNzEhcKD3RyYW5zZmVy",
            "X3Rva2VucxgEIAEoAyKGAQoTVHJhbnNmZXJWZXJpZnlJbnB1dBIeCgdhX3Rv",
            "a2VuGAEgASgLMg0uYWVsZi5BZGRyZXNzEhoKA3NyYxgCIAEoCzINLmFlbGYu",
            "QWRkcmVzcxIaCgNkc3QYAyABKAsyDS5hZWxmLkFkZHJlc3MSFwoPdHJhbnNm",
            "ZXJfdG9rZW5zGAQgASgDIpUBCiJMaXF1aWRhdGVDYWxjdWxhdGVTZWl6ZVRv",
            "a2Vuc0lucHV0EicKEGFfdG9rZW5fYm9ycm93ZWQYASABKAsyDS5hZWxmLkFk",
            "ZHJlc3MSKQoSYV90b2tlbl9jb2xsYXRlcmFsGAIgASgLMg0uYWVsZi5BZGRy",
            "ZXNzEhsKE2FjdHVhbF9yZXBheV9hbW91bnQYAyABKAMiWQoYU2V0Q29sbGF0",
            "ZXJhbEZhY3RvcklucHV0Eh4KB2FfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJl",
            "c3MSHQoVbmV3X2NvbGxhdGVyYWxfZmFjdG9yGAIgASgDIqUBChZSZXBheUJv",
            "cnJvd1ZlcmlmeUlucHV0Eh4KB2FfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJl",
            "c3MSHAoFcGF5ZXIYAiABKAsyDS5hZWxmLkFkZHJlc3MSHwoIYm9ycm93ZXIY",
            "AyABKAsyDS5hZWxmLkFkZHJlc3MSFAoMcmVwYXlfYW1vdW50GAQgASgDEhYK",
            "DmJvcnJvd2VyX2luZGV4GAUgASgDIssBChtMaXF1aWRhdGVCb3Jyb3dBbGxv",
            "d2VkSW5wdXQSJwoQYV90b2tlbl9ib3Jyb3dlZBgBIAEoCzINLmFlbGYuQWRk",
            "cmVzcxIpChJhX3Rva2VuX2NvbGxhdGVyYWwYAiABKAsyDS5hZWxmLkFkZHJl",
            "c3MSIQoKbGlxdWlkYXRvchgDIAEoCzINLmFlbGYuQWRkcmVzcxIfCghib3Jy",
            "b3dlchgEIAEoCzINLmFlbGYuQWRkcmVzcxIUCgxyZXBheV9hbW91bnQYBSAB",
            "KAMi5wEKGkxpcXVpZGF0ZUJvcnJvd1ZlcmlmeUlucHV0EicKEGFfdG9rZW5f",
            "Ym9ycm93ZWQYASABKAsyDS5hZWxmLkFkZHJlc3MSKQoSYV90b2tlbl9jb2xs",
            "YXRlcmFsGAIgASgLMg0uYWVsZi5BZGRyZXNzEiEKCmxpcXVpZGF0b3IYAyAB",
            "KAsyDS5hZWxmLkFkZHJlc3MSHwoIYm9ycm93ZXIYBCABKAsyDS5hZWxmLkFk",
            "ZHJlc3MSGwoTYWN0dWFsX3JlcGF5X2Ftb3VudBgFIAEoAxIUCgxzZWl6ZV90",
            "b2tlbnMYBiABKAMiZgoQTWludEFsbG93ZWRJbnB1dBIeCgdhX3Rva2VuGAEg",
            "ASgLMg0uYWVsZi5BZGRyZXNzEh0KBm1pbnRlchgCIAEoCzINLmFlbGYuQWRk",
            "cmVzcxITCgttaW50X2Ftb3VudBgDIAEoAyKBAQoPTWludFZlcmlmeUlucHV0",
            "Eh4KB2FfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJlc3MSHQoGbWludGVyGAIg",
            "ASgLMg0uYWVsZi5BZGRyZXNzEhoKEmFjdHVhbF9taW50X2Ftb3VudBgDIAEo",
            "AxITCgttaW50X3Rva2VucxgEIAEoAyJsChJSZWRlZW1BbGxvd2VkSW5wdXQS",
            "HgoHYV90b2tlbhgBIAEoCzINLmFlbGYuQWRkcmVzcxIfCghyZWRlZW1lchgC",
            "IAEoCzINLmFlbGYuQWRkcmVzcxIVCg1yZWRlZW1fdG9rZW5zGAMgASgDIoAB",
            "ChFSZWRlZW1WZXJpZnlJbnB1dBIeCgdhX3Rva2VuGAEgASgLMg0uYWVsZi5B",
            "ZGRyZXNzEh0KBm1pbnRlchgCIAEoCzINLmFlbGYuQWRkcmVzcxIVCg1yZWRl",
            "ZW1fYW1vdW50GAMgASgDEhUKDXJlZGVlbV90b2tlbnMYBCABKAMibAoSQm9y",
            "cm93QWxsb3dlZElucHV0Eh4KB2FfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJl",
            "c3MSHwoIYm9ycm93ZXIYAiABKAsyDS5hZWxmLkFkZHJlc3MSFQoNYm9ycm93",
            "X2Ftb3VudBgDIAEoAyJrChFCb3Jyb3dWZXJpZnlJbnB1dBIeCgdhX3Rva2Vu",
            "GAEgASgLMg0uYWVsZi5BZGRyZXNzEh8KCGJvcnJvd2VyGAIgASgLMg0uYWVs",
            "Zi5BZGRyZXNzEhUKDWJvcnJvd19hbW91bnQYAyABKAMijgEKF1JlcGF5Qm9y",
            "cm93QWxsb3dlZElucHV0Eh4KB2FfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJl",
            "c3MSHAoFcGF5ZXIYAiABKAsyDS5hZWxmLkFkZHJlc3MSHwoIYm9ycm93ZXIY",
            "AyABKAsyDS5hZWxmLkFkZHJlc3MSFAoMcmVwYXlfYW1vdW50GAQgASgDIpsB",
            "CiRHZXRIeXBvdGhldGljYWxBY2NvdW50TGlxdWlkaXR5SW5wdXQSHgoHYWNj",
            "b3VudBgBIAEoCzINLmFlbGYuQWRkcmVzcxIlCg5hX3Rva2VuX21vZGlmeRgC",
            "IAEoCzINLmFlbGYuQWRkcmVzcxIVCg1yZWRlZW1fdG9rZW5zGAMgASgDEhUK",
            "DWJvcnJvd19hbW91bnQYBCABKAMigAEKF0NsYWltUGxhdGZvcm1Ub2tlbklu",
            "cHV0Eh4KB2hvbGRlcnMYASADKAsyDS5hZWxmLkFkZHJlc3MSHwoIYV90b2tl",
            "bnMYAiADKAsyDS5hZWxmLkFkZHJlc3MSEQoJYm9ycm93ZXJzGAMgASgIEhEK",
            "CXN1cHBsaWVycxgEIAEoCCJNCiVHZXRIeXBvdGhldGljYWxBY2NvdW50TGlx",
            "dWlkaXR5T3V0cHV0EhEKCWxpcXVpZGl0eRgBIAEoAxIRCglzaG9ydGZhbGwY",
            "AiABKAMiQQoZR2V0QWNjb3VudExpcXVpZGl0eU91dHB1dBIRCglsaXF1aWRp",
            "dHkYASABKAMSEQoJc2hvcnRmYWxsGAIgASgDIksKGFBsYXRmb3JtVG9rZW5N",
            "YXJrZXRTdGF0ZRIgCgVpbmRleBgBIAEoCzIRLmFlbGYuQmlnSW50VmFsdWUS",
            "DQoFYmxvY2sYAiABKAMiKgoJQXNzZXRMaXN0Eh0KBmFzc2V0cxgBIAMoCzIN",
            "LmFlbGYuQWRkcmVzcyJJCgdBY2NvdW50Eh4KB2FfdG9rZW4YASABKAsyDS5h",
            "ZWxmLkFkZHJlc3MSHgoHYWRkcmVzcxgCIAEoCzINLmFlbGYuQWRkcmVzcyIp",
            "CgdBVG9rZW5zEh4KB2FfdG9rZW4YASADKAsyDS5hZWxmLkFkZHJlc3MiyQEK",
            "Bk1hcmtldBIRCglpc19saXN0ZWQYASABKAgSGQoRY29sbGF0ZXJhbF9mYWN0",
            "b3IYAiABKAMSOgoSYWNjb3VudF9tZW1iZXJzaGlwGAMgAygLMh4uTWFya2V0",
            "LkFjY291bnRNZW1iZXJzaGlwRW50cnkSGwoTaXNfcGxhdGZvcm1fdG9rZW5l",
            "ZBgEIAEoCBo4ChZBY2NvdW50TWVtYmVyc2hpcEVudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCDoCOAEiNAoMTWFya2V0TGlzdGVkEh4KB2FfVG9r",
            "ZW4YASABKAsyDS5hZWxmLkFkZHJlc3M6BKC7GAEiVQoNTWFya2V0RW50ZXJl",
            "ZBIeCgdhX1Rva2VuGAEgASgLMg0uYWVsZi5BZGRyZXNzEh4KB2FjY291bnQY",
            "AiABKAsyDS5hZWxmLkFkZHJlc3M6BKC7GAEiVAoMTWFya2V0RXhpdGVkEh4K",
            "B2FfVG9rZW4YASABKAsyDS5hZWxmLkFkZHJlc3MSHgoHYWNjb3VudBgCIAEo",
            "CzINLmFlbGYuQWRkcmVzczoEoLsYASJOChJDbG9zZUZhY3RvckNoYW5nZWQS",
            "GAoQb2xkX2Nsb3NlX2ZhY3RvchgBIAEoAxIYChBuZXdfY2xvc2VfZmFjdG9y",
            "GAIgASgDOgSguxgBIn0KF0NvbGxhdGVyYWxGYWN0b3JDaGFuZ2VkEh4KB2Ff",
            "dG9rZW4YASABKAsyDS5hZWxmLkFkZHJlc3MSHQoVb2xkX2NvbGxhdGVyYWxf",
            "ZmFjdG9yGAIgASgDEh0KFW5ld19jb2xsYXRlcmFsX2ZhY3RvchgDIAEoAzoE",
            "oLsYASJpChtMaXF1aWRhdGlvbkluY2VudGl2ZUNoYW5nZWQSIQoZb2xkX2xp",
            "cXVpZGF0aW9uX2luY2VudGl2ZRgBIAEoAxIhChluZXdfbGlxdWlkYXRpb25f",
            "aW5jZW50aXZlGAIgASgDOgSguxgBIkgKEE1heEFzc2V0c0NoYW5nZWQSFgoO",
            "b2xkX21heF9hc3NldHMYASABKAMSFgoObmV3X21heF9hc3NldHMYAiABKAM6",
            "BKC7GAEibAoSUHJpY2VPcmFjbGVDaGFuZ2VkEicKEG9sZF9wcmljZV9vcmFj",
            "bGUYASABKAsyDS5hZWxmLkFkZHJlc3MSJwoQbmV3X3ByaWNlX29yYWNsZRgC",
            "IAEoCzINLmFlbGYuQWRkcmVzczoEoLsYASJyChRQYXVzZUd1YXJkaWFuQ2hh",
            "bmdlZBIpChJvbGRfcGF1c2VfZ3VhcmRpYW4YASABKAsyDS5hZWxmLkFkZHJl",
            "c3MSKQoSbmV3X3BhdXNlX2d1YXJkaWFuGAIgASgLMg0uYWVsZi5BZGRyZXNz",
            "OgSguxgBIlgKDEFjdGlvblBhdXNlZBIeCgdhX3Rva2VuGAEgASgLMg0uYWVs",
            "Zi5BZGRyZXNzEg4KBmFjdGlvbhgCIAEoCRISCgpwYXVzZVN0YXRlGAMgASgI",
            "OgSguxgBIlgKFU1hcmtldFBsYXRmb3JtVG9rZW5lZBIeCgdhX3Rva2VuGAEg",
            "ASgLMg0uYWVsZi5BZGRyZXNzEhkKEWlzUGxhdGZvcm1Ub2tlbmVkGAIgASgI",
            "OgSguxgBImIKGFBsYXRmb3JtVG9rZW5SYXRlQ2hhbmdlZBIfChdvbGRfcGxh",
            "dGZvcm1fdG9rZW5fcmF0ZRgBIAEoAxIfChduZXdfcGxhdGZvcm1fdG9rZW5f",
            "cmF0ZRgCIAEoAzoEoLsYASJUChlQbGF0Zm9ybVRva2VuU3BlZWRVcGRhdGVk",
            "Eh4KB2FfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJlc3MSEQoJbmV3X3NwZWVk",
            "GAIgASgDOgSguxgBItIBCiBEaXN0cmlidXRlZFN1cHBsaWVyUGxhdGZvcm1U",
            "b2tlbhIeCgdhX3Rva2VuGAEgASgLMg0uYWVsZi5BZGRyZXNzEh8KCHN1cHBs",
            "aWVyGAIgASgLMg0uYWVsZi5BZGRyZXNzEi8KFHBsYXRmb3JtX3Rva2VuX2Rl",
            "bHRhGAMgASgLMhEuYWVsZi5CaWdJbnRWYWx1ZRI2ChtwbGF0Zm9ybV90b2tl",
            "bl9zdXBwbHlfaW5kZXgYBCABKAsyES5hZWxmLkJpZ0ludFZhbHVlOgSguxgB",
            "ItIBCiBEaXN0cmlidXRlZEJvcnJvd2VyUGxhdGZvcm1Ub2tlbhIeCgdhX3Rv",
            "a2VuGAEgASgLMg0uYWVsZi5BZGRyZXNzEh8KCGJvcnJvd2VyGAIgASgLMg0u",
            "YWVsZi5BZGRyZXNzEi8KFHBsYXRmb3JtX3Rva2VuX2RlbHRhGAMgASgLMhEu",
            "YWVsZi5CaWdJbnRWYWx1ZRI2ChtwbGF0Zm9ybV90b2tlbl9ib3Jyb3dfaW5k",
            "ZXgYBCABKAsyES5hZWxmLkJpZ0ludFZhbHVlOgSguxgBIlAKEEJvcnJvd0Nh",
            "cENoYW5nZWQSHgoHYV9Ub2tlbhgBIAEoCzINLmFlbGYuQWRkcmVzcxIWCg5u",
            "ZXdfYm9ycm93X2NhcBgCIAEoAzoEoLsYASKAAQoYQm9ycm93Q2FwR3VhcmRp",
            "YW5DaGFuZ2VkEi4KF29sZF9ib3Jyb3dfY2FwX2d1YXJkaWFuGAEgASgLMg0u",
            "YWVsZi5BZGRyZXNzEi4KF25ld19ib3Jyb3dfY2FwX2d1YXJkaWFuGAIgASgL",
            "Mg0uYWVsZi5BZGRyZXNzOgSguxgBMtIkChJDb250cm9sbGVyQ29udHJhY3QS",
            "OAoKSW5pdGlhbGl6ZRIQLkluaXRpYWxpemVJbnB1dBoWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eSIAEjIKDEVudGVyTWFya2V0cxIILkFUb2tlbnMaFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkiABI1CgpFeGl0TWFya2V0Eg0uYWVsZi5BZGRy",
            "ZXNzGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASOgoLTWludEFsbG93ZWQS",
            "ES5NaW50QWxsb3dlZElucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgAS",
            "OAoKTWludFZlcmlmeRIQLk1pbnRWZXJpZnlJbnB1dBoWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eSIAEj4KDVJlZGVlbUFsbG93ZWQSEy5SZWRlZW1BbGxvd2Vk",
            "SW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI8CgxSZWRlZW1WZXJp",
            "ZnkSEi5SZWRlZW1WZXJpZnlJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eSIAEj4KDUJvcnJvd0FsbG93ZWQSEy5Cb3Jyb3dBbGxvd2VkSW5wdXQaFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkiABI8CgxCb3Jyb3dWZXJpZnkSEi5Cb3Jy",
            "b3dWZXJpZnlJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkgKElJl",
            "cGF5Qm9ycm93QWxsb3dlZBIYLlJlcGF5Qm9ycm93QWxsb3dlZElucHV0GhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASRgoRUmVwYXlCb3Jyb3dWZXJpZnkS",
            "Fy5SZXBheUJvcnJvd1ZlcmlmeUlucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5IgASUAoWTGlxdWlkYXRlQm9ycm93QWxsb3dlZBIcLkxpcXVpZGF0ZUJv",
            "cnJvd0FsbG93ZWRJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEk4K",
            "FUxpcXVpZGF0ZUJvcnJvd1ZlcmlmeRIbLkxpcXVpZGF0ZUJvcnJvd1Zlcmlm",
            "eUlucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASPAoMU2VpemVBbGxv",
            "d2VkEhIuU2VpemVBbGxvd2VkSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiABI6CgtTZWl6ZVZlcmlmeRIRLlNlaXplVmVyaWZ5SW5wdXQaFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkiABJCCg9UcmFuc2ZlckFsbG93ZWQSFS5UcmFu",
            "c2ZlckFsbG93ZWRJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkAK",
            "DlRyYW5zZmVyVmVyaWZ5EhQuVHJhbnNmZXJWZXJpZnlJbnB1dBoWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eSIAEmMKHUxpcXVpZGF0ZUNhbGN1bGF0ZVNlaXpl",
            "VG9rZW5zEiMuTGlxdWlkYXRlQ2FsY3VsYXRlU2VpemVUb2tlbnNJbnB1dBob",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgASRwoOU2V0Q2xvc2VGYWN0",
            "b3ISGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRoWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eSIAEkoKE1NldENvbGxhdGVyYWxGYWN0b3ISGS5TZXRDb2xs",
            "YXRlcmFsRmFjdG9ySW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJF",
            "CgxTZXRNYXhBc3NldHMSGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAElAKF1NldExpcXVpZGF0aW9uSW5j",
            "ZW50aXZlEhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUaFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkiABI4Cg1TdXBwb3J0TWFya2V0Eg0uYWVsZi5BZGRy",
            "ZXNzGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASSgoTU2V0TWFya2V0Qm9y",
            "cm93Q2FwcxIZLlNldE1hcmtldEJvcnJvd0NhcHNJbnB1dBoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIAEj8KFFNldEJvcnJvd0NhcEd1YXJkaWFuEg0uYWVs",
            "Zi5BZGRyZXNzGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASOwoQU2V0UGF1",
            "c2VHdWFyZGlhbhINLmFlbGYuQWRkcmVzcxoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eSIAEj4KDVNldE1pbnRQYXVzZWQSDy5TZXRQYXVzZWRJbnB1dBoaLmdv",
            "b2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUiABJACg9TZXRCb3Jyb3dQYXVzZWQS",
            "Dy5TZXRQYXVzZWRJbnB1dBoaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUi",
            "ABJNChFTZXRUcmFuc2ZlclBhdXNlZBIaLmdvb2dsZS5wcm90b2J1Zi5Cb29s",
            "VmFsdWUaGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlIgASSgoOU2V0U2Vp",
            "emVQYXVzZWQSGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlGhouZ29vZ2xl",
            "LnByb3RvYnVmLkJvb2xWYWx1ZSIAEjkKDlNldFByaWNlT3JhY2xlEg0uYWVs",
            "Zi5BZGRyZXNzGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASTgoaUmVmcmVz",
            "aFBsYXRmb3JtVG9rZW5TcGVlZHMSFi5nb29nbGUucHJvdG9idWYuRW1wdHka",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJIChJDbGFpbVBsYXRmb3JtVG9r",
            "ZW4SGC5DbGFpbVBsYXRmb3JtVG9rZW5JbnB1dBoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eSIAEk0KFFNldFBsYXRmb3JtVG9rZW5SYXRlEhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkludDY0VmFsdWUaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI9",
            "ChdBZGRQbGF0Zm9ybVRva2VuTWFya2V0cxIILkFUb2tlbnMaFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkiABJCChdEcm9wUGxhdGZvcm1Ub2tlbk1hcmtldBIN",
            "LmFlbGYuQWRkcmVzcxoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEi8KC0dl",
            "dEFzc2V0c0luEg0uYWVsZi5BZGRyZXNzGgouQXNzZXRMaXN0IgWIifcBARI+",
            "Cg9DaGVja01lbWJlcnNoaXASCC5BY2NvdW50GhouZ29vZ2xlLnByb3RvYnVm",
            "LkJvb2xWYWx1ZSIFiIn3AQESOAoNR2V0QWxsTWFya2V0cxIWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eRoILkFUb2tlbnMiBYiJ9wEBEjgKCEdldEFkbWluEhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5Gg0uYWVsZi5BZGRyZXNzIgWIifcBARI/",
            "Cg9HZXRQZW5kaW5nQWRtaW4SFi5nb29nbGUucHJvdG9idWYuRW1wdHkaDS5h",
            "ZWxmLkFkZHJlc3MiBYiJ9wEBEkwKDkdldENsb3NlRmFjdG9yEhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUi",
            "BYiJ9wEBEkgKE0dldENvbGxhdGVyYWxGYWN0b3ISDS5hZWxmLkFkZHJlc3Ma",
            "Gy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQESSgoMR2V0TWF4",
            "QXNzZXRzEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUiBYiJ9wEBElUKF0dldExpcXVpZGF0aW9uSW5jZW50",
            "aXZlEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDY0VmFsdWUiBYiJ9wEBEkgKE0dldE1hcmtldEJvcnJvd0NhcHMSDS5h",
            "ZWxmLkFkZHJlc3MaGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3",
            "AQESRAoUR2V0Qm9ycm93Q2FwR3VhcmRpYW4SFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkaDS5hZWxmLkFkZHJlc3MiBYiJ9wEBEncKH0dldEh5cG90aGV0aWNh",
            "bEFjY291bnRMaXF1aWRpdHkSJS5HZXRIeXBvdGhldGljYWxBY2NvdW50TGlx",
            "dWlkaXR5SW5wdXQaJi5HZXRIeXBvdGhldGljYWxBY2NvdW50TGlxdWlkaXR5",
            "T3V0cHV0IgWIifcBARI+Cg5HZXRQcmljZU9yYWNsZRIWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eRoNLmFlbGYuQWRkcmVzcyIFiIn3AQESKgoJR2V0TWFya2V0",
            "Eg0uYWVsZi5BZGRyZXNzGgcuTWFya2V0IgWIifcBARJHChNHZXRBY2NvdW50",
            "TGlxdWlkaXR5Eg0uYWVsZi5BZGRyZXNzGhouR2V0QWNjb3VudExpcXVpZGl0",
            "eU91dHB1dCIFiIn3AQESUgoUR2V0UGxhdGZvcm1Ub2tlblJhdGUSFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkaGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1",
            "ZSIFiIn3AQESSwoWR2V0UGxhdGZvcm1Ub2tlblNwZWVkcxINLmFlbGYuQWRk",
            "cmVzcxobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcBARJOChtH",
            "ZXRQbGF0Zm9ybVRva2VuU3VwcGx5U3RhdGUSDS5hZWxmLkFkZHJlc3MaGS5Q",
            "bGF0Zm9ybVRva2VuTWFya2V0U3RhdGUiBYiJ9wEBEk4KG0dldFBsYXRmb3Jt",
            "VG9rZW5Cb3Jyb3dTdGF0ZRINLmFlbGYuQWRkcmVzcxoZLlBsYXRmb3JtVG9r",
            "ZW5NYXJrZXRTdGF0ZSIFiIn3AQESQwodR2V0UGxhdGZvcm1Ub2tlblN1cHBs",
            "aWVySW5kZXgSCC5BY2NvdW50GhEuYWVsZi5CaWdJbnRWYWx1ZSIFiIn3AQES",
            "QwodR2V0UGxhdGZvcm1Ub2tlbkJvcnJvd2VySW5kZXgSCC5BY2NvdW50GhEu",
            "YWVsZi5CaWdJbnRWYWx1ZSIFiIn3AQESTAoXR2V0UGxhdGZvcm1Ub2tlbkFj",
            "Y3J1ZWQSDS5hZWxmLkFkZHJlc3MaGy5nb29nbGUucHJvdG9idWYuSW50NjRW",
            "YWx1ZSIFiIn3AQESQAoQR2V0UGF1c2VHdWFyZGlhbhIWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eRoNLmFlbGYuQWRkcmVzcyIFiIn3AQESVgoZR2V0VHJhbnNm",
            "ZXJHdWFyZGlhblBhdXNlZBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoaLmdv",
            "b2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUiBYiJ9wEBElMKFkdldFNlaXplR3Vh",
            "cmRpYW5QYXVzZWQSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGi5nb29nbGUu",
            "cHJvdG9idWYuQm9vbFZhbHVlIgWIifcBARJJChVHZXRNaW50R3VhcmRpYW5Q",
            "YXVzZWQSDS5hZWxmLkFkZHJlc3MaGi5nb29nbGUucHJvdG9idWYuQm9vbFZh",
            "bHVlIgWIifcBARJLChdHZXRCb3Jyb3dHdWFyZGlhblBhdXNlZBINLmFlbGYu",
            "QWRkcmVzcxoaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUiBYiJ9wEBElwK",
            "HkdldFBsYXRmb3JtVG9rZW5DbGFpbVRocmVzaG9sZBIWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eRobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcB",
            "ARJbChtHZXRQbGF0Zm9ybVRva2VuQ2xhaW1BbW91bnQSGC5DbGFpbVBsYXRm",
            "b3JtVG9rZW5JbnB1dBobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWI",
            "ifcBARocssz2ARdDb250cm9sbGVyQ29udHJhY3RTdGF0ZUIeqgIbQXdha2Vu",
            "LkNvbnRyYWN0cy5Db250cm9sbGVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.InitializeInput), global::Awaken.Contracts.Controller.InitializeInput.Parser, new[]{ "ATokenContract", "PlatformTokenSymbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.SetMarketBorrowCapsInput), global::Awaken.Contracts.Controller.SetMarketBorrowCapsInput.Parser, new[]{ "MarketBorrowCap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.MarketBorrowCap), global::Awaken.Contracts.Controller.MarketBorrowCap.Parser, new[]{ "AToken", "NewBorrowCap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.SetPausedInput), global::Awaken.Contracts.Controller.SetPausedInput.Parser, new[]{ "AToken", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.SeizeAllowedInput), global::Awaken.Contracts.Controller.SeizeAllowedInput.Parser, new[]{ "ATokenCollateral", "ATokenBorrowed", "Liquidator", "Borrower", "SeizeTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.SeizeVerifyInput), global::Awaken.Contracts.Controller.SeizeVerifyInput.Parser, new[]{ "ATokenCollateral", "ATokenBorrowed", "Liquidator", "Borrower", "SeizeTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.TransferAllowedInput), global::Awaken.Contracts.Controller.TransferAllowedInput.Parser, new[]{ "AToken", "Src", "Dst", "TransferTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.TransferVerifyInput), global::Awaken.Contracts.Controller.TransferVerifyInput.Parser, new[]{ "AToken", "Src", "Dst", "TransferTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.LiquidateCalculateSeizeTokensInput), global::Awaken.Contracts.Controller.LiquidateCalculateSeizeTokensInput.Parser, new[]{ "ATokenBorrowed", "ATokenCollateral", "ActualRepayAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.SetCollateralFactorInput), global::Awaken.Contracts.Controller.SetCollateralFactorInput.Parser, new[]{ "AToken", "NewCollateralFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.RepayBorrowVerifyInput), global::Awaken.Contracts.Controller.RepayBorrowVerifyInput.Parser, new[]{ "AToken", "Payer", "Borrower", "RepayAmount", "BorrowerIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.LiquidateBorrowAllowedInput), global::Awaken.Contracts.Controller.LiquidateBorrowAllowedInput.Parser, new[]{ "ATokenBorrowed", "ATokenCollateral", "Liquidator", "Borrower", "RepayAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.LiquidateBorrowVerifyInput), global::Awaken.Contracts.Controller.LiquidateBorrowVerifyInput.Parser, new[]{ "ATokenBorrowed", "ATokenCollateral", "Liquidator", "Borrower", "ActualRepayAmount", "SeizeTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.MintAllowedInput), global::Awaken.Contracts.Controller.MintAllowedInput.Parser, new[]{ "AToken", "Minter", "MintAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.MintVerifyInput), global::Awaken.Contracts.Controller.MintVerifyInput.Parser, new[]{ "AToken", "Minter", "ActualMintAmount", "MintTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.RedeemAllowedInput), global::Awaken.Contracts.Controller.RedeemAllowedInput.Parser, new[]{ "AToken", "Redeemer", "RedeemTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.RedeemVerifyInput), global::Awaken.Contracts.Controller.RedeemVerifyInput.Parser, new[]{ "AToken", "Minter", "RedeemAmount", "RedeemTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.BorrowAllowedInput), global::Awaken.Contracts.Controller.BorrowAllowedInput.Parser, new[]{ "AToken", "Borrower", "BorrowAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.BorrowVerifyInput), global::Awaken.Contracts.Controller.BorrowVerifyInput.Parser, new[]{ "AToken", "Borrower", "BorrowAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.RepayBorrowAllowedInput), global::Awaken.Contracts.Controller.RepayBorrowAllowedInput.Parser, new[]{ "AToken", "Payer", "Borrower", "RepayAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.GetHypotheticalAccountLiquidityInput), global::Awaken.Contracts.Controller.GetHypotheticalAccountLiquidityInput.Parser, new[]{ "Account", "ATokenModify", "RedeemTokens", "BorrowAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.ClaimPlatformTokenInput), global::Awaken.Contracts.Controller.ClaimPlatformTokenInput.Parser, new[]{ "Holders", "ATokens", "Borrowers", "Suppliers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.GetHypotheticalAccountLiquidityOutput), global::Awaken.Contracts.Controller.GetHypotheticalAccountLiquidityOutput.Parser, new[]{ "Liquidity", "Shortfall" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.GetAccountLiquidityOutput), global::Awaken.Contracts.Controller.GetAccountLiquidityOutput.Parser, new[]{ "Liquidity", "Shortfall" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.PlatformTokenMarketState), global::Awaken.Contracts.Controller.PlatformTokenMarketState.Parser, new[]{ "Index", "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.AssetList), global::Awaken.Contracts.Controller.AssetList.Parser, new[]{ "Assets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.Account), global::Awaken.Contracts.Controller.Account.Parser, new[]{ "AToken", "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.ATokens), global::Awaken.Contracts.Controller.ATokens.Parser, new[]{ "AToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.Market), global::Awaken.Contracts.Controller.Market.Parser, new[]{ "IsListed", "CollateralFactor", "AccountMembership", "IsPlatformTokened" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.MarketListed), global::Awaken.Contracts.Controller.MarketListed.Parser, new[]{ "AToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.MarketEntered), global::Awaken.Contracts.Controller.MarketEntered.Parser, new[]{ "AToken", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.MarketExited), global::Awaken.Contracts.Controller.MarketExited.Parser, new[]{ "AToken", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.CloseFactorChanged), global::Awaken.Contracts.Controller.CloseFactorChanged.Parser, new[]{ "OldCloseFactor", "NewCloseFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.CollateralFactorChanged), global::Awaken.Contracts.Controller.CollateralFactorChanged.Parser, new[]{ "AToken", "OldCollateralFactor", "NewCollateralFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.LiquidationIncentiveChanged), global::Awaken.Contracts.Controller.LiquidationIncentiveChanged.Parser, new[]{ "OldLiquidationIncentive", "NewLiquidationIncentive" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.MaxAssetsChanged), global::Awaken.Contracts.Controller.MaxAssetsChanged.Parser, new[]{ "OldMaxAssets", "NewMaxAssets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.PriceOracleChanged), global::Awaken.Contracts.Controller.PriceOracleChanged.Parser, new[]{ "OldPriceOracle", "NewPriceOracle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.PauseGuardianChanged), global::Awaken.Contracts.Controller.PauseGuardianChanged.Parser, new[]{ "OldPauseGuardian", "NewPauseGuardian" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.ActionPaused), global::Awaken.Contracts.Controller.ActionPaused.Parser, new[]{ "AToken", "Action", "PauseState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.MarketPlatformTokened), global::Awaken.Contracts.Controller.MarketPlatformTokened.Parser, new[]{ "AToken", "IsPlatformTokened" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.PlatformTokenRateChanged), global::Awaken.Contracts.Controller.PlatformTokenRateChanged.Parser, new[]{ "OldPlatformTokenRate", "NewPlatformTokenRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.PlatformTokenSpeedUpdated), global::Awaken.Contracts.Controller.PlatformTokenSpeedUpdated.Parser, new[]{ "AToken", "NewSpeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.DistributedSupplierPlatformToken), global::Awaken.Contracts.Controller.DistributedSupplierPlatformToken.Parser, new[]{ "AToken", "Supplier", "PlatformTokenDelta", "PlatformTokenSupplyIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.DistributedBorrowerPlatformToken), global::Awaken.Contracts.Controller.DistributedBorrowerPlatformToken.Parser, new[]{ "AToken", "Borrower", "PlatformTokenDelta", "PlatformTokenBorrowIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.BorrowCapChanged), global::Awaken.Contracts.Controller.BorrowCapChanged.Parser, new[]{ "AToken", "NewBorrowCap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.Controller.BorrowCapGuardianChanged), global::Awaken.Contracts.Controller.BorrowCapGuardianChanged.Parser, new[]{ "OldBorrowCapGuardian", "NewBorrowCapGuardian" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InitializeInput : pb::IMessage<InitializeInput> {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput(InitializeInput other) : this() {
      aTokenContract_ = other.aTokenContract_ != null ? other.aTokenContract_.Clone() : null;
      platformTokenSymbol_ = other.platformTokenSymbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "a_token_contract" field.</summary>
    public const int ATokenContractFieldNumber = 1;
    private global::AElf.Types.Address aTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenContract {
      get { return aTokenContract_; }
      set {
        aTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "platform_token_symbol" field.</summary>
    public const int PlatformTokenSymbolFieldNumber = 2;
    private string platformTokenSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformTokenSymbol {
      get { return platformTokenSymbol_; }
      set {
        platformTokenSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ATokenContract, other.ATokenContract)) return false;
      if (PlatformTokenSymbol != other.PlatformTokenSymbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aTokenContract_ != null) hash ^= ATokenContract.GetHashCode();
      if (PlatformTokenSymbol.Length != 0) hash ^= PlatformTokenSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aTokenContract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ATokenContract);
      }
      if (PlatformTokenSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlatformTokenSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenContract);
      }
      if (PlatformTokenSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformTokenSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.aTokenContract_ != null) {
        if (aTokenContract_ == null) {
          ATokenContract = new global::AElf.Types.Address();
        }
        ATokenContract.MergeFrom(other.ATokenContract);
      }
      if (other.PlatformTokenSymbol.Length != 0) {
        PlatformTokenSymbol = other.PlatformTokenSymbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aTokenContract_ == null) {
              ATokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenContract);
            break;
          }
          case 18: {
            PlatformTokenSymbol = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetMarketBorrowCapsInput : pb::IMessage<SetMarketBorrowCapsInput> {
    private static readonly pb::MessageParser<SetMarketBorrowCapsInput> _parser = new pb::MessageParser<SetMarketBorrowCapsInput>(() => new SetMarketBorrowCapsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMarketBorrowCapsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMarketBorrowCapsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMarketBorrowCapsInput(SetMarketBorrowCapsInput other) : this() {
      marketBorrowCap_ = other.marketBorrowCap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMarketBorrowCapsInput Clone() {
      return new SetMarketBorrowCapsInput(this);
    }

    /// <summary>Field number for the "market_borrow_cap" field.</summary>
    public const int MarketBorrowCapFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Awaken.Contracts.Controller.MarketBorrowCap> _repeated_marketBorrowCap_codec
        = pb::FieldCodec.ForMessage(10, global::Awaken.Contracts.Controller.MarketBorrowCap.Parser);
    private readonly pbc::RepeatedField<global::Awaken.Contracts.Controller.MarketBorrowCap> marketBorrowCap_ = new pbc::RepeatedField<global::Awaken.Contracts.Controller.MarketBorrowCap>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Awaken.Contracts.Controller.MarketBorrowCap> MarketBorrowCap {
      get { return marketBorrowCap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMarketBorrowCapsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMarketBorrowCapsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!marketBorrowCap_.Equals(other.marketBorrowCap_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= marketBorrowCap_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      marketBorrowCap_.WriteTo(output, _repeated_marketBorrowCap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += marketBorrowCap_.CalculateSize(_repeated_marketBorrowCap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMarketBorrowCapsInput other) {
      if (other == null) {
        return;
      }
      marketBorrowCap_.Add(other.marketBorrowCap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            marketBorrowCap_.AddEntriesFrom(input, _repeated_marketBorrowCap_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MarketBorrowCap : pb::IMessage<MarketBorrowCap> {
    private static readonly pb::MessageParser<MarketBorrowCap> _parser = new pb::MessageParser<MarketBorrowCap>(() => new MarketBorrowCap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketBorrowCap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBorrowCap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBorrowCap(MarketBorrowCap other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      newBorrowCap_ = other.newBorrowCap_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBorrowCap Clone() {
      return new MarketBorrowCap(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "new_borrow_cap" field.</summary>
    public const int NewBorrowCapFieldNumber = 2;
    private long newBorrowCap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewBorrowCap {
      get { return newBorrowCap_; }
      set {
        newBorrowCap_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketBorrowCap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketBorrowCap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (NewBorrowCap != other.NewBorrowCap) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (NewBorrowCap != 0L) hash ^= NewBorrowCap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (NewBorrowCap != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewBorrowCap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (NewBorrowCap != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewBorrowCap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketBorrowCap other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.NewBorrowCap != 0L) {
        NewBorrowCap = other.NewBorrowCap;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            NewBorrowCap = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetPausedInput : pb::IMessage<SetPausedInput> {
    private static readonly pb::MessageParser<SetPausedInput> _parser = new pb::MessageParser<SetPausedInput>(() => new SetPausedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPausedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPausedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPausedInput(SetPausedInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPausedInput Clone() {
      return new SetPausedInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPausedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPausedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (State != false) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (State != false) {
        output.WriteRawTag(16);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (State != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPausedInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.State != false) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            State = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SeizeAllowedInput : pb::IMessage<SeizeAllowedInput> {
    private static readonly pb::MessageParser<SeizeAllowedInput> _parser = new pb::MessageParser<SeizeAllowedInput>(() => new SeizeAllowedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeizeAllowedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeAllowedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeAllowedInput(SeizeAllowedInput other) : this() {
      aTokenCollateral_ = other.aTokenCollateral_ != null ? other.aTokenCollateral_.Clone() : null;
      aTokenBorrowed_ = other.aTokenBorrowed_ != null ? other.aTokenBorrowed_.Clone() : null;
      liquidator_ = other.liquidator_ != null ? other.liquidator_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      seizeTokens_ = other.seizeTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeAllowedInput Clone() {
      return new SeizeAllowedInput(this);
    }

    /// <summary>Field number for the "a_token_collateral" field.</summary>
    public const int ATokenCollateralFieldNumber = 1;
    private global::AElf.Types.Address aTokenCollateral_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenCollateral {
      get { return aTokenCollateral_; }
      set {
        aTokenCollateral_ = value;
      }
    }

    /// <summary>Field number for the "a_token_borrowed" field.</summary>
    public const int ATokenBorrowedFieldNumber = 2;
    private global::AElf.Types.Address aTokenBorrowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenBorrowed {
      get { return aTokenBorrowed_; }
      set {
        aTokenBorrowed_ = value;
      }
    }

    /// <summary>Field number for the "liquidator" field.</summary>
    public const int LiquidatorFieldNumber = 3;
    private global::AElf.Types.Address liquidator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Liquidator {
      get { return liquidator_; }
      set {
        liquidator_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 4;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "seize_tokens" field.</summary>
    public const int SeizeTokensFieldNumber = 5;
    private long seizeTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SeizeTokens {
      get { return seizeTokens_; }
      set {
        seizeTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeizeAllowedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeizeAllowedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ATokenCollateral, other.ATokenCollateral)) return false;
      if (!object.Equals(ATokenBorrowed, other.ATokenBorrowed)) return false;
      if (!object.Equals(Liquidator, other.Liquidator)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (SeizeTokens != other.SeizeTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aTokenCollateral_ != null) hash ^= ATokenCollateral.GetHashCode();
      if (aTokenBorrowed_ != null) hash ^= ATokenBorrowed.GetHashCode();
      if (liquidator_ != null) hash ^= Liquidator.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (SeizeTokens != 0L) hash ^= SeizeTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aTokenCollateral_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ATokenCollateral);
      }
      if (aTokenBorrowed_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ATokenBorrowed);
      }
      if (liquidator_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Liquidator);
      }
      if (borrower_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Borrower);
      }
      if (SeizeTokens != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SeizeTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aTokenCollateral_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenCollateral);
      }
      if (aTokenBorrowed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenBorrowed);
      }
      if (liquidator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Liquidator);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (SeizeTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeizeTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeizeAllowedInput other) {
      if (other == null) {
        return;
      }
      if (other.aTokenCollateral_ != null) {
        if (aTokenCollateral_ == null) {
          ATokenCollateral = new global::AElf.Types.Address();
        }
        ATokenCollateral.MergeFrom(other.ATokenCollateral);
      }
      if (other.aTokenBorrowed_ != null) {
        if (aTokenBorrowed_ == null) {
          ATokenBorrowed = new global::AElf.Types.Address();
        }
        ATokenBorrowed.MergeFrom(other.ATokenBorrowed);
      }
      if (other.liquidator_ != null) {
        if (liquidator_ == null) {
          Liquidator = new global::AElf.Types.Address();
        }
        Liquidator.MergeFrom(other.Liquidator);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.SeizeTokens != 0L) {
        SeizeTokens = other.SeizeTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aTokenCollateral_ == null) {
              ATokenCollateral = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenCollateral);
            break;
          }
          case 18: {
            if (aTokenBorrowed_ == null) {
              ATokenBorrowed = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenBorrowed);
            break;
          }
          case 26: {
            if (liquidator_ == null) {
              Liquidator = new global::AElf.Types.Address();
            }
            input.ReadMessage(Liquidator);
            break;
          }
          case 34: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 40: {
            SeizeTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SeizeVerifyInput : pb::IMessage<SeizeVerifyInput> {
    private static readonly pb::MessageParser<SeizeVerifyInput> _parser = new pb::MessageParser<SeizeVerifyInput>(() => new SeizeVerifyInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeizeVerifyInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeVerifyInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeVerifyInput(SeizeVerifyInput other) : this() {
      aTokenCollateral_ = other.aTokenCollateral_ != null ? other.aTokenCollateral_.Clone() : null;
      aTokenBorrowed_ = other.aTokenBorrowed_ != null ? other.aTokenBorrowed_.Clone() : null;
      liquidator_ = other.liquidator_ != null ? other.liquidator_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      seizeTokens_ = other.seizeTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeVerifyInput Clone() {
      return new SeizeVerifyInput(this);
    }

    /// <summary>Field number for the "a_token_collateral" field.</summary>
    public const int ATokenCollateralFieldNumber = 1;
    private global::AElf.Types.Address aTokenCollateral_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenCollateral {
      get { return aTokenCollateral_; }
      set {
        aTokenCollateral_ = value;
      }
    }

    /// <summary>Field number for the "a_token_borrowed" field.</summary>
    public const int ATokenBorrowedFieldNumber = 2;
    private global::AElf.Types.Address aTokenBorrowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenBorrowed {
      get { return aTokenBorrowed_; }
      set {
        aTokenBorrowed_ = value;
      }
    }

    /// <summary>Field number for the "liquidator" field.</summary>
    public const int LiquidatorFieldNumber = 3;
    private global::AElf.Types.Address liquidator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Liquidator {
      get { return liquidator_; }
      set {
        liquidator_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 4;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "seize_tokens" field.</summary>
    public const int SeizeTokensFieldNumber = 5;
    private long seizeTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SeizeTokens {
      get { return seizeTokens_; }
      set {
        seizeTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeizeVerifyInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeizeVerifyInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ATokenCollateral, other.ATokenCollateral)) return false;
      if (!object.Equals(ATokenBorrowed, other.ATokenBorrowed)) return false;
      if (!object.Equals(Liquidator, other.Liquidator)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (SeizeTokens != other.SeizeTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aTokenCollateral_ != null) hash ^= ATokenCollateral.GetHashCode();
      if (aTokenBorrowed_ != null) hash ^= ATokenBorrowed.GetHashCode();
      if (liquidator_ != null) hash ^= Liquidator.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (SeizeTokens != 0L) hash ^= SeizeTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aTokenCollateral_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ATokenCollateral);
      }
      if (aTokenBorrowed_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ATokenBorrowed);
      }
      if (liquidator_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Liquidator);
      }
      if (borrower_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Borrower);
      }
      if (SeizeTokens != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SeizeTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aTokenCollateral_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenCollateral);
      }
      if (aTokenBorrowed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenBorrowed);
      }
      if (liquidator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Liquidator);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (SeizeTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeizeTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeizeVerifyInput other) {
      if (other == null) {
        return;
      }
      if (other.aTokenCollateral_ != null) {
        if (aTokenCollateral_ == null) {
          ATokenCollateral = new global::AElf.Types.Address();
        }
        ATokenCollateral.MergeFrom(other.ATokenCollateral);
      }
      if (other.aTokenBorrowed_ != null) {
        if (aTokenBorrowed_ == null) {
          ATokenBorrowed = new global::AElf.Types.Address();
        }
        ATokenBorrowed.MergeFrom(other.ATokenBorrowed);
      }
      if (other.liquidator_ != null) {
        if (liquidator_ == null) {
          Liquidator = new global::AElf.Types.Address();
        }
        Liquidator.MergeFrom(other.Liquidator);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.SeizeTokens != 0L) {
        SeizeTokens = other.SeizeTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aTokenCollateral_ == null) {
              ATokenCollateral = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenCollateral);
            break;
          }
          case 18: {
            if (aTokenBorrowed_ == null) {
              ATokenBorrowed = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenBorrowed);
            break;
          }
          case 26: {
            if (liquidator_ == null) {
              Liquidator = new global::AElf.Types.Address();
            }
            input.ReadMessage(Liquidator);
            break;
          }
          case 34: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 40: {
            SeizeTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferAllowedInput : pb::IMessage<TransferAllowedInput> {
    private static readonly pb::MessageParser<TransferAllowedInput> _parser = new pb::MessageParser<TransferAllowedInput>(() => new TransferAllowedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferAllowedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferAllowedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferAllowedInput(TransferAllowedInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      src_ = other.src_ != null ? other.src_.Clone() : null;
      dst_ = other.dst_ != null ? other.dst_.Clone() : null;
      transferTokens_ = other.transferTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferAllowedInput Clone() {
      return new TransferAllowedInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 2;
    private global::AElf.Types.Address src_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Src {
      get { return src_; }
      set {
        src_ = value;
      }
    }

    /// <summary>Field number for the "dst" field.</summary>
    public const int DstFieldNumber = 3;
    private global::AElf.Types.Address dst_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Dst {
      get { return dst_; }
      set {
        dst_ = value;
      }
    }

    /// <summary>Field number for the "transfer_tokens" field.</summary>
    public const int TransferTokensFieldNumber = 4;
    private long transferTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransferTokens {
      get { return transferTokens_; }
      set {
        transferTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferAllowedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferAllowedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Src, other.Src)) return false;
      if (!object.Equals(Dst, other.Dst)) return false;
      if (TransferTokens != other.TransferTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (src_ != null) hash ^= Src.GetHashCode();
      if (dst_ != null) hash ^= Dst.GetHashCode();
      if (TransferTokens != 0L) hash ^= TransferTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (src_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Src);
      }
      if (dst_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dst);
      }
      if (TransferTokens != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TransferTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (src_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Src);
      }
      if (dst_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dst);
      }
      if (TransferTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransferTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferAllowedInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.src_ != null) {
        if (src_ == null) {
          Src = new global::AElf.Types.Address();
        }
        Src.MergeFrom(other.Src);
      }
      if (other.dst_ != null) {
        if (dst_ == null) {
          Dst = new global::AElf.Types.Address();
        }
        Dst.MergeFrom(other.Dst);
      }
      if (other.TransferTokens != 0L) {
        TransferTokens = other.TransferTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (src_ == null) {
              Src = new global::AElf.Types.Address();
            }
            input.ReadMessage(Src);
            break;
          }
          case 26: {
            if (dst_ == null) {
              Dst = new global::AElf.Types.Address();
            }
            input.ReadMessage(Dst);
            break;
          }
          case 32: {
            TransferTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferVerifyInput : pb::IMessage<TransferVerifyInput> {
    private static readonly pb::MessageParser<TransferVerifyInput> _parser = new pb::MessageParser<TransferVerifyInput>(() => new TransferVerifyInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferVerifyInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferVerifyInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferVerifyInput(TransferVerifyInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      src_ = other.src_ != null ? other.src_.Clone() : null;
      dst_ = other.dst_ != null ? other.dst_.Clone() : null;
      transferTokens_ = other.transferTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferVerifyInput Clone() {
      return new TransferVerifyInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 2;
    private global::AElf.Types.Address src_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Src {
      get { return src_; }
      set {
        src_ = value;
      }
    }

    /// <summary>Field number for the "dst" field.</summary>
    public const int DstFieldNumber = 3;
    private global::AElf.Types.Address dst_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Dst {
      get { return dst_; }
      set {
        dst_ = value;
      }
    }

    /// <summary>Field number for the "transfer_tokens" field.</summary>
    public const int TransferTokensFieldNumber = 4;
    private long transferTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransferTokens {
      get { return transferTokens_; }
      set {
        transferTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferVerifyInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferVerifyInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Src, other.Src)) return false;
      if (!object.Equals(Dst, other.Dst)) return false;
      if (TransferTokens != other.TransferTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (src_ != null) hash ^= Src.GetHashCode();
      if (dst_ != null) hash ^= Dst.GetHashCode();
      if (TransferTokens != 0L) hash ^= TransferTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (src_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Src);
      }
      if (dst_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dst);
      }
      if (TransferTokens != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TransferTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (src_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Src);
      }
      if (dst_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dst);
      }
      if (TransferTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransferTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferVerifyInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.src_ != null) {
        if (src_ == null) {
          Src = new global::AElf.Types.Address();
        }
        Src.MergeFrom(other.Src);
      }
      if (other.dst_ != null) {
        if (dst_ == null) {
          Dst = new global::AElf.Types.Address();
        }
        Dst.MergeFrom(other.Dst);
      }
      if (other.TransferTokens != 0L) {
        TransferTokens = other.TransferTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (src_ == null) {
              Src = new global::AElf.Types.Address();
            }
            input.ReadMessage(Src);
            break;
          }
          case 26: {
            if (dst_ == null) {
              Dst = new global::AElf.Types.Address();
            }
            input.ReadMessage(Dst);
            break;
          }
          case 32: {
            TransferTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LiquidateCalculateSeizeTokensInput : pb::IMessage<LiquidateCalculateSeizeTokensInput> {
    private static readonly pb::MessageParser<LiquidateCalculateSeizeTokensInput> _parser = new pb::MessageParser<LiquidateCalculateSeizeTokensInput>(() => new LiquidateCalculateSeizeTokensInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiquidateCalculateSeizeTokensInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateCalculateSeizeTokensInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateCalculateSeizeTokensInput(LiquidateCalculateSeizeTokensInput other) : this() {
      aTokenBorrowed_ = other.aTokenBorrowed_ != null ? other.aTokenBorrowed_.Clone() : null;
      aTokenCollateral_ = other.aTokenCollateral_ != null ? other.aTokenCollateral_.Clone() : null;
      actualRepayAmount_ = other.actualRepayAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateCalculateSeizeTokensInput Clone() {
      return new LiquidateCalculateSeizeTokensInput(this);
    }

    /// <summary>Field number for the "a_token_borrowed" field.</summary>
    public const int ATokenBorrowedFieldNumber = 1;
    private global::AElf.Types.Address aTokenBorrowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenBorrowed {
      get { return aTokenBorrowed_; }
      set {
        aTokenBorrowed_ = value;
      }
    }

    /// <summary>Field number for the "a_token_collateral" field.</summary>
    public const int ATokenCollateralFieldNumber = 2;
    private global::AElf.Types.Address aTokenCollateral_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenCollateral {
      get { return aTokenCollateral_; }
      set {
        aTokenCollateral_ = value;
      }
    }

    /// <summary>Field number for the "actual_repay_amount" field.</summary>
    public const int ActualRepayAmountFieldNumber = 3;
    private long actualRepayAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActualRepayAmount {
      get { return actualRepayAmount_; }
      set {
        actualRepayAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiquidateCalculateSeizeTokensInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiquidateCalculateSeizeTokensInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ATokenBorrowed, other.ATokenBorrowed)) return false;
      if (!object.Equals(ATokenCollateral, other.ATokenCollateral)) return false;
      if (ActualRepayAmount != other.ActualRepayAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aTokenBorrowed_ != null) hash ^= ATokenBorrowed.GetHashCode();
      if (aTokenCollateral_ != null) hash ^= ATokenCollateral.GetHashCode();
      if (ActualRepayAmount != 0L) hash ^= ActualRepayAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aTokenBorrowed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ATokenBorrowed);
      }
      if (aTokenCollateral_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ATokenCollateral);
      }
      if (ActualRepayAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ActualRepayAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aTokenBorrowed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenBorrowed);
      }
      if (aTokenCollateral_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenCollateral);
      }
      if (ActualRepayAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActualRepayAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiquidateCalculateSeizeTokensInput other) {
      if (other == null) {
        return;
      }
      if (other.aTokenBorrowed_ != null) {
        if (aTokenBorrowed_ == null) {
          ATokenBorrowed = new global::AElf.Types.Address();
        }
        ATokenBorrowed.MergeFrom(other.ATokenBorrowed);
      }
      if (other.aTokenCollateral_ != null) {
        if (aTokenCollateral_ == null) {
          ATokenCollateral = new global::AElf.Types.Address();
        }
        ATokenCollateral.MergeFrom(other.ATokenCollateral);
      }
      if (other.ActualRepayAmount != 0L) {
        ActualRepayAmount = other.ActualRepayAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aTokenBorrowed_ == null) {
              ATokenBorrowed = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenBorrowed);
            break;
          }
          case 18: {
            if (aTokenCollateral_ == null) {
              ATokenCollateral = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenCollateral);
            break;
          }
          case 24: {
            ActualRepayAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetCollateralFactorInput : pb::IMessage<SetCollateralFactorInput> {
    private static readonly pb::MessageParser<SetCollateralFactorInput> _parser = new pb::MessageParser<SetCollateralFactorInput>(() => new SetCollateralFactorInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetCollateralFactorInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetCollateralFactorInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetCollateralFactorInput(SetCollateralFactorInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      newCollateralFactor_ = other.newCollateralFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetCollateralFactorInput Clone() {
      return new SetCollateralFactorInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "new_collateral_factor" field.</summary>
    public const int NewCollateralFactorFieldNumber = 2;
    private long newCollateralFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewCollateralFactor {
      get { return newCollateralFactor_; }
      set {
        newCollateralFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetCollateralFactorInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetCollateralFactorInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (NewCollateralFactor != other.NewCollateralFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (NewCollateralFactor != 0L) hash ^= NewCollateralFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (NewCollateralFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewCollateralFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (NewCollateralFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewCollateralFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetCollateralFactorInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.NewCollateralFactor != 0L) {
        NewCollateralFactor = other.NewCollateralFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            NewCollateralFactor = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepayBorrowVerifyInput : pb::IMessage<RepayBorrowVerifyInput> {
    private static readonly pb::MessageParser<RepayBorrowVerifyInput> _parser = new pb::MessageParser<RepayBorrowVerifyInput>(() => new RepayBorrowVerifyInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepayBorrowVerifyInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowVerifyInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowVerifyInput(RepayBorrowVerifyInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      payer_ = other.payer_ != null ? other.payer_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      repayAmount_ = other.repayAmount_;
      borrowerIndex_ = other.borrowerIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowVerifyInput Clone() {
      return new RepayBorrowVerifyInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "payer" field.</summary>
    public const int PayerFieldNumber = 2;
    private global::AElf.Types.Address payer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Payer {
      get { return payer_; }
      set {
        payer_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 3;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "repay_amount" field.</summary>
    public const int RepayAmountFieldNumber = 4;
    private long repayAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RepayAmount {
      get { return repayAmount_; }
      set {
        repayAmount_ = value;
      }
    }

    /// <summary>Field number for the "borrower_index" field.</summary>
    public const int BorrowerIndexFieldNumber = 5;
    private long borrowerIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowerIndex {
      get { return borrowerIndex_; }
      set {
        borrowerIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepayBorrowVerifyInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepayBorrowVerifyInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Payer, other.Payer)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (RepayAmount != other.RepayAmount) return false;
      if (BorrowerIndex != other.BorrowerIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (payer_ != null) hash ^= Payer.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (RepayAmount != 0L) hash ^= RepayAmount.GetHashCode();
      if (BorrowerIndex != 0L) hash ^= BorrowerIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (payer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payer);
      }
      if (borrower_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Borrower);
      }
      if (RepayAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RepayAmount);
      }
      if (BorrowerIndex != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(BorrowerIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (payer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payer);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (RepayAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RepayAmount);
      }
      if (BorrowerIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowerIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepayBorrowVerifyInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.payer_ != null) {
        if (payer_ == null) {
          Payer = new global::AElf.Types.Address();
        }
        Payer.MergeFrom(other.Payer);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.RepayAmount != 0L) {
        RepayAmount = other.RepayAmount;
      }
      if (other.BorrowerIndex != 0L) {
        BorrowerIndex = other.BorrowerIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (payer_ == null) {
              Payer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Payer);
            break;
          }
          case 26: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 32: {
            RepayAmount = input.ReadInt64();
            break;
          }
          case 40: {
            BorrowerIndex = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LiquidateBorrowAllowedInput : pb::IMessage<LiquidateBorrowAllowedInput> {
    private static readonly pb::MessageParser<LiquidateBorrowAllowedInput> _parser = new pb::MessageParser<LiquidateBorrowAllowedInput>(() => new LiquidateBorrowAllowedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiquidateBorrowAllowedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowAllowedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowAllowedInput(LiquidateBorrowAllowedInput other) : this() {
      aTokenBorrowed_ = other.aTokenBorrowed_ != null ? other.aTokenBorrowed_.Clone() : null;
      aTokenCollateral_ = other.aTokenCollateral_ != null ? other.aTokenCollateral_.Clone() : null;
      liquidator_ = other.liquidator_ != null ? other.liquidator_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      repayAmount_ = other.repayAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowAllowedInput Clone() {
      return new LiquidateBorrowAllowedInput(this);
    }

    /// <summary>Field number for the "a_token_borrowed" field.</summary>
    public const int ATokenBorrowedFieldNumber = 1;
    private global::AElf.Types.Address aTokenBorrowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenBorrowed {
      get { return aTokenBorrowed_; }
      set {
        aTokenBorrowed_ = value;
      }
    }

    /// <summary>Field number for the "a_token_collateral" field.</summary>
    public const int ATokenCollateralFieldNumber = 2;
    private global::AElf.Types.Address aTokenCollateral_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenCollateral {
      get { return aTokenCollateral_; }
      set {
        aTokenCollateral_ = value;
      }
    }

    /// <summary>Field number for the "liquidator" field.</summary>
    public const int LiquidatorFieldNumber = 3;
    private global::AElf.Types.Address liquidator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Liquidator {
      get { return liquidator_; }
      set {
        liquidator_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 4;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "repay_amount" field.</summary>
    public const int RepayAmountFieldNumber = 5;
    private long repayAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RepayAmount {
      get { return repayAmount_; }
      set {
        repayAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiquidateBorrowAllowedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiquidateBorrowAllowedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ATokenBorrowed, other.ATokenBorrowed)) return false;
      if (!object.Equals(ATokenCollateral, other.ATokenCollateral)) return false;
      if (!object.Equals(Liquidator, other.Liquidator)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (RepayAmount != other.RepayAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aTokenBorrowed_ != null) hash ^= ATokenBorrowed.GetHashCode();
      if (aTokenCollateral_ != null) hash ^= ATokenCollateral.GetHashCode();
      if (liquidator_ != null) hash ^= Liquidator.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (RepayAmount != 0L) hash ^= RepayAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aTokenBorrowed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ATokenBorrowed);
      }
      if (aTokenCollateral_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ATokenCollateral);
      }
      if (liquidator_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Liquidator);
      }
      if (borrower_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Borrower);
      }
      if (RepayAmount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RepayAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aTokenBorrowed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenBorrowed);
      }
      if (aTokenCollateral_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenCollateral);
      }
      if (liquidator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Liquidator);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (RepayAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RepayAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiquidateBorrowAllowedInput other) {
      if (other == null) {
        return;
      }
      if (other.aTokenBorrowed_ != null) {
        if (aTokenBorrowed_ == null) {
          ATokenBorrowed = new global::AElf.Types.Address();
        }
        ATokenBorrowed.MergeFrom(other.ATokenBorrowed);
      }
      if (other.aTokenCollateral_ != null) {
        if (aTokenCollateral_ == null) {
          ATokenCollateral = new global::AElf.Types.Address();
        }
        ATokenCollateral.MergeFrom(other.ATokenCollateral);
      }
      if (other.liquidator_ != null) {
        if (liquidator_ == null) {
          Liquidator = new global::AElf.Types.Address();
        }
        Liquidator.MergeFrom(other.Liquidator);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.RepayAmount != 0L) {
        RepayAmount = other.RepayAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aTokenBorrowed_ == null) {
              ATokenBorrowed = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenBorrowed);
            break;
          }
          case 18: {
            if (aTokenCollateral_ == null) {
              ATokenCollateral = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenCollateral);
            break;
          }
          case 26: {
            if (liquidator_ == null) {
              Liquidator = new global::AElf.Types.Address();
            }
            input.ReadMessage(Liquidator);
            break;
          }
          case 34: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 40: {
            RepayAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LiquidateBorrowVerifyInput : pb::IMessage<LiquidateBorrowVerifyInput> {
    private static readonly pb::MessageParser<LiquidateBorrowVerifyInput> _parser = new pb::MessageParser<LiquidateBorrowVerifyInput>(() => new LiquidateBorrowVerifyInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiquidateBorrowVerifyInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowVerifyInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowVerifyInput(LiquidateBorrowVerifyInput other) : this() {
      aTokenBorrowed_ = other.aTokenBorrowed_ != null ? other.aTokenBorrowed_.Clone() : null;
      aTokenCollateral_ = other.aTokenCollateral_ != null ? other.aTokenCollateral_.Clone() : null;
      liquidator_ = other.liquidator_ != null ? other.liquidator_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      actualRepayAmount_ = other.actualRepayAmount_;
      seizeTokens_ = other.seizeTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowVerifyInput Clone() {
      return new LiquidateBorrowVerifyInput(this);
    }

    /// <summary>Field number for the "a_token_borrowed" field.</summary>
    public const int ATokenBorrowedFieldNumber = 1;
    private global::AElf.Types.Address aTokenBorrowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenBorrowed {
      get { return aTokenBorrowed_; }
      set {
        aTokenBorrowed_ = value;
      }
    }

    /// <summary>Field number for the "a_token_collateral" field.</summary>
    public const int ATokenCollateralFieldNumber = 2;
    private global::AElf.Types.Address aTokenCollateral_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenCollateral {
      get { return aTokenCollateral_; }
      set {
        aTokenCollateral_ = value;
      }
    }

    /// <summary>Field number for the "liquidator" field.</summary>
    public const int LiquidatorFieldNumber = 3;
    private global::AElf.Types.Address liquidator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Liquidator {
      get { return liquidator_; }
      set {
        liquidator_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 4;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "actual_repay_amount" field.</summary>
    public const int ActualRepayAmountFieldNumber = 5;
    private long actualRepayAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActualRepayAmount {
      get { return actualRepayAmount_; }
      set {
        actualRepayAmount_ = value;
      }
    }

    /// <summary>Field number for the "seize_tokens" field.</summary>
    public const int SeizeTokensFieldNumber = 6;
    private long seizeTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SeizeTokens {
      get { return seizeTokens_; }
      set {
        seizeTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiquidateBorrowVerifyInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiquidateBorrowVerifyInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ATokenBorrowed, other.ATokenBorrowed)) return false;
      if (!object.Equals(ATokenCollateral, other.ATokenCollateral)) return false;
      if (!object.Equals(Liquidator, other.Liquidator)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (ActualRepayAmount != other.ActualRepayAmount) return false;
      if (SeizeTokens != other.SeizeTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aTokenBorrowed_ != null) hash ^= ATokenBorrowed.GetHashCode();
      if (aTokenCollateral_ != null) hash ^= ATokenCollateral.GetHashCode();
      if (liquidator_ != null) hash ^= Liquidator.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (ActualRepayAmount != 0L) hash ^= ActualRepayAmount.GetHashCode();
      if (SeizeTokens != 0L) hash ^= SeizeTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aTokenBorrowed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ATokenBorrowed);
      }
      if (aTokenCollateral_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ATokenCollateral);
      }
      if (liquidator_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Liquidator);
      }
      if (borrower_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Borrower);
      }
      if (ActualRepayAmount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ActualRepayAmount);
      }
      if (SeizeTokens != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(SeizeTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aTokenBorrowed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenBorrowed);
      }
      if (aTokenCollateral_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenCollateral);
      }
      if (liquidator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Liquidator);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (ActualRepayAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActualRepayAmount);
      }
      if (SeizeTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeizeTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiquidateBorrowVerifyInput other) {
      if (other == null) {
        return;
      }
      if (other.aTokenBorrowed_ != null) {
        if (aTokenBorrowed_ == null) {
          ATokenBorrowed = new global::AElf.Types.Address();
        }
        ATokenBorrowed.MergeFrom(other.ATokenBorrowed);
      }
      if (other.aTokenCollateral_ != null) {
        if (aTokenCollateral_ == null) {
          ATokenCollateral = new global::AElf.Types.Address();
        }
        ATokenCollateral.MergeFrom(other.ATokenCollateral);
      }
      if (other.liquidator_ != null) {
        if (liquidator_ == null) {
          Liquidator = new global::AElf.Types.Address();
        }
        Liquidator.MergeFrom(other.Liquidator);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.ActualRepayAmount != 0L) {
        ActualRepayAmount = other.ActualRepayAmount;
      }
      if (other.SeizeTokens != 0L) {
        SeizeTokens = other.SeizeTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aTokenBorrowed_ == null) {
              ATokenBorrowed = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenBorrowed);
            break;
          }
          case 18: {
            if (aTokenCollateral_ == null) {
              ATokenCollateral = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenCollateral);
            break;
          }
          case 26: {
            if (liquidator_ == null) {
              Liquidator = new global::AElf.Types.Address();
            }
            input.ReadMessage(Liquidator);
            break;
          }
          case 34: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 40: {
            ActualRepayAmount = input.ReadInt64();
            break;
          }
          case 48: {
            SeizeTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MintAllowedInput : pb::IMessage<MintAllowedInput> {
    private static readonly pb::MessageParser<MintAllowedInput> _parser = new pb::MessageParser<MintAllowedInput>(() => new MintAllowedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MintAllowedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintAllowedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintAllowedInput(MintAllowedInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      minter_ = other.minter_ != null ? other.minter_.Clone() : null;
      mintAmount_ = other.mintAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintAllowedInput Clone() {
      return new MintAllowedInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "minter" field.</summary>
    public const int MinterFieldNumber = 2;
    private global::AElf.Types.Address minter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Minter {
      get { return minter_; }
      set {
        minter_ = value;
      }
    }

    /// <summary>Field number for the "mint_amount" field.</summary>
    public const int MintAmountFieldNumber = 3;
    private long mintAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MintAmount {
      get { return mintAmount_; }
      set {
        mintAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MintAllowedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MintAllowedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Minter, other.Minter)) return false;
      if (MintAmount != other.MintAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (minter_ != null) hash ^= Minter.GetHashCode();
      if (MintAmount != 0L) hash ^= MintAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (minter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Minter);
      }
      if (MintAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MintAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (minter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Minter);
      }
      if (MintAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MintAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MintAllowedInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.minter_ != null) {
        if (minter_ == null) {
          Minter = new global::AElf.Types.Address();
        }
        Minter.MergeFrom(other.Minter);
      }
      if (other.MintAmount != 0L) {
        MintAmount = other.MintAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (minter_ == null) {
              Minter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Minter);
            break;
          }
          case 24: {
            MintAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MintVerifyInput : pb::IMessage<MintVerifyInput> {
    private static readonly pb::MessageParser<MintVerifyInput> _parser = new pb::MessageParser<MintVerifyInput>(() => new MintVerifyInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MintVerifyInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintVerifyInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintVerifyInput(MintVerifyInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      minter_ = other.minter_ != null ? other.minter_.Clone() : null;
      actualMintAmount_ = other.actualMintAmount_;
      mintTokens_ = other.mintTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintVerifyInput Clone() {
      return new MintVerifyInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "minter" field.</summary>
    public const int MinterFieldNumber = 2;
    private global::AElf.Types.Address minter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Minter {
      get { return minter_; }
      set {
        minter_ = value;
      }
    }

    /// <summary>Field number for the "actual_mint_amount" field.</summary>
    public const int ActualMintAmountFieldNumber = 3;
    private long actualMintAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActualMintAmount {
      get { return actualMintAmount_; }
      set {
        actualMintAmount_ = value;
      }
    }

    /// <summary>Field number for the "mint_tokens" field.</summary>
    public const int MintTokensFieldNumber = 4;
    private long mintTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MintTokens {
      get { return mintTokens_; }
      set {
        mintTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MintVerifyInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MintVerifyInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Minter, other.Minter)) return false;
      if (ActualMintAmount != other.ActualMintAmount) return false;
      if (MintTokens != other.MintTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (minter_ != null) hash ^= Minter.GetHashCode();
      if (ActualMintAmount != 0L) hash ^= ActualMintAmount.GetHashCode();
      if (MintTokens != 0L) hash ^= MintTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (minter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Minter);
      }
      if (ActualMintAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ActualMintAmount);
      }
      if (MintTokens != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MintTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (minter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Minter);
      }
      if (ActualMintAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActualMintAmount);
      }
      if (MintTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MintTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MintVerifyInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.minter_ != null) {
        if (minter_ == null) {
          Minter = new global::AElf.Types.Address();
        }
        Minter.MergeFrom(other.Minter);
      }
      if (other.ActualMintAmount != 0L) {
        ActualMintAmount = other.ActualMintAmount;
      }
      if (other.MintTokens != 0L) {
        MintTokens = other.MintTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (minter_ == null) {
              Minter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Minter);
            break;
          }
          case 24: {
            ActualMintAmount = input.ReadInt64();
            break;
          }
          case 32: {
            MintTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemAllowedInput : pb::IMessage<RedeemAllowedInput> {
    private static readonly pb::MessageParser<RedeemAllowedInput> _parser = new pb::MessageParser<RedeemAllowedInput>(() => new RedeemAllowedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemAllowedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemAllowedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemAllowedInput(RedeemAllowedInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      redeemer_ = other.redeemer_ != null ? other.redeemer_.Clone() : null;
      redeemTokens_ = other.redeemTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemAllowedInput Clone() {
      return new RedeemAllowedInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "redeemer" field.</summary>
    public const int RedeemerFieldNumber = 2;
    private global::AElf.Types.Address redeemer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Redeemer {
      get { return redeemer_; }
      set {
        redeemer_ = value;
      }
    }

    /// <summary>Field number for the "redeem_tokens" field.</summary>
    public const int RedeemTokensFieldNumber = 3;
    private long redeemTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RedeemTokens {
      get { return redeemTokens_; }
      set {
        redeemTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemAllowedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemAllowedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Redeemer, other.Redeemer)) return false;
      if (RedeemTokens != other.RedeemTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (redeemer_ != null) hash ^= Redeemer.GetHashCode();
      if (RedeemTokens != 0L) hash ^= RedeemTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (redeemer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Redeemer);
      }
      if (RedeemTokens != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RedeemTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (redeemer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Redeemer);
      }
      if (RedeemTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RedeemTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemAllowedInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.redeemer_ != null) {
        if (redeemer_ == null) {
          Redeemer = new global::AElf.Types.Address();
        }
        Redeemer.MergeFrom(other.Redeemer);
      }
      if (other.RedeemTokens != 0L) {
        RedeemTokens = other.RedeemTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (redeemer_ == null) {
              Redeemer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Redeemer);
            break;
          }
          case 24: {
            RedeemTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemVerifyInput : pb::IMessage<RedeemVerifyInput> {
    private static readonly pb::MessageParser<RedeemVerifyInput> _parser = new pb::MessageParser<RedeemVerifyInput>(() => new RedeemVerifyInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemVerifyInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemVerifyInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemVerifyInput(RedeemVerifyInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      minter_ = other.minter_ != null ? other.minter_.Clone() : null;
      redeemAmount_ = other.redeemAmount_;
      redeemTokens_ = other.redeemTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemVerifyInput Clone() {
      return new RedeemVerifyInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "minter" field.</summary>
    public const int MinterFieldNumber = 2;
    private global::AElf.Types.Address minter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Minter {
      get { return minter_; }
      set {
        minter_ = value;
      }
    }

    /// <summary>Field number for the "redeem_amount" field.</summary>
    public const int RedeemAmountFieldNumber = 3;
    private long redeemAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RedeemAmount {
      get { return redeemAmount_; }
      set {
        redeemAmount_ = value;
      }
    }

    /// <summary>Field number for the "redeem_tokens" field.</summary>
    public const int RedeemTokensFieldNumber = 4;
    private long redeemTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RedeemTokens {
      get { return redeemTokens_; }
      set {
        redeemTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemVerifyInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemVerifyInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Minter, other.Minter)) return false;
      if (RedeemAmount != other.RedeemAmount) return false;
      if (RedeemTokens != other.RedeemTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (minter_ != null) hash ^= Minter.GetHashCode();
      if (RedeemAmount != 0L) hash ^= RedeemAmount.GetHashCode();
      if (RedeemTokens != 0L) hash ^= RedeemTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (minter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Minter);
      }
      if (RedeemAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RedeemAmount);
      }
      if (RedeemTokens != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RedeemTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (minter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Minter);
      }
      if (RedeemAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RedeemAmount);
      }
      if (RedeemTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RedeemTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemVerifyInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.minter_ != null) {
        if (minter_ == null) {
          Minter = new global::AElf.Types.Address();
        }
        Minter.MergeFrom(other.Minter);
      }
      if (other.RedeemAmount != 0L) {
        RedeemAmount = other.RedeemAmount;
      }
      if (other.RedeemTokens != 0L) {
        RedeemTokens = other.RedeemTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (minter_ == null) {
              Minter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Minter);
            break;
          }
          case 24: {
            RedeemAmount = input.ReadInt64();
            break;
          }
          case 32: {
            RedeemTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BorrowAllowedInput : pb::IMessage<BorrowAllowedInput> {
    private static readonly pb::MessageParser<BorrowAllowedInput> _parser = new pb::MessageParser<BorrowAllowedInput>(() => new BorrowAllowedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BorrowAllowedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowAllowedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowAllowedInput(BorrowAllowedInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      borrowAmount_ = other.borrowAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowAllowedInput Clone() {
      return new BorrowAllowedInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 2;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "borrow_amount" field.</summary>
    public const int BorrowAmountFieldNumber = 3;
    private long borrowAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowAmount {
      get { return borrowAmount_; }
      set {
        borrowAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BorrowAllowedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BorrowAllowedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (BorrowAmount != other.BorrowAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (BorrowAmount != 0L) hash ^= BorrowAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (borrower_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Borrower);
      }
      if (BorrowAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BorrowAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (BorrowAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BorrowAllowedInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.BorrowAmount != 0L) {
        BorrowAmount = other.BorrowAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 24: {
            BorrowAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BorrowVerifyInput : pb::IMessage<BorrowVerifyInput> {
    private static readonly pb::MessageParser<BorrowVerifyInput> _parser = new pb::MessageParser<BorrowVerifyInput>(() => new BorrowVerifyInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BorrowVerifyInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowVerifyInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowVerifyInput(BorrowVerifyInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      borrowAmount_ = other.borrowAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowVerifyInput Clone() {
      return new BorrowVerifyInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 2;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "borrow_amount" field.</summary>
    public const int BorrowAmountFieldNumber = 3;
    private long borrowAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowAmount {
      get { return borrowAmount_; }
      set {
        borrowAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BorrowVerifyInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BorrowVerifyInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (BorrowAmount != other.BorrowAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (BorrowAmount != 0L) hash ^= BorrowAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (borrower_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Borrower);
      }
      if (BorrowAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BorrowAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (BorrowAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BorrowVerifyInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.BorrowAmount != 0L) {
        BorrowAmount = other.BorrowAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 24: {
            BorrowAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepayBorrowAllowedInput : pb::IMessage<RepayBorrowAllowedInput> {
    private static readonly pb::MessageParser<RepayBorrowAllowedInput> _parser = new pb::MessageParser<RepayBorrowAllowedInput>(() => new RepayBorrowAllowedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepayBorrowAllowedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowAllowedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowAllowedInput(RepayBorrowAllowedInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      payer_ = other.payer_ != null ? other.payer_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      repayAmount_ = other.repayAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowAllowedInput Clone() {
      return new RepayBorrowAllowedInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "payer" field.</summary>
    public const int PayerFieldNumber = 2;
    private global::AElf.Types.Address payer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Payer {
      get { return payer_; }
      set {
        payer_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 3;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "repay_amount" field.</summary>
    public const int RepayAmountFieldNumber = 4;
    private long repayAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RepayAmount {
      get { return repayAmount_; }
      set {
        repayAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepayBorrowAllowedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepayBorrowAllowedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Payer, other.Payer)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (RepayAmount != other.RepayAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (payer_ != null) hash ^= Payer.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (RepayAmount != 0L) hash ^= RepayAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (payer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payer);
      }
      if (borrower_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Borrower);
      }
      if (RepayAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RepayAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (payer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payer);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (RepayAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RepayAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepayBorrowAllowedInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.payer_ != null) {
        if (payer_ == null) {
          Payer = new global::AElf.Types.Address();
        }
        Payer.MergeFrom(other.Payer);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.RepayAmount != 0L) {
        RepayAmount = other.RepayAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (payer_ == null) {
              Payer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Payer);
            break;
          }
          case 26: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 32: {
            RepayAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHypotheticalAccountLiquidityInput : pb::IMessage<GetHypotheticalAccountLiquidityInput> {
    private static readonly pb::MessageParser<GetHypotheticalAccountLiquidityInput> _parser = new pb::MessageParser<GetHypotheticalAccountLiquidityInput>(() => new GetHypotheticalAccountLiquidityInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHypotheticalAccountLiquidityInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHypotheticalAccountLiquidityInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHypotheticalAccountLiquidityInput(GetHypotheticalAccountLiquidityInput other) : this() {
      account_ = other.account_ != null ? other.account_.Clone() : null;
      aTokenModify_ = other.aTokenModify_ != null ? other.aTokenModify_.Clone() : null;
      redeemTokens_ = other.redeemTokens_;
      borrowAmount_ = other.borrowAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHypotheticalAccountLiquidityInput Clone() {
      return new GetHypotheticalAccountLiquidityInput(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "a_token_modify" field.</summary>
    public const int ATokenModifyFieldNumber = 2;
    private global::AElf.Types.Address aTokenModify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ATokenModify {
      get { return aTokenModify_; }
      set {
        aTokenModify_ = value;
      }
    }

    /// <summary>Field number for the "redeem_tokens" field.</summary>
    public const int RedeemTokensFieldNumber = 3;
    private long redeemTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RedeemTokens {
      get { return redeemTokens_; }
      set {
        redeemTokens_ = value;
      }
    }

    /// <summary>Field number for the "borrow_amount" field.</summary>
    public const int BorrowAmountFieldNumber = 4;
    private long borrowAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowAmount {
      get { return borrowAmount_; }
      set {
        borrowAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHypotheticalAccountLiquidityInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHypotheticalAccountLiquidityInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(ATokenModify, other.ATokenModify)) return false;
      if (RedeemTokens != other.RedeemTokens) return false;
      if (BorrowAmount != other.BorrowAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (aTokenModify_ != null) hash ^= ATokenModify.GetHashCode();
      if (RedeemTokens != 0L) hash ^= RedeemTokens.GetHashCode();
      if (BorrowAmount != 0L) hash ^= BorrowAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (aTokenModify_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ATokenModify);
      }
      if (RedeemTokens != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RedeemTokens);
      }
      if (BorrowAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BorrowAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (aTokenModify_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ATokenModify);
      }
      if (RedeemTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RedeemTokens);
      }
      if (BorrowAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHypotheticalAccountLiquidityInput other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.aTokenModify_ != null) {
        if (aTokenModify_ == null) {
          ATokenModify = new global::AElf.Types.Address();
        }
        ATokenModify.MergeFrom(other.ATokenModify);
      }
      if (other.RedeemTokens != 0L) {
        RedeemTokens = other.RedeemTokens;
      }
      if (other.BorrowAmount != 0L) {
        BorrowAmount = other.BorrowAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 18: {
            if (aTokenModify_ == null) {
              ATokenModify = new global::AElf.Types.Address();
            }
            input.ReadMessage(ATokenModify);
            break;
          }
          case 24: {
            RedeemTokens = input.ReadInt64();
            break;
          }
          case 32: {
            BorrowAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClaimPlatformTokenInput : pb::IMessage<ClaimPlatformTokenInput> {
    private static readonly pb::MessageParser<ClaimPlatformTokenInput> _parser = new pb::MessageParser<ClaimPlatformTokenInput>(() => new ClaimPlatformTokenInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClaimPlatformTokenInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimPlatformTokenInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimPlatformTokenInput(ClaimPlatformTokenInput other) : this() {
      holders_ = other.holders_.Clone();
      aTokens_ = other.aTokens_.Clone();
      borrowers_ = other.borrowers_;
      suppliers_ = other.suppliers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimPlatformTokenInput Clone() {
      return new ClaimPlatformTokenInput(this);
    }

    /// <summary>Field number for the "holders" field.</summary>
    public const int HoldersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_holders_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> holders_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> Holders {
      get { return holders_; }
    }

    /// <summary>Field number for the "a_tokens" field.</summary>
    public const int ATokensFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_aTokens_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> aTokens_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> ATokens {
      get { return aTokens_; }
    }

    /// <summary>Field number for the "borrowers" field.</summary>
    public const int BorrowersFieldNumber = 3;
    private bool borrowers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Borrowers {
      get { return borrowers_; }
      set {
        borrowers_ = value;
      }
    }

    /// <summary>Field number for the "suppliers" field.</summary>
    public const int SuppliersFieldNumber = 4;
    private bool suppliers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Suppliers {
      get { return suppliers_; }
      set {
        suppliers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClaimPlatformTokenInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClaimPlatformTokenInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!holders_.Equals(other.holders_)) return false;
      if(!aTokens_.Equals(other.aTokens_)) return false;
      if (Borrowers != other.Borrowers) return false;
      if (Suppliers != other.Suppliers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= holders_.GetHashCode();
      hash ^= aTokens_.GetHashCode();
      if (Borrowers != false) hash ^= Borrowers.GetHashCode();
      if (Suppliers != false) hash ^= Suppliers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      holders_.WriteTo(output, _repeated_holders_codec);
      aTokens_.WriteTo(output, _repeated_aTokens_codec);
      if (Borrowers != false) {
        output.WriteRawTag(24);
        output.WriteBool(Borrowers);
      }
      if (Suppliers != false) {
        output.WriteRawTag(32);
        output.WriteBool(Suppliers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += holders_.CalculateSize(_repeated_holders_codec);
      size += aTokens_.CalculateSize(_repeated_aTokens_codec);
      if (Borrowers != false) {
        size += 1 + 1;
      }
      if (Suppliers != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClaimPlatformTokenInput other) {
      if (other == null) {
        return;
      }
      holders_.Add(other.holders_);
      aTokens_.Add(other.aTokens_);
      if (other.Borrowers != false) {
        Borrowers = other.Borrowers;
      }
      if (other.Suppliers != false) {
        Suppliers = other.Suppliers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            holders_.AddEntriesFrom(input, _repeated_holders_codec);
            break;
          }
          case 18: {
            aTokens_.AddEntriesFrom(input, _repeated_aTokens_codec);
            break;
          }
          case 24: {
            Borrowers = input.ReadBool();
            break;
          }
          case 32: {
            Suppliers = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///output
  /// </summary>
  public sealed partial class GetHypotheticalAccountLiquidityOutput : pb::IMessage<GetHypotheticalAccountLiquidityOutput> {
    private static readonly pb::MessageParser<GetHypotheticalAccountLiquidityOutput> _parser = new pb::MessageParser<GetHypotheticalAccountLiquidityOutput>(() => new GetHypotheticalAccountLiquidityOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHypotheticalAccountLiquidityOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHypotheticalAccountLiquidityOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHypotheticalAccountLiquidityOutput(GetHypotheticalAccountLiquidityOutput other) : this() {
      liquidity_ = other.liquidity_;
      shortfall_ = other.shortfall_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHypotheticalAccountLiquidityOutput Clone() {
      return new GetHypotheticalAccountLiquidityOutput(this);
    }

    /// <summary>Field number for the "liquidity" field.</summary>
    public const int LiquidityFieldNumber = 1;
    private long liquidity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Liquidity {
      get { return liquidity_; }
      set {
        liquidity_ = value;
      }
    }

    /// <summary>Field number for the "shortfall" field.</summary>
    public const int ShortfallFieldNumber = 2;
    private long shortfall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Shortfall {
      get { return shortfall_; }
      set {
        shortfall_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHypotheticalAccountLiquidityOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHypotheticalAccountLiquidityOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Liquidity != other.Liquidity) return false;
      if (Shortfall != other.Shortfall) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Liquidity != 0L) hash ^= Liquidity.GetHashCode();
      if (Shortfall != 0L) hash ^= Shortfall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Liquidity != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Liquidity);
      }
      if (Shortfall != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Shortfall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Liquidity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Liquidity);
      }
      if (Shortfall != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Shortfall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHypotheticalAccountLiquidityOutput other) {
      if (other == null) {
        return;
      }
      if (other.Liquidity != 0L) {
        Liquidity = other.Liquidity;
      }
      if (other.Shortfall != 0L) {
        Shortfall = other.Shortfall;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Liquidity = input.ReadInt64();
            break;
          }
          case 16: {
            Shortfall = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountLiquidityOutput : pb::IMessage<GetAccountLiquidityOutput> {
    private static readonly pb::MessageParser<GetAccountLiquidityOutput> _parser = new pb::MessageParser<GetAccountLiquidityOutput>(() => new GetAccountLiquidityOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountLiquidityOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountLiquidityOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountLiquidityOutput(GetAccountLiquidityOutput other) : this() {
      liquidity_ = other.liquidity_;
      shortfall_ = other.shortfall_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountLiquidityOutput Clone() {
      return new GetAccountLiquidityOutput(this);
    }

    /// <summary>Field number for the "liquidity" field.</summary>
    public const int LiquidityFieldNumber = 1;
    private long liquidity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Liquidity {
      get { return liquidity_; }
      set {
        liquidity_ = value;
      }
    }

    /// <summary>Field number for the "shortfall" field.</summary>
    public const int ShortfallFieldNumber = 2;
    private long shortfall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Shortfall {
      get { return shortfall_; }
      set {
        shortfall_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountLiquidityOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountLiquidityOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Liquidity != other.Liquidity) return false;
      if (Shortfall != other.Shortfall) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Liquidity != 0L) hash ^= Liquidity.GetHashCode();
      if (Shortfall != 0L) hash ^= Shortfall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Liquidity != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Liquidity);
      }
      if (Shortfall != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Shortfall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Liquidity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Liquidity);
      }
      if (Shortfall != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Shortfall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountLiquidityOutput other) {
      if (other == null) {
        return;
      }
      if (other.Liquidity != 0L) {
        Liquidity = other.Liquidity;
      }
      if (other.Shortfall != 0L) {
        Shortfall = other.Shortfall;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Liquidity = input.ReadInt64();
            break;
          }
          case 16: {
            Shortfall = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///struct
  /// </summary>
  public sealed partial class PlatformTokenMarketState : pb::IMessage<PlatformTokenMarketState> {
    private static readonly pb::MessageParser<PlatformTokenMarketState> _parser = new pb::MessageParser<PlatformTokenMarketState>(() => new PlatformTokenMarketState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlatformTokenMarketState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenMarketState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenMarketState(PlatformTokenMarketState other) : this() {
      index_ = other.index_ != null ? other.index_.Clone() : null;
      block_ = other.block_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenMarketState Clone() {
      return new PlatformTokenMarketState(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private global::AElf.Types.BigIntValue index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.BigIntValue Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 2;
    private long block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlatformTokenMarketState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlatformTokenMarketState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Index, other.Index)) return false;
      if (Block != other.Block) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (index_ != null) hash ^= Index.GetHashCode();
      if (Block != 0L) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (index_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Index);
      }
      if (Block != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (index_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Index);
      }
      if (Block != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlatformTokenMarketState other) {
      if (other == null) {
        return;
      }
      if (other.index_ != null) {
        if (index_ == null) {
          Index = new global::AElf.Types.BigIntValue();
        }
        Index.MergeFrom(other.Index);
      }
      if (other.Block != 0L) {
        Block = other.Block;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (index_ == null) {
              Index = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(Index);
            break;
          }
          case 16: {
            Block = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetList : pb::IMessage<AssetList> {
    private static readonly pb::MessageParser<AssetList> _parser = new pb::MessageParser<AssetList>(() => new AssetList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetList(AssetList other) : this() {
      assets_ = other.assets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetList Clone() {
      return new AssetList(this);
    }

    /// <summary>Field number for the "assets" field.</summary>
    public const int AssetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_assets_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> assets_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> Assets {
      get { return assets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!assets_.Equals(other.assets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= assets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      assets_.WriteTo(output, _repeated_assets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += assets_.CalculateSize(_repeated_assets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetList other) {
      if (other == null) {
        return;
      }
      assets_.Add(other.assets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            assets_.AddEntriesFrom(input, _repeated_assets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private global::AElf.Types.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (address_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Types.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ATokens : pb::IMessage<ATokens> {
    private static readonly pb::MessageParser<ATokens> _parser = new pb::MessageParser<ATokens>(() => new ATokens());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ATokens> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ATokens() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ATokens(ATokens other) : this() {
      aToken_ = other.aToken_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ATokens Clone() {
      return new ATokens(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_aToken_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> aToken_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> AToken {
      get { return aToken_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ATokens);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ATokens other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!aToken_.Equals(other.aToken_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= aToken_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      aToken_.WriteTo(output, _repeated_aToken_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += aToken_.CalculateSize(_repeated_aToken_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ATokens other) {
      if (other == null) {
        return;
      }
      aToken_.Add(other.aToken_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            aToken_.AddEntriesFrom(input, _repeated_aToken_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Market : pb::IMessage<Market> {
    private static readonly pb::MessageParser<Market> _parser = new pb::MessageParser<Market>(() => new Market());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Market> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Market() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Market(Market other) : this() {
      isListed_ = other.isListed_;
      collateralFactor_ = other.collateralFactor_;
      accountMembership_ = other.accountMembership_.Clone();
      isPlatformTokened_ = other.isPlatformTokened_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Market Clone() {
      return new Market(this);
    }

    /// <summary>Field number for the "is_listed" field.</summary>
    public const int IsListedFieldNumber = 1;
    private bool isListed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsListed {
      get { return isListed_; }
      set {
        isListed_ = value;
      }
    }

    /// <summary>Field number for the "collateral_factor" field.</summary>
    public const int CollateralFactorFieldNumber = 2;
    private long collateralFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CollateralFactor {
      get { return collateralFactor_; }
      set {
        collateralFactor_ = value;
      }
    }

    /// <summary>Field number for the "account_membership" field.</summary>
    public const int AccountMembershipFieldNumber = 3;
    private static readonly pbc::MapField<string, bool>.Codec _map_accountMembership_codec
        = new pbc::MapField<string, bool>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBool(16, false), 26);
    private readonly pbc::MapField<string, bool> accountMembership_ = new pbc::MapField<string, bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, bool> AccountMembership {
      get { return accountMembership_; }
    }

    /// <summary>Field number for the "is_platform_tokened" field.</summary>
    public const int IsPlatformTokenedFieldNumber = 4;
    private bool isPlatformTokened_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPlatformTokened {
      get { return isPlatformTokened_; }
      set {
        isPlatformTokened_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Market);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Market other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsListed != other.IsListed) return false;
      if (CollateralFactor != other.CollateralFactor) return false;
      if (!AccountMembership.Equals(other.AccountMembership)) return false;
      if (IsPlatformTokened != other.IsPlatformTokened) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsListed != false) hash ^= IsListed.GetHashCode();
      if (CollateralFactor != 0L) hash ^= CollateralFactor.GetHashCode();
      hash ^= AccountMembership.GetHashCode();
      if (IsPlatformTokened != false) hash ^= IsPlatformTokened.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsListed != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsListed);
      }
      if (CollateralFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CollateralFactor);
      }
      accountMembership_.WriteTo(output, _map_accountMembership_codec);
      if (IsPlatformTokened != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsPlatformTokened);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsListed != false) {
        size += 1 + 1;
      }
      if (CollateralFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CollateralFactor);
      }
      size += accountMembership_.CalculateSize(_map_accountMembership_codec);
      if (IsPlatformTokened != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Market other) {
      if (other == null) {
        return;
      }
      if (other.IsListed != false) {
        IsListed = other.IsListed;
      }
      if (other.CollateralFactor != 0L) {
        CollateralFactor = other.CollateralFactor;
      }
      accountMembership_.Add(other.accountMembership_);
      if (other.IsPlatformTokened != false) {
        IsPlatformTokened = other.IsPlatformTokened;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsListed = input.ReadBool();
            break;
          }
          case 16: {
            CollateralFactor = input.ReadInt64();
            break;
          }
          case 26: {
            accountMembership_.AddEntriesFrom(input, _map_accountMembership_codec);
            break;
          }
          case 32: {
            IsPlatformTokened = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///event
  /// </summary>
  public sealed partial class MarketListed : pb::IMessage<MarketListed> {
    private static readonly pb::MessageParser<MarketListed> _parser = new pb::MessageParser<MarketListed>(() => new MarketListed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketListed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketListed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketListed(MarketListed other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketListed Clone() {
      return new MarketListed(this);
    }

    /// <summary>Field number for the "a_Token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketListed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketListed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketListed other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MarketEntered : pb::IMessage<MarketEntered> {
    private static readonly pb::MessageParser<MarketEntered> _parser = new pb::MessageParser<MarketEntered>(() => new MarketEntered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketEntered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketEntered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketEntered(MarketEntered other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketEntered Clone() {
      return new MarketEntered(this);
    }

    /// <summary>Field number for the "a_Token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketEntered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketEntered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketEntered other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MarketExited : pb::IMessage<MarketExited> {
    private static readonly pb::MessageParser<MarketExited> _parser = new pb::MessageParser<MarketExited>(() => new MarketExited());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketExited> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketExited() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketExited(MarketExited other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketExited Clone() {
      return new MarketExited(this);
    }

    /// <summary>Field number for the "a_Token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketExited);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketExited other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketExited other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloseFactorChanged : pb::IMessage<CloseFactorChanged> {
    private static readonly pb::MessageParser<CloseFactorChanged> _parser = new pb::MessageParser<CloseFactorChanged>(() => new CloseFactorChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseFactorChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseFactorChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseFactorChanged(CloseFactorChanged other) : this() {
      oldCloseFactor_ = other.oldCloseFactor_;
      newCloseFactor_ = other.newCloseFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseFactorChanged Clone() {
      return new CloseFactorChanged(this);
    }

    /// <summary>Field number for the "old_close_factor" field.</summary>
    public const int OldCloseFactorFieldNumber = 1;
    private long oldCloseFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OldCloseFactor {
      get { return oldCloseFactor_; }
      set {
        oldCloseFactor_ = value;
      }
    }

    /// <summary>Field number for the "new_close_factor" field.</summary>
    public const int NewCloseFactorFieldNumber = 2;
    private long newCloseFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewCloseFactor {
      get { return newCloseFactor_; }
      set {
        newCloseFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseFactorChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseFactorChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldCloseFactor != other.OldCloseFactor) return false;
      if (NewCloseFactor != other.NewCloseFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldCloseFactor != 0L) hash ^= OldCloseFactor.GetHashCode();
      if (NewCloseFactor != 0L) hash ^= NewCloseFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldCloseFactor != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OldCloseFactor);
      }
      if (NewCloseFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewCloseFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldCloseFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OldCloseFactor);
      }
      if (NewCloseFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewCloseFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseFactorChanged other) {
      if (other == null) {
        return;
      }
      if (other.OldCloseFactor != 0L) {
        OldCloseFactor = other.OldCloseFactor;
      }
      if (other.NewCloseFactor != 0L) {
        NewCloseFactor = other.NewCloseFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OldCloseFactor = input.ReadInt64();
            break;
          }
          case 16: {
            NewCloseFactor = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CollateralFactorChanged : pb::IMessage<CollateralFactorChanged> {
    private static readonly pb::MessageParser<CollateralFactorChanged> _parser = new pb::MessageParser<CollateralFactorChanged>(() => new CollateralFactorChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollateralFactorChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollateralFactorChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollateralFactorChanged(CollateralFactorChanged other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      oldCollateralFactor_ = other.oldCollateralFactor_;
      newCollateralFactor_ = other.newCollateralFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollateralFactorChanged Clone() {
      return new CollateralFactorChanged(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "old_collateral_factor" field.</summary>
    public const int OldCollateralFactorFieldNumber = 2;
    private long oldCollateralFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OldCollateralFactor {
      get { return oldCollateralFactor_; }
      set {
        oldCollateralFactor_ = value;
      }
    }

    /// <summary>Field number for the "new_collateral_factor" field.</summary>
    public const int NewCollateralFactorFieldNumber = 3;
    private long newCollateralFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewCollateralFactor {
      get { return newCollateralFactor_; }
      set {
        newCollateralFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollateralFactorChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollateralFactorChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (OldCollateralFactor != other.OldCollateralFactor) return false;
      if (NewCollateralFactor != other.NewCollateralFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (OldCollateralFactor != 0L) hash ^= OldCollateralFactor.GetHashCode();
      if (NewCollateralFactor != 0L) hash ^= NewCollateralFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (OldCollateralFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OldCollateralFactor);
      }
      if (NewCollateralFactor != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NewCollateralFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (OldCollateralFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OldCollateralFactor);
      }
      if (NewCollateralFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewCollateralFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollateralFactorChanged other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.OldCollateralFactor != 0L) {
        OldCollateralFactor = other.OldCollateralFactor;
      }
      if (other.NewCollateralFactor != 0L) {
        NewCollateralFactor = other.NewCollateralFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            OldCollateralFactor = input.ReadInt64();
            break;
          }
          case 24: {
            NewCollateralFactor = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LiquidationIncentiveChanged : pb::IMessage<LiquidationIncentiveChanged> {
    private static readonly pb::MessageParser<LiquidationIncentiveChanged> _parser = new pb::MessageParser<LiquidationIncentiveChanged>(() => new LiquidationIncentiveChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiquidationIncentiveChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidationIncentiveChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidationIncentiveChanged(LiquidationIncentiveChanged other) : this() {
      oldLiquidationIncentive_ = other.oldLiquidationIncentive_;
      newLiquidationIncentive_ = other.newLiquidationIncentive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidationIncentiveChanged Clone() {
      return new LiquidationIncentiveChanged(this);
    }

    /// <summary>Field number for the "old_liquidation_incentive" field.</summary>
    public const int OldLiquidationIncentiveFieldNumber = 1;
    private long oldLiquidationIncentive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OldLiquidationIncentive {
      get { return oldLiquidationIncentive_; }
      set {
        oldLiquidationIncentive_ = value;
      }
    }

    /// <summary>Field number for the "new_liquidation_incentive" field.</summary>
    public const int NewLiquidationIncentiveFieldNumber = 2;
    private long newLiquidationIncentive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewLiquidationIncentive {
      get { return newLiquidationIncentive_; }
      set {
        newLiquidationIncentive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiquidationIncentiveChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiquidationIncentiveChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldLiquidationIncentive != other.OldLiquidationIncentive) return false;
      if (NewLiquidationIncentive != other.NewLiquidationIncentive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldLiquidationIncentive != 0L) hash ^= OldLiquidationIncentive.GetHashCode();
      if (NewLiquidationIncentive != 0L) hash ^= NewLiquidationIncentive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldLiquidationIncentive != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OldLiquidationIncentive);
      }
      if (NewLiquidationIncentive != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewLiquidationIncentive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldLiquidationIncentive != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OldLiquidationIncentive);
      }
      if (NewLiquidationIncentive != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewLiquidationIncentive);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiquidationIncentiveChanged other) {
      if (other == null) {
        return;
      }
      if (other.OldLiquidationIncentive != 0L) {
        OldLiquidationIncentive = other.OldLiquidationIncentive;
      }
      if (other.NewLiquidationIncentive != 0L) {
        NewLiquidationIncentive = other.NewLiquidationIncentive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OldLiquidationIncentive = input.ReadInt64();
            break;
          }
          case 16: {
            NewLiquidationIncentive = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MaxAssetsChanged : pb::IMessage<MaxAssetsChanged> {
    private static readonly pb::MessageParser<MaxAssetsChanged> _parser = new pb::MessageParser<MaxAssetsChanged>(() => new MaxAssetsChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaxAssetsChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxAssetsChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxAssetsChanged(MaxAssetsChanged other) : this() {
      oldMaxAssets_ = other.oldMaxAssets_;
      newMaxAssets_ = other.newMaxAssets_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxAssetsChanged Clone() {
      return new MaxAssetsChanged(this);
    }

    /// <summary>Field number for the "old_max_assets" field.</summary>
    public const int OldMaxAssetsFieldNumber = 1;
    private long oldMaxAssets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OldMaxAssets {
      get { return oldMaxAssets_; }
      set {
        oldMaxAssets_ = value;
      }
    }

    /// <summary>Field number for the "new_max_assets" field.</summary>
    public const int NewMaxAssetsFieldNumber = 2;
    private long newMaxAssets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewMaxAssets {
      get { return newMaxAssets_; }
      set {
        newMaxAssets_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaxAssetsChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaxAssetsChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldMaxAssets != other.OldMaxAssets) return false;
      if (NewMaxAssets != other.NewMaxAssets) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldMaxAssets != 0L) hash ^= OldMaxAssets.GetHashCode();
      if (NewMaxAssets != 0L) hash ^= NewMaxAssets.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldMaxAssets != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OldMaxAssets);
      }
      if (NewMaxAssets != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewMaxAssets);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldMaxAssets != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OldMaxAssets);
      }
      if (NewMaxAssets != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewMaxAssets);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaxAssetsChanged other) {
      if (other == null) {
        return;
      }
      if (other.OldMaxAssets != 0L) {
        OldMaxAssets = other.OldMaxAssets;
      }
      if (other.NewMaxAssets != 0L) {
        NewMaxAssets = other.NewMaxAssets;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OldMaxAssets = input.ReadInt64();
            break;
          }
          case 16: {
            NewMaxAssets = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PriceOracleChanged : pb::IMessage<PriceOracleChanged> {
    private static readonly pb::MessageParser<PriceOracleChanged> _parser = new pb::MessageParser<PriceOracleChanged>(() => new PriceOracleChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PriceOracleChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PriceOracleChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PriceOracleChanged(PriceOracleChanged other) : this() {
      oldPriceOracle_ = other.oldPriceOracle_ != null ? other.oldPriceOracle_.Clone() : null;
      newPriceOracle_ = other.newPriceOracle_ != null ? other.newPriceOracle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PriceOracleChanged Clone() {
      return new PriceOracleChanged(this);
    }

    /// <summary>Field number for the "old_price_oracle" field.</summary>
    public const int OldPriceOracleFieldNumber = 1;
    private global::AElf.Types.Address oldPriceOracle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address OldPriceOracle {
      get { return oldPriceOracle_; }
      set {
        oldPriceOracle_ = value;
      }
    }

    /// <summary>Field number for the "new_price_oracle" field.</summary>
    public const int NewPriceOracleFieldNumber = 2;
    private global::AElf.Types.Address newPriceOracle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address NewPriceOracle {
      get { return newPriceOracle_; }
      set {
        newPriceOracle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PriceOracleChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PriceOracleChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OldPriceOracle, other.OldPriceOracle)) return false;
      if (!object.Equals(NewPriceOracle, other.NewPriceOracle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oldPriceOracle_ != null) hash ^= OldPriceOracle.GetHashCode();
      if (newPriceOracle_ != null) hash ^= NewPriceOracle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (oldPriceOracle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OldPriceOracle);
      }
      if (newPriceOracle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewPriceOracle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oldPriceOracle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OldPriceOracle);
      }
      if (newPriceOracle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewPriceOracle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PriceOracleChanged other) {
      if (other == null) {
        return;
      }
      if (other.oldPriceOracle_ != null) {
        if (oldPriceOracle_ == null) {
          OldPriceOracle = new global::AElf.Types.Address();
        }
        OldPriceOracle.MergeFrom(other.OldPriceOracle);
      }
      if (other.newPriceOracle_ != null) {
        if (newPriceOracle_ == null) {
          NewPriceOracle = new global::AElf.Types.Address();
        }
        NewPriceOracle.MergeFrom(other.NewPriceOracle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (oldPriceOracle_ == null) {
              OldPriceOracle = new global::AElf.Types.Address();
            }
            input.ReadMessage(OldPriceOracle);
            break;
          }
          case 18: {
            if (newPriceOracle_ == null) {
              NewPriceOracle = new global::AElf.Types.Address();
            }
            input.ReadMessage(NewPriceOracle);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PauseGuardianChanged : pb::IMessage<PauseGuardianChanged> {
    private static readonly pb::MessageParser<PauseGuardianChanged> _parser = new pb::MessageParser<PauseGuardianChanged>(() => new PauseGuardianChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PauseGuardianChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PauseGuardianChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PauseGuardianChanged(PauseGuardianChanged other) : this() {
      oldPauseGuardian_ = other.oldPauseGuardian_ != null ? other.oldPauseGuardian_.Clone() : null;
      newPauseGuardian_ = other.newPauseGuardian_ != null ? other.newPauseGuardian_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PauseGuardianChanged Clone() {
      return new PauseGuardianChanged(this);
    }

    /// <summary>Field number for the "old_pause_guardian" field.</summary>
    public const int OldPauseGuardianFieldNumber = 1;
    private global::AElf.Types.Address oldPauseGuardian_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address OldPauseGuardian {
      get { return oldPauseGuardian_; }
      set {
        oldPauseGuardian_ = value;
      }
    }

    /// <summary>Field number for the "new_pause_guardian" field.</summary>
    public const int NewPauseGuardianFieldNumber = 2;
    private global::AElf.Types.Address newPauseGuardian_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address NewPauseGuardian {
      get { return newPauseGuardian_; }
      set {
        newPauseGuardian_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PauseGuardianChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PauseGuardianChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OldPauseGuardian, other.OldPauseGuardian)) return false;
      if (!object.Equals(NewPauseGuardian, other.NewPauseGuardian)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oldPauseGuardian_ != null) hash ^= OldPauseGuardian.GetHashCode();
      if (newPauseGuardian_ != null) hash ^= NewPauseGuardian.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (oldPauseGuardian_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OldPauseGuardian);
      }
      if (newPauseGuardian_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewPauseGuardian);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oldPauseGuardian_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OldPauseGuardian);
      }
      if (newPauseGuardian_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewPauseGuardian);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PauseGuardianChanged other) {
      if (other == null) {
        return;
      }
      if (other.oldPauseGuardian_ != null) {
        if (oldPauseGuardian_ == null) {
          OldPauseGuardian = new global::AElf.Types.Address();
        }
        OldPauseGuardian.MergeFrom(other.OldPauseGuardian);
      }
      if (other.newPauseGuardian_ != null) {
        if (newPauseGuardian_ == null) {
          NewPauseGuardian = new global::AElf.Types.Address();
        }
        NewPauseGuardian.MergeFrom(other.NewPauseGuardian);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (oldPauseGuardian_ == null) {
              OldPauseGuardian = new global::AElf.Types.Address();
            }
            input.ReadMessage(OldPauseGuardian);
            break;
          }
          case 18: {
            if (newPauseGuardian_ == null) {
              NewPauseGuardian = new global::AElf.Types.Address();
            }
            input.ReadMessage(NewPauseGuardian);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActionPaused : pb::IMessage<ActionPaused> {
    private static readonly pb::MessageParser<ActionPaused> _parser = new pb::MessageParser<ActionPaused>(() => new ActionPaused());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionPaused> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionPaused() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionPaused(ActionPaused other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      action_ = other.action_;
      pauseState_ = other.pauseState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionPaused Clone() {
      return new ActionPaused(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private string action_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pauseState" field.</summary>
    public const int PauseStateFieldNumber = 3;
    private bool pauseState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PauseState {
      get { return pauseState_; }
      set {
        pauseState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionPaused);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionPaused other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Action != other.Action) return false;
      if (PauseState != other.PauseState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (PauseState != false) hash ^= PauseState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Action);
      }
      if (PauseState != false) {
        output.WriteRawTag(24);
        output.WriteBool(PauseState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (PauseState != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionPaused other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      if (other.PauseState != false) {
        PauseState = other.PauseState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            Action = input.ReadString();
            break;
          }
          case 24: {
            PauseState = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MarketPlatformTokened : pb::IMessage<MarketPlatformTokened> {
    private static readonly pb::MessageParser<MarketPlatformTokened> _parser = new pb::MessageParser<MarketPlatformTokened>(() => new MarketPlatformTokened());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketPlatformTokened> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketPlatformTokened() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketPlatformTokened(MarketPlatformTokened other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      isPlatformTokened_ = other.isPlatformTokened_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketPlatformTokened Clone() {
      return new MarketPlatformTokened(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "isPlatformTokened" field.</summary>
    public const int IsPlatformTokenedFieldNumber = 2;
    private bool isPlatformTokened_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPlatformTokened {
      get { return isPlatformTokened_; }
      set {
        isPlatformTokened_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketPlatformTokened);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketPlatformTokened other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (IsPlatformTokened != other.IsPlatformTokened) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (IsPlatformTokened != false) hash ^= IsPlatformTokened.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (IsPlatformTokened != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsPlatformTokened);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (IsPlatformTokened != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketPlatformTokened other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.IsPlatformTokened != false) {
        IsPlatformTokened = other.IsPlatformTokened;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            IsPlatformTokened = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlatformTokenRateChanged : pb::IMessage<PlatformTokenRateChanged> {
    private static readonly pb::MessageParser<PlatformTokenRateChanged> _parser = new pb::MessageParser<PlatformTokenRateChanged>(() => new PlatformTokenRateChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlatformTokenRateChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenRateChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenRateChanged(PlatformTokenRateChanged other) : this() {
      oldPlatformTokenRate_ = other.oldPlatformTokenRate_;
      newPlatformTokenRate_ = other.newPlatformTokenRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenRateChanged Clone() {
      return new PlatformTokenRateChanged(this);
    }

    /// <summary>Field number for the "old_platform_token_rate" field.</summary>
    public const int OldPlatformTokenRateFieldNumber = 1;
    private long oldPlatformTokenRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OldPlatformTokenRate {
      get { return oldPlatformTokenRate_; }
      set {
        oldPlatformTokenRate_ = value;
      }
    }

    /// <summary>Field number for the "new_platform_token_rate" field.</summary>
    public const int NewPlatformTokenRateFieldNumber = 2;
    private long newPlatformTokenRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewPlatformTokenRate {
      get { return newPlatformTokenRate_; }
      set {
        newPlatformTokenRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlatformTokenRateChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlatformTokenRateChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldPlatformTokenRate != other.OldPlatformTokenRate) return false;
      if (NewPlatformTokenRate != other.NewPlatformTokenRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldPlatformTokenRate != 0L) hash ^= OldPlatformTokenRate.GetHashCode();
      if (NewPlatformTokenRate != 0L) hash ^= NewPlatformTokenRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldPlatformTokenRate != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OldPlatformTokenRate);
      }
      if (NewPlatformTokenRate != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewPlatformTokenRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldPlatformTokenRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OldPlatformTokenRate);
      }
      if (NewPlatformTokenRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewPlatformTokenRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlatformTokenRateChanged other) {
      if (other == null) {
        return;
      }
      if (other.OldPlatformTokenRate != 0L) {
        OldPlatformTokenRate = other.OldPlatformTokenRate;
      }
      if (other.NewPlatformTokenRate != 0L) {
        NewPlatformTokenRate = other.NewPlatformTokenRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OldPlatformTokenRate = input.ReadInt64();
            break;
          }
          case 16: {
            NewPlatformTokenRate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlatformTokenSpeedUpdated : pb::IMessage<PlatformTokenSpeedUpdated> {
    private static readonly pb::MessageParser<PlatformTokenSpeedUpdated> _parser = new pb::MessageParser<PlatformTokenSpeedUpdated>(() => new PlatformTokenSpeedUpdated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlatformTokenSpeedUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenSpeedUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenSpeedUpdated(PlatformTokenSpeedUpdated other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      newSpeed_ = other.newSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformTokenSpeedUpdated Clone() {
      return new PlatformTokenSpeedUpdated(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "new_speed" field.</summary>
    public const int NewSpeedFieldNumber = 2;
    private long newSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewSpeed {
      get { return newSpeed_; }
      set {
        newSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlatformTokenSpeedUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlatformTokenSpeedUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (NewSpeed != other.NewSpeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (NewSpeed != 0L) hash ^= NewSpeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (NewSpeed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (NewSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewSpeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlatformTokenSpeedUpdated other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.NewSpeed != 0L) {
        NewSpeed = other.NewSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            NewSpeed = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DistributedSupplierPlatformToken : pb::IMessage<DistributedSupplierPlatformToken> {
    private static readonly pb::MessageParser<DistributedSupplierPlatformToken> _parser = new pb::MessageParser<DistributedSupplierPlatformToken>(() => new DistributedSupplierPlatformToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DistributedSupplierPlatformToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributedSupplierPlatformToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributedSupplierPlatformToken(DistributedSupplierPlatformToken other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      supplier_ = other.supplier_ != null ? other.supplier_.Clone() : null;
      platformTokenDelta_ = other.platformTokenDelta_ != null ? other.platformTokenDelta_.Clone() : null;
      platformTokenSupplyIndex_ = other.platformTokenSupplyIndex_ != null ? other.platformTokenSupplyIndex_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributedSupplierPlatformToken Clone() {
      return new DistributedSupplierPlatformToken(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "supplier" field.</summary>
    public const int SupplierFieldNumber = 2;
    private global::AElf.Types.Address supplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Supplier {
      get { return supplier_; }
      set {
        supplier_ = value;
      }
    }

    /// <summary>Field number for the "platform_token_delta" field.</summary>
    public const int PlatformTokenDeltaFieldNumber = 3;
    private global::AElf.Types.BigIntValue platformTokenDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.BigIntValue PlatformTokenDelta {
      get { return platformTokenDelta_; }
      set {
        platformTokenDelta_ = value;
      }
    }

    /// <summary>Field number for the "platform_token_supply_index" field.</summary>
    public const int PlatformTokenSupplyIndexFieldNumber = 4;
    private global::AElf.Types.BigIntValue platformTokenSupplyIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.BigIntValue PlatformTokenSupplyIndex {
      get { return platformTokenSupplyIndex_; }
      set {
        platformTokenSupplyIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DistributedSupplierPlatformToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DistributedSupplierPlatformToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Supplier, other.Supplier)) return false;
      if (!object.Equals(PlatformTokenDelta, other.PlatformTokenDelta)) return false;
      if (!object.Equals(PlatformTokenSupplyIndex, other.PlatformTokenSupplyIndex)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (supplier_ != null) hash ^= Supplier.GetHashCode();
      if (platformTokenDelta_ != null) hash ^= PlatformTokenDelta.GetHashCode();
      if (platformTokenSupplyIndex_ != null) hash ^= PlatformTokenSupplyIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (supplier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Supplier);
      }
      if (platformTokenDelta_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlatformTokenDelta);
      }
      if (platformTokenSupplyIndex_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlatformTokenSupplyIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (supplier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Supplier);
      }
      if (platformTokenDelta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlatformTokenDelta);
      }
      if (platformTokenSupplyIndex_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlatformTokenSupplyIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DistributedSupplierPlatformToken other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.supplier_ != null) {
        if (supplier_ == null) {
          Supplier = new global::AElf.Types.Address();
        }
        Supplier.MergeFrom(other.Supplier);
      }
      if (other.platformTokenDelta_ != null) {
        if (platformTokenDelta_ == null) {
          PlatformTokenDelta = new global::AElf.Types.BigIntValue();
        }
        PlatformTokenDelta.MergeFrom(other.PlatformTokenDelta);
      }
      if (other.platformTokenSupplyIndex_ != null) {
        if (platformTokenSupplyIndex_ == null) {
          PlatformTokenSupplyIndex = new global::AElf.Types.BigIntValue();
        }
        PlatformTokenSupplyIndex.MergeFrom(other.PlatformTokenSupplyIndex);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (supplier_ == null) {
              Supplier = new global::AElf.Types.Address();
            }
            input.ReadMessage(Supplier);
            break;
          }
          case 26: {
            if (platformTokenDelta_ == null) {
              PlatformTokenDelta = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(PlatformTokenDelta);
            break;
          }
          case 34: {
            if (platformTokenSupplyIndex_ == null) {
              PlatformTokenSupplyIndex = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(PlatformTokenSupplyIndex);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DistributedBorrowerPlatformToken : pb::IMessage<DistributedBorrowerPlatformToken> {
    private static readonly pb::MessageParser<DistributedBorrowerPlatformToken> _parser = new pb::MessageParser<DistributedBorrowerPlatformToken>(() => new DistributedBorrowerPlatformToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DistributedBorrowerPlatformToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributedBorrowerPlatformToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributedBorrowerPlatformToken(DistributedBorrowerPlatformToken other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      platformTokenDelta_ = other.platformTokenDelta_ != null ? other.platformTokenDelta_.Clone() : null;
      platformTokenBorrowIndex_ = other.platformTokenBorrowIndex_ != null ? other.platformTokenBorrowIndex_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributedBorrowerPlatformToken Clone() {
      return new DistributedBorrowerPlatformToken(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 2;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "platform_token_delta" field.</summary>
    public const int PlatformTokenDeltaFieldNumber = 3;
    private global::AElf.Types.BigIntValue platformTokenDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.BigIntValue PlatformTokenDelta {
      get { return platformTokenDelta_; }
      set {
        platformTokenDelta_ = value;
      }
    }

    /// <summary>Field number for the "platform_token_borrow_index" field.</summary>
    public const int PlatformTokenBorrowIndexFieldNumber = 4;
    private global::AElf.Types.BigIntValue platformTokenBorrowIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.BigIntValue PlatformTokenBorrowIndex {
      get { return platformTokenBorrowIndex_; }
      set {
        platformTokenBorrowIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DistributedBorrowerPlatformToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DistributedBorrowerPlatformToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (!object.Equals(PlatformTokenDelta, other.PlatformTokenDelta)) return false;
      if (!object.Equals(PlatformTokenBorrowIndex, other.PlatformTokenBorrowIndex)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (platformTokenDelta_ != null) hash ^= PlatformTokenDelta.GetHashCode();
      if (platformTokenBorrowIndex_ != null) hash ^= PlatformTokenBorrowIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (borrower_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Borrower);
      }
      if (platformTokenDelta_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlatformTokenDelta);
      }
      if (platformTokenBorrowIndex_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlatformTokenBorrowIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (platformTokenDelta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlatformTokenDelta);
      }
      if (platformTokenBorrowIndex_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlatformTokenBorrowIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DistributedBorrowerPlatformToken other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.platformTokenDelta_ != null) {
        if (platformTokenDelta_ == null) {
          PlatformTokenDelta = new global::AElf.Types.BigIntValue();
        }
        PlatformTokenDelta.MergeFrom(other.PlatformTokenDelta);
      }
      if (other.platformTokenBorrowIndex_ != null) {
        if (platformTokenBorrowIndex_ == null) {
          PlatformTokenBorrowIndex = new global::AElf.Types.BigIntValue();
        }
        PlatformTokenBorrowIndex.MergeFrom(other.PlatformTokenBorrowIndex);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 26: {
            if (platformTokenDelta_ == null) {
              PlatformTokenDelta = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(PlatformTokenDelta);
            break;
          }
          case 34: {
            if (platformTokenBorrowIndex_ == null) {
              PlatformTokenBorrowIndex = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(PlatformTokenBorrowIndex);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BorrowCapChanged : pb::IMessage<BorrowCapChanged> {
    private static readonly pb::MessageParser<BorrowCapChanged> _parser = new pb::MessageParser<BorrowCapChanged>(() => new BorrowCapChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BorrowCapChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowCapChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowCapChanged(BorrowCapChanged other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      newBorrowCap_ = other.newBorrowCap_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowCapChanged Clone() {
      return new BorrowCapChanged(this);
    }

    /// <summary>Field number for the "a_Token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "new_borrow_cap" field.</summary>
    public const int NewBorrowCapFieldNumber = 2;
    private long newBorrowCap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewBorrowCap {
      get { return newBorrowCap_; }
      set {
        newBorrowCap_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BorrowCapChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BorrowCapChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (NewBorrowCap != other.NewBorrowCap) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (NewBorrowCap != 0L) hash ^= NewBorrowCap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (NewBorrowCap != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewBorrowCap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (NewBorrowCap != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewBorrowCap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BorrowCapChanged other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.NewBorrowCap != 0L) {
        NewBorrowCap = other.NewBorrowCap;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            NewBorrowCap = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BorrowCapGuardianChanged : pb::IMessage<BorrowCapGuardianChanged> {
    private static readonly pb::MessageParser<BorrowCapGuardianChanged> _parser = new pb::MessageParser<BorrowCapGuardianChanged>(() => new BorrowCapGuardianChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BorrowCapGuardianChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.Controller.ControllerContractReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowCapGuardianChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowCapGuardianChanged(BorrowCapGuardianChanged other) : this() {
      oldBorrowCapGuardian_ = other.oldBorrowCapGuardian_ != null ? other.oldBorrowCapGuardian_.Clone() : null;
      newBorrowCapGuardian_ = other.newBorrowCapGuardian_ != null ? other.newBorrowCapGuardian_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowCapGuardianChanged Clone() {
      return new BorrowCapGuardianChanged(this);
    }

    /// <summary>Field number for the "old_borrow_cap_guardian" field.</summary>
    public const int OldBorrowCapGuardianFieldNumber = 1;
    private global::AElf.Types.Address oldBorrowCapGuardian_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address OldBorrowCapGuardian {
      get { return oldBorrowCapGuardian_; }
      set {
        oldBorrowCapGuardian_ = value;
      }
    }

    /// <summary>Field number for the "new_borrow_cap_guardian" field.</summary>
    public const int NewBorrowCapGuardianFieldNumber = 2;
    private global::AElf.Types.Address newBorrowCapGuardian_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address NewBorrowCapGuardian {
      get { return newBorrowCapGuardian_; }
      set {
        newBorrowCapGuardian_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BorrowCapGuardianChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BorrowCapGuardianChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OldBorrowCapGuardian, other.OldBorrowCapGuardian)) return false;
      if (!object.Equals(NewBorrowCapGuardian, other.NewBorrowCapGuardian)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oldBorrowCapGuardian_ != null) hash ^= OldBorrowCapGuardian.GetHashCode();
      if (newBorrowCapGuardian_ != null) hash ^= NewBorrowCapGuardian.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (oldBorrowCapGuardian_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OldBorrowCapGuardian);
      }
      if (newBorrowCapGuardian_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewBorrowCapGuardian);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oldBorrowCapGuardian_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OldBorrowCapGuardian);
      }
      if (newBorrowCapGuardian_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewBorrowCapGuardian);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BorrowCapGuardianChanged other) {
      if (other == null) {
        return;
      }
      if (other.oldBorrowCapGuardian_ != null) {
        if (oldBorrowCapGuardian_ == null) {
          OldBorrowCapGuardian = new global::AElf.Types.Address();
        }
        OldBorrowCapGuardian.MergeFrom(other.OldBorrowCapGuardian);
      }
      if (other.newBorrowCapGuardian_ != null) {
        if (newBorrowCapGuardian_ == null) {
          NewBorrowCapGuardian = new global::AElf.Types.Address();
        }
        NewBorrowCapGuardian.MergeFrom(other.NewBorrowCapGuardian);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (oldBorrowCapGuardian_ == null) {
              OldBorrowCapGuardian = new global::AElf.Types.Address();
            }
            input.ReadMessage(OldBorrowCapGuardian);
            break;
          }
          case 18: {
            if (newBorrowCapGuardian_ == null) {
              NewBorrowCapGuardian = new global::AElf.Types.Address();
            }
            input.ReadMessage(NewBorrowCapGuardian);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
