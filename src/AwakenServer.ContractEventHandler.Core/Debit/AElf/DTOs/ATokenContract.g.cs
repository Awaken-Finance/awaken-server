// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: a_token_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Awaken.Contracts.AToken {

  /// <summary>Holder for reflection information generated from a_token_contract.proto</summary>
  public static partial class ATokenContractReflection {

    #region Descriptor
    /// <summary>File descriptor for a_token_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ATokenContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZhX3Rva2VuX2NvbnRyYWN0LnByb3RvGg9hZWxmL2NvcmUucHJvdG8aEmFl",
            "bGYvb3B0aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3Rv",
            "Gh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8iRgoHQWNjb3VudBIe",
            "CgdhX3Rva2VuGAEgASgLMg0uYWVsZi5BZGRyZXNzEhsKBHVzZXIYAiABKAsy",
            "DS5hZWxmLkFkZHJlc3MiOwoOQm9ycm93U25hcHNob3QSEQoJcHJpbmNpcGFs",
            "GAEgASgDEhYKDmludGVyZXN0X2luZGV4GAIgASgDIjQKD0luaXRpYWxpemVJ",
            "bnB1dBIhCgpjb250cm9sbGVyGAEgASgLMg0uYWVsZi5BZGRyZXNzInMKC0Ny",
            "ZWF0ZUlucHV0EhkKEXVuZGVybHlpbmdfc3ltYm9sGAEgASgJEioKE2ludGVy",
            "ZXN0X3JhdGVfbW9kZWwYAiABKAsyDS5hZWxmLkFkZHJlc3MSHQoVaW5pdGlh",
            "bF9leGNoYW5nZV9yYXRlGAMgASgDIlEKCU1pbnRJbnB1dBIeCgdhX3Rva2Vu",
            "GAEgASgLMg0uYWVsZi5BZGRyZXNzEhMKC21pbnRfYW1vdW50GAIgASgDEg8K",
            "B2NoYW5uZWwYAyABKAkiPQoLUmVkZWVtSW5wdXQSHgoHYV90b2tlbhgBIAEo",
            "CzINLmFlbGYuQWRkcmVzcxIOCgZhbW91bnQYAiABKAMiRwoVUmVkZWVtVW5k",
            "ZXJseWluZ0lucHV0Eh4KB2FfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJlc3MS",
            "DgoGYW1vdW50GAIgASgDIk4KC0JvcnJvd0lucHV0Eh4KB2FfdG9rZW4YASAB",
            "KAsyDS5hZWxmLkFkZHJlc3MSDgoGYW1vdW50GAIgASgDEg8KB2NoYW5uZWwY",
            "AyABKAkiQgoQUmVwYXlCb3Jyb3dJbnB1dBIeCgdhX3Rva2VuGAEgASgLMg0u",
            "YWVsZi5BZGRyZXNzEg4KBmFtb3VudBgCIAEoAyJpChZSZXBheUJvcnJvd0Jl",
            "aGFsZklucHV0Eh4KB2FfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJlc3MSDgoG",
            "YW1vdW50GAIgASgDEh8KCGJvcnJvd2VyGAMgASgLMg0uYWVsZi5BZGRyZXNz",
            "IpsBChRMaXF1aWRhdGVCb3Jyb3dJbnB1dBIjCgxib3Jyb3dfdG9rZW4YASAB",
            "KAsyDS5hZWxmLkFkZHJlc3MSJwoQY29sbGF0ZXJhbF90b2tlbhgCIAEoCzIN",
            "LmFlbGYuQWRkcmVzcxIUCgxyZXBheV9hbW91bnQYAyABKAMSHwoIYm9ycm93",
            "ZXIYBCABKAsyDS5hZWxmLkFkZHJlc3MiQgoQQWRkUmVzZXJ2ZXNJbnB1dBIe",
            "CgdhX3Rva2VuGAEgASgLMg0uYWVsZi5BZGRyZXNzEg4KBmFtb3VudBgCIAEo",
            "AyJFChNSZWR1Y2VSZXNlcnZlc0lucHV0Eh4KB2FfdG9rZW4YASABKAsyDS5h",
            "ZWxmLkFkZHJlc3MSDgoGYW1vdW50GAIgASgDIrMBCgpTZWl6ZUlucHV0EicK",
            "EGNvbGxhdGVyYWxfdG9rZW4YASABKAsyDS5hZWxmLkFkZHJlc3MSIwoMc2Vp",
            "emVyX3Rva2VuGAIgASgLMg0uYWVsZi5BZGRyZXNzEiEKCmxpcXVpZGF0b3IY",
            "AyABKAsyDS5hZWxmLkFkZHJlc3MSHwoIYm9ycm93ZXIYBCABKAsyDS5hZWxm",
            "LkFkZHJlc3MSEwoLc2VpemVUb2tlbnMYBSABKAMiWQoZU2V0SW50ZXJlc3RS",
            "YXRlTW9kZWxJbnB1dBIeCgdhX3Rva2VuGAEgASgLMg0uYWVsZi5BZGRyZXNz",
            "EhwKBW1vZGVsGAIgASgLMg0uYWVsZi5BZGRyZXNzIk8KFVNldFJlc2VydmVG",
            "YWN0b3JJbnB1dBIeCgdhX3Rva2VuGAEgASgLMg0uYWVsZi5BZGRyZXNzEhYK",
            "DnJlc2VydmVfZmFjdG9yGAIgASgDImIKGEdldEFjY291bnRTbmFwc2hvdE91",
            "dHB1dBIXCg9hX3Rva2VuX2JhbGFuY2UYASABKAMSFgoOYm9ycm93X2JhbGFu",
            "Y2UYAiABKAMSFQoNZXhjaGFuZ2VfcmF0ZRgDIAEoAyLLAQoOQWNjcnVlSW50",
            "ZXJlc3QSHgoHYV90b2tlbhgBIAEoCzINLmFlbGYuQWRkcmVzcxIMCgRjYXNo",
            "GAIgASgDEhsKE2ludGVyZXN0QWNjdW11bGF0ZWQYAyABKAMSEwoLYm9ycm93",
            "SW5kZXgYBCABKAMSFQoNdG90YWxfYm9ycm93cxgFIAEoAxIdChVib3Jyb3df",
            "cmF0ZV9wZXJfYmxvY2sYBiABKAMSHQoVc3VwcGx5X3JhdGVfcGVyX2Jsb2Nr",
            "GAcgASgDOgSguxgBIqMBCgRNaW50EhIKCnVuZGVybHlpbmcYASABKAkSHgoH",
            "YV90b2tlbhgCIAEoCzINLmFlbGYuQWRkcmVzcxIZChF1bmRlcmx5aW5nX2Ft",
            "b3VudBgDIAEoAxIWCg5hX3Rva2VuX2Ftb3VudBgEIAEoAxIdCgZzZW5kZXIY",
            "BSABKAsyDS5hZWxmLkFkZHJlc3MSDwoHY2hhbm5lbBgGIAEoCToEoLsYASKU",
            "AQoGUmVkZWVtEhIKCnVuZGVybHlpbmcYASABKAkSHgoHYV90b2tlbhgCIAEo",
            "CzINLmFlbGYuQWRkcmVzcxIZChF1bmRlcmx5aW5nX2Ftb3VudBgDIAEoAxIW",
            "Cg5hX3Rva2VuX2Ftb3VudBgEIAEoAxIdCgZzZW5kZXIYBSABKAsyDS5hZWxm",
            "LkFkZHJlc3M6BKC7GAEijgEKBkJvcnJvdxIeCgdhX3Rva2VuGAEgASgLMg0u",
            "YWVsZi5BZGRyZXNzEh8KCGJvcnJvd2VyGAIgASgLMg0uYWVsZi5BZGRyZXNz",
            "Eg4KBmFtb3VudBgDIAEoAxIWCg5ib3Jyb3dfYmFsYW5jZRgEIAEoAxIVCg10",
            "b3RhbF9ib3Jyb3dzGAUgASgDOgSguxgBIrEBCgtSZXBheUJvcnJvdxIeCgdh",
            "X3Rva2VuGAEgASgLMg0uYWVsZi5BZGRyZXNzEhwKBXBheWVyGAIgASgLMg0u",
            "YWVsZi5BZGRyZXNzEh8KCGJvcnJvd2VyGAMgASgLMg0uYWVsZi5BZGRyZXNz",
            "Eg4KBmFtb3VudBgEIAEoAxIWCg5ib3Jyb3dfYmFsYW5jZRgFIAEoAxIVCg10",
            "b3RhbF9ib3Jyb3dzGAYgASgDOgSguxgBItkBCg9MaXF1aWRhdGVCb3Jyb3cS",
            "JAoNcmVwYXlfYV90b2tlbhgBIAEoCzINLmFlbGYuQWRkcmVzcxIhCgpsaXF1",
            "aWRhdG9yGAIgASgLMg0uYWVsZi5BZGRyZXNzEh8KCGJvcnJvd2VyGAMgASgL",
            "Mg0uYWVsZi5BZGRyZXNzEhQKDHJlcGF5X2Ftb3VudBgEIAEoAxIkCg1zZWl6",
            "ZV9hX3Rva2VuGAUgASgLMg0uYWVsZi5BZGRyZXNzEhoKEnNlaXplX3Rva2Vu",
            "X2Ftb3VudBgGIAEoAzoEoLsYASJYCgxBZG1pbkNoYW5nZWQSIAoJb2xkX2Fk",
            "bWluGAEgASgLMg0uYWVsZi5BZGRyZXNzEiAKCW5ld19hZG1pbhgCIAEoCzIN",
            "LmFlbGYuQWRkcmVzczoEoLsYASJ0ChRSZXNlcnZlRmFjdG9yQ2hhbmdlZBIa",
            "ChJvbGRfcmVzZXJ2ZV9mYWN0b3IYASABKAMSGgoSbmV3X3Jlc2VydmVfZmFj",
            "dG9yGAIgASgDEh4KB2FfdG9rZW4YAyABKAsyDS5hZWxmLkFkZHJlc3M6BKC7",
            "GAEilAEKDVJlc2VydmVzQWRkZWQSEgoKdW5kZXJseWluZxgBIAEoCRIeCgdh",
            "X3Rva2VuGAIgASgLMg0uYWVsZi5BZGRyZXNzEhIKCmFkZF9hbW91bnQYAyAB",
            "KAMSFgoOdG90YWxfcmVzZXJ2ZXMYBCABKAMSHQoGc2VuZGVyGAUgASgLMg0u",
            "YWVsZi5BZGRyZXNzOgSguxgBIpkBCg9SZXNlcnZlc1JlZHVjZWQSEgoKdW5k",
            "ZXJseWluZxgBIAEoCRIeCgdhX3Rva2VuGAIgASgLMg0uYWVsZi5BZGRyZXNz",
            "EhUKDXJlZHVjZV9hbW91bnQYAyABKAMSFgoOdG90YWxfcmVzZXJ2ZXMYBCAB",
            "KAMSHQoGc2VuZGVyGAUgASgLMg0uYWVsZi5BZGRyZXNzOgSguxgBIkwKDENh",
            "bGxiYWNrSW5mbxInChBjb250cmFjdF9hZGRyZXNzGAEgASgLMg0uYWVsZi5B",
            "ZGRyZXNzEhMKC21ldGhvZF9uYW1lGAIgASgJIkcKB0JhbGFuY2USDgoGc3lt",
            "Ym9sGAEgASgJEhwKBW93bmVyGAIgASgLMg0uYWVsZi5BZGRyZXNzEg4KBmFt",
            "b3VudBgDIAEoAyIjCghCYWxhbmNlcxIXCgV2YWx1ZRgBIAMoCzIILkJhbGFu",
            "Y2UiWAoNVHJhbnNmZXJJbnB1dBIZCgJ0bxgBIAEoCzINLmFlbGYuQWRkcmVz",
            "cxIOCgZzeW1ib2wYAiABKAkSDgoGYW1vdW50GAMgASgDEgwKBG1lbW8YBCAB",
            "KAkieQoRVHJhbnNmZXJGcm9tSW5wdXQSGwoEZnJvbRgBIAEoCzINLmFlbGYu",
            "QWRkcmVzcxIZCgJ0bxgCIAEoCzINLmFlbGYuQWRkcmVzcxIOCgZzeW1ib2wY",
            "AyABKAkSDgoGYW1vdW50GAQgASgDEgwKBG1lbW8YBSABKAkiTgoMQXBwcm92",
            "ZUlucHV0Eh4KB3NwZW5kZXIYASABKAsyDS5hZWxmLkFkZHJlc3MSDgoGc3lt",
            "Ym9sGAIgASgJEg4KBmFtb3VudBgDIAEoAyJBChBHZXRCYWxhbmNlc0lucHV0",
            "Eg8KB3N5bWJvbHMYASADKAkSHAoFb3duZXIYAiABKAsyDS5hZWxmLkFkZHJl",
            "c3MiYQoRR2V0QWxsb3dhbmNlSW5wdXQSDgoGc3ltYm9sGAEgASgJEhwKBW93",
            "bmVyGAIgASgLMg0uYWVsZi5BZGRyZXNzEh4KB3NwZW5kZXIYAyABKAsyDS5h",
            "ZWxmLkFkZHJlc3MijgEKC1RyYW5zZmVycmVkEiIKBGZyb20YASABKAsyDS5h",
            "ZWxmLkFkZHJlc3NCBYiP9QEBEiAKAnRvGAIgASgLMg0uYWVsZi5BZGRyZXNz",
            "QgWIj/UBARIVCgZzeW1ib2wYAyABKAlCBYiP9QEBEg4KBmFtb3VudBgEIAEo",
            "AxIMCgRtZW1vGAUgASgJOgSguxgBIoMBCghBcHByb3ZlZBIjCgVvd25lchgB",
            "IAEoCzINLmFlbGYuQWRkcmVzc0IFiI/1AQESJQoHc3BlbmRlchgCIAEoCzIN",
            "LmFlbGYuQWRkcmVzc0IFiI/1AQESFQoGc3ltYm9sGAMgASgJQgWIj/UBARIO",
            "CgZhbW91bnQYBCABKAM6BKC7GAEihQEKClVuQXBwcm92ZWQSIwoFb3duZXIY",
            "ASABKAsyDS5hZWxmLkFkZHJlc3NCBYiP9QEBEiUKB3NwZW5kZXIYAiABKAsy",
            "DS5hZWxmLkFkZHJlc3NCBYiP9QEBEhUKBnN5bWJvbBgDIAEoCUIFiI/1AQES",
            "DgoGYW1vdW50GAQgASgDOgSguxgBIsgBCgxUb2tlbkNyZWF0ZWQSDgoGc3lt",
            "Ym9sGAEgASgJEhIKCnRva2VuX25hbWUYAiABKAkSEAoIZGVjaW1hbHMYAyAB",
            "KAUSHgoHYV90b2tlbhgEIAEoCzINLmFlbGYuQWRkcmVzcxISCgp1bmRlcmx5",
            "aW5nGAUgASgJEiUKDnRva2VuX2NvbnRyYWN0GAYgASgLMg0uYWVsZi5BZGRy",
            "ZXNzEiEKCmNvbnRyb2xsZXIYByABKAsyDS5hZWxmLkFkZHJlc3M6BKC7GAEy",
            "nxcKDkFUb2tlbkNvbnRyYWN0EjgKCkluaXRpYWxpemUSEC5Jbml0aWFsaXpl",
            "SW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIwCgZDcmVhdGUSDC5D",
            "cmVhdGVJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEiwKBE1pbnQS",
            "Ci5NaW50SW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIwCgZSZWRl",
            "ZW0SDC5SZWRlZW1JbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkQK",
            "EFJlZGVlbVVuZGVybHlpbmcSFi5SZWRlZW1VbmRlcmx5aW5nSW5wdXQaFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkiABIwCgZCb3Jyb3cSDC5Cb3Jyb3dJbnB1",
            "dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEjoKC1JlcGF5Qm9ycm93EhEu",
            "UmVwYXlCb3Jyb3dJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkYK",
            "EVJlcGF5Qm9ycm93QmVoYWxmEhcuUmVwYXlCb3Jyb3dCZWhhbGZJbnB1dBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkIKD0xpcXVpZGF0ZUJvcnJvdxIV",
            "LkxpcXVpZGF0ZUJvcnJvd0lucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "IgASOgoLQWRkUmVzZXJ2ZXMSES5BZGRSZXNlcnZlc0lucHV0GhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5IgASQAoOUmVkdWNlUmVzZXJ2ZXMSFC5SZWR1Y2VS",
            "ZXNlcnZlc0lucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASOQoOQWNj",
            "cnVlSW50ZXJlc3QSDS5hZWxmLkFkZHJlc3MaFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkiABIuCgVTZWl6ZRILLlNlaXplSW5wdXQaFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkiABI0CghUcmFuc2ZlchIOLlRyYW5zZmVySW5wdXQaFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkiABI8CgxUcmFuc2ZlckZyb20SEi5UcmFuc2Zl",
            "ckZyb21JbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEjIKB0FwcHJv",
            "dmUSDS5BcHByb3ZlSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIz",
            "CghTZXRBZG1pbhINLmFlbGYuQWRkcmVzcxoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eSIAEjkKDlNldENvbXB0cm9sbGVyEg0uYWVsZi5BZGRyZXNzGhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5IgASRAoQU2V0UmVzZXJ2ZUZhY3RvchIWLlNl",
            "dFJlc2VydmVGYWN0b3JJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIA",
            "EkwKFFNldEludGVyZXN0UmF0ZU1vZGVsEhouU2V0SW50ZXJlc3RSYXRlTW9k",
            "ZWxJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkQKFEdldFVuZGVy",
            "bHlpbmdCYWxhbmNlEgguQWNjb3VudBobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2",
            "NFZhbHVlIgWIifcBARJAChJHZXRBY2NvdW50U25hcHNob3QSCC5BY2NvdW50",
            "GhkuR2V0QWNjb3VudFNuYXBzaG90T3V0cHV0IgWIifcBARJKChVHZXRCb3Jy",
            "b3dSYXRlUGVyQmxvY2sSDS5hZWxmLkFkZHJlc3MaGy5nb29nbGUucHJvdG9i",
            "dWYuSW50NjRWYWx1ZSIFiIn3AQESSgoVR2V0U3VwcGx5UmF0ZVBlckJsb2Nr",
            "Eg0uYWVsZi5BZGRyZXNzGhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUi",
            "BYiJ9wEBEkQKD0dldFRvdGFsQm9ycm93cxINLmFlbGYuQWRkcmVzcxobLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcBARJCChdHZXRDdXJyZW50",
            "Qm9ycm93QmFsYW5jZRIILkFjY291bnQaGy5nb29nbGUucHJvdG9idWYuSW50",
            "NjRWYWx1ZSIAEkYKFkdldEJvcnJvd0JhbGFuY2VTdG9yZWQSCC5BY2NvdW50",
            "GhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUiBYiJ9wEBEkYKFkdldEN1",
            "cnJlbnRFeGNoYW5nZVJhdGUSDS5hZWxmLkFkZHJlc3MaGy5nb29nbGUucHJv",
            "dG9idWYuSW50NjRWYWx1ZSIAEkoKFUdldEV4Y2hhbmdlUmF0ZVN0b3JlZBIN",
            "LmFlbGYuQWRkcmVzcxobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWI",
            "ifcBARI8CgdHZXRDYXNoEg0uYWVsZi5BZGRyZXNzGhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDY0VmFsdWUiBYiJ9wEBEkUKEEdldFJlc2VydmVGYWN0b3ISDS5h",
            "ZWxmLkFkZHJlc3MaGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3",
            "AQESOAoIR2V0QWRtaW4SFi5nb29nbGUucHJvdG9idWYuRW1wdHkaDS5hZWxm",
            "LkFkZHJlc3MiBYiJ9wEBEj4KDkdldENvbXB0cm9sbGVyEhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5Gg0uYWVsZi5BZGRyZXNzIgWIifcBARI7ChRHZXRJbnRl",
            "cmVzdFJhdGVNb2RlbBINLmFlbGYuQWRkcmVzcxoNLmFlbGYuQWRkcmVzcyIF",
            "iIn3AQESSwoWR2V0SW5pdGlhbEV4Y2hhbmdlUmF0ZRINLmFlbGYuQWRkcmVz",
            "cxobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcBARJFChBHZXRU",
            "b3RhbFJlc2VydmVzEg0uYWVsZi5BZGRyZXNzGhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDY0VmFsdWUiBYiJ9wEBEkoKFUdldEFjY3J1YWxCbG9ja051bWJlchIN",
            "LmFlbGYuQWRkcmVzcxobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWI",
            "ifcBARJDCg5HZXRCb3Jyb3dJbmRleBINLmFlbGYuQWRkcmVzcxobLmdvb2ds",
            "ZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcBARJGChBHZXRBVG9rZW5BZGRy",
            "ZXNzEhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGg0uYWVsZi5BZGRy",
            "ZXNzIgWIifcBARJDCg1HZXRVbmRlcmx5aW5nEg0uYWVsZi5BZGRyZXNzGhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIgWIifcBARI6CgpHZXRCYWxh",
            "bmNlEgguQWNjb3VudBobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWI",
            "ifcBARIyCgtHZXRCYWxhbmNlcxIRLkdldEJhbGFuY2VzSW5wdXQaCS5CYWxh",
            "bmNlcyIFiIn3AQESRgoMR2V0QWxsb3dhbmNlEhIuR2V0QWxsb3dhbmNlSW5w",
            "dXQaGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQESQwoOR2V0",
            "VG90YWxTdXBwbHkSDS5hZWxmLkFkZHJlc3MaGy5nb29nbGUucHJvdG9idWYu",
            "SW50NjRWYWx1ZSIFiIn3AQESSQoLR2V0RGVjaW1hbHMSFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkaGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZSIFiIn3",
            "AQEaMLLM9gErQXdha2VuLkNvbnRyYWN0cy5BVG9rZW4uQVRva2VuQ29udHJh",
            "Y3RTdGF0ZUIaqgIXQXdha2VuLkNvbnRyYWN0cy5BVG9rZW5iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.Account), global::Awaken.Contracts.AToken.Account.Parser, new[]{ "AToken", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.BorrowSnapshot), global::Awaken.Contracts.AToken.BorrowSnapshot.Parser, new[]{ "Principal", "InterestIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.InitializeInput), global::Awaken.Contracts.AToken.InitializeInput.Parser, new[]{ "Controller" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.CreateInput), global::Awaken.Contracts.AToken.CreateInput.Parser, new[]{ "UnderlyingSymbol", "InterestRateModel", "InitialExchangeRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.MintInput), global::Awaken.Contracts.AToken.MintInput.Parser, new[]{ "AToken", "MintAmount", "Channel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.RedeemInput), global::Awaken.Contracts.AToken.RedeemInput.Parser, new[]{ "AToken", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.RedeemUnderlyingInput), global::Awaken.Contracts.AToken.RedeemUnderlyingInput.Parser, new[]{ "AToken", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.BorrowInput), global::Awaken.Contracts.AToken.BorrowInput.Parser, new[]{ "AToken", "Amount", "Channel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.RepayBorrowInput), global::Awaken.Contracts.AToken.RepayBorrowInput.Parser, new[]{ "AToken", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.RepayBorrowBehalfInput), global::Awaken.Contracts.AToken.RepayBorrowBehalfInput.Parser, new[]{ "AToken", "Amount", "Borrower" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.LiquidateBorrowInput), global::Awaken.Contracts.AToken.LiquidateBorrowInput.Parser, new[]{ "BorrowToken", "CollateralToken", "RepayAmount", "Borrower" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.AddReservesInput), global::Awaken.Contracts.AToken.AddReservesInput.Parser, new[]{ "AToken", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.ReduceReservesInput), global::Awaken.Contracts.AToken.ReduceReservesInput.Parser, new[]{ "AToken", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.SeizeInput), global::Awaken.Contracts.AToken.SeizeInput.Parser, new[]{ "CollateralToken", "SeizerToken", "Liquidator", "Borrower", "SeizeTokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.SetInterestRateModelInput), global::Awaken.Contracts.AToken.SetInterestRateModelInput.Parser, new[]{ "AToken", "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.SetReserveFactorInput), global::Awaken.Contracts.AToken.SetReserveFactorInput.Parser, new[]{ "AToken", "ReserveFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.GetAccountSnapshotOutput), global::Awaken.Contracts.AToken.GetAccountSnapshotOutput.Parser, new[]{ "ATokenBalance", "BorrowBalance", "ExchangeRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.AccrueInterest), global::Awaken.Contracts.AToken.AccrueInterest.Parser, new[]{ "AToken", "Cash", "InterestAccumulated", "BorrowIndex", "TotalBorrows", "BorrowRatePerBlock", "SupplyRatePerBlock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.Mint), global::Awaken.Contracts.AToken.Mint.Parser, new[]{ "Underlying", "AToken", "UnderlyingAmount", "ATokenAmount", "Sender", "Channel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.Redeem), global::Awaken.Contracts.AToken.Redeem.Parser, new[]{ "Underlying", "AToken", "UnderlyingAmount", "ATokenAmount", "Sender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.Borrow), global::Awaken.Contracts.AToken.Borrow.Parser, new[]{ "AToken", "Borrower", "Amount", "BorrowBalance", "TotalBorrows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.RepayBorrow), global::Awaken.Contracts.AToken.RepayBorrow.Parser, new[]{ "AToken", "Payer", "Borrower", "Amount", "BorrowBalance", "TotalBorrows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.LiquidateBorrow), global::Awaken.Contracts.AToken.LiquidateBorrow.Parser, new[]{ "RepayAToken", "Liquidator", "Borrower", "RepayAmount", "SeizeAToken", "SeizeTokenAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.AdminChanged), global::Awaken.Contracts.AToken.AdminChanged.Parser, new[]{ "OldAdmin", "NewAdmin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.ReserveFactorChanged), global::Awaken.Contracts.AToken.ReserveFactorChanged.Parser, new[]{ "OldReserveFactor", "NewReserveFactor", "AToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.ReservesAdded), global::Awaken.Contracts.AToken.ReservesAdded.Parser, new[]{ "Underlying", "AToken", "AddAmount", "TotalReserves", "Sender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.ReservesReduced), global::Awaken.Contracts.AToken.ReservesReduced.Parser, new[]{ "Underlying", "AToken", "ReduceAmount", "TotalReserves", "Sender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.CallbackInfo), global::Awaken.Contracts.AToken.CallbackInfo.Parser, new[]{ "ContractAddress", "MethodName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.Balance), global::Awaken.Contracts.AToken.Balance.Parser, new[]{ "Symbol", "Owner", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.Balances), global::Awaken.Contracts.AToken.Balances.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.TransferInput), global::Awaken.Contracts.AToken.TransferInput.Parser, new[]{ "To", "Symbol", "Amount", "Memo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.TransferFromInput), global::Awaken.Contracts.AToken.TransferFromInput.Parser, new[]{ "From", "To", "Symbol", "Amount", "Memo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.ApproveInput), global::Awaken.Contracts.AToken.ApproveInput.Parser, new[]{ "Spender", "Symbol", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.GetBalancesInput), global::Awaken.Contracts.AToken.GetBalancesInput.Parser, new[]{ "Symbols", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.GetAllowanceInput), global::Awaken.Contracts.AToken.GetAllowanceInput.Parser, new[]{ "Symbol", "Owner", "Spender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.Transferred), global::Awaken.Contracts.AToken.Transferred.Parser, new[]{ "From", "To", "Symbol", "Amount", "Memo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.Approved), global::Awaken.Contracts.AToken.Approved.Parser, new[]{ "Owner", "Spender", "Symbol", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.UnApproved), global::Awaken.Contracts.AToken.UnApproved.Parser, new[]{ "Owner", "Spender", "Symbol", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Awaken.Contracts.AToken.TokenCreated), global::Awaken.Contracts.AToken.TokenCreated.Parser, new[]{ "Symbol", "TokenName", "Decimals", "AToken", "Underlying", "TokenContract", "Controller" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Structs
  /// </summary>
  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::AElf.Types.Address user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::AElf.Types.Address();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::AElf.Types.Address();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BorrowSnapshot : pb::IMessage<BorrowSnapshot> {
    private static readonly pb::MessageParser<BorrowSnapshot> _parser = new pb::MessageParser<BorrowSnapshot>(() => new BorrowSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BorrowSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowSnapshot(BorrowSnapshot other) : this() {
      principal_ = other.principal_;
      interestIndex_ = other.interestIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowSnapshot Clone() {
      return new BorrowSnapshot(this);
    }

    /// <summary>Field number for the "principal" field.</summary>
    public const int PrincipalFieldNumber = 1;
    private long principal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Principal {
      get { return principal_; }
      set {
        principal_ = value;
      }
    }

    /// <summary>Field number for the "interest_index" field.</summary>
    public const int InterestIndexFieldNumber = 2;
    private long interestIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InterestIndex {
      get { return interestIndex_; }
      set {
        interestIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BorrowSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BorrowSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Principal != other.Principal) return false;
      if (InterestIndex != other.InterestIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Principal != 0L) hash ^= Principal.GetHashCode();
      if (InterestIndex != 0L) hash ^= InterestIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Principal != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Principal);
      }
      if (InterestIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(InterestIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Principal != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Principal);
      }
      if (InterestIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InterestIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BorrowSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.Principal != 0L) {
        Principal = other.Principal;
      }
      if (other.InterestIndex != 0L) {
        InterestIndex = other.InterestIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Principal = input.ReadInt64();
            break;
          }
          case 16: {
            InterestIndex = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Inputs
  /// </summary>
  public sealed partial class InitializeInput : pb::IMessage<InitializeInput> {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput(InitializeInput other) : this() {
      controller_ = other.controller_ != null ? other.controller_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "controller" field.</summary>
    public const int ControllerFieldNumber = 1;
    private global::AElf.Types.Address controller_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Controller {
      get { return controller_; }
      set {
        controller_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Controller, other.Controller)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (controller_ != null) hash ^= Controller.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (controller_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Controller);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (controller_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Controller);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.controller_ != null) {
        if (controller_ == null) {
          Controller = new global::AElf.Types.Address();
        }
        Controller.MergeFrom(other.Controller);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controller_ == null) {
              Controller = new global::AElf.Types.Address();
            }
            input.ReadMessage(Controller);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateInput : pb::IMessage<CreateInput> {
    private static readonly pb::MessageParser<CreateInput> _parser = new pb::MessageParser<CreateInput>(() => new CreateInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInput(CreateInput other) : this() {
      underlyingSymbol_ = other.underlyingSymbol_;
      interestRateModel_ = other.interestRateModel_ != null ? other.interestRateModel_.Clone() : null;
      initialExchangeRate_ = other.initialExchangeRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInput Clone() {
      return new CreateInput(this);
    }

    /// <summary>Field number for the "underlying_symbol" field.</summary>
    public const int UnderlyingSymbolFieldNumber = 1;
    private string underlyingSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnderlyingSymbol {
      get { return underlyingSymbol_; }
      set {
        underlyingSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interest_rate_model" field.</summary>
    public const int InterestRateModelFieldNumber = 2;
    private global::AElf.Types.Address interestRateModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address InterestRateModel {
      get { return interestRateModel_; }
      set {
        interestRateModel_ = value;
      }
    }

    /// <summary>Field number for the "initial_exchange_rate" field.</summary>
    public const int InitialExchangeRateFieldNumber = 3;
    private long initialExchangeRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InitialExchangeRate {
      get { return initialExchangeRate_; }
      set {
        initialExchangeRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnderlyingSymbol != other.UnderlyingSymbol) return false;
      if (!object.Equals(InterestRateModel, other.InterestRateModel)) return false;
      if (InitialExchangeRate != other.InitialExchangeRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnderlyingSymbol.Length != 0) hash ^= UnderlyingSymbol.GetHashCode();
      if (interestRateModel_ != null) hash ^= InterestRateModel.GetHashCode();
      if (InitialExchangeRate != 0L) hash ^= InitialExchangeRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnderlyingSymbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UnderlyingSymbol);
      }
      if (interestRateModel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InterestRateModel);
      }
      if (InitialExchangeRate != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(InitialExchangeRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnderlyingSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnderlyingSymbol);
      }
      if (interestRateModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InterestRateModel);
      }
      if (InitialExchangeRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InitialExchangeRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateInput other) {
      if (other == null) {
        return;
      }
      if (other.UnderlyingSymbol.Length != 0) {
        UnderlyingSymbol = other.UnderlyingSymbol;
      }
      if (other.interestRateModel_ != null) {
        if (interestRateModel_ == null) {
          InterestRateModel = new global::AElf.Types.Address();
        }
        InterestRateModel.MergeFrom(other.InterestRateModel);
      }
      if (other.InitialExchangeRate != 0L) {
        InitialExchangeRate = other.InitialExchangeRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UnderlyingSymbol = input.ReadString();
            break;
          }
          case 18: {
            if (interestRateModel_ == null) {
              InterestRateModel = new global::AElf.Types.Address();
            }
            input.ReadMessage(InterestRateModel);
            break;
          }
          case 24: {
            InitialExchangeRate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MintInput : pb::IMessage<MintInput> {
    private static readonly pb::MessageParser<MintInput> _parser = new pb::MessageParser<MintInput>(() => new MintInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MintInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintInput(MintInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      mintAmount_ = other.mintAmount_;
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MintInput Clone() {
      return new MintInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "mint_amount" field.</summary>
    public const int MintAmountFieldNumber = 2;
    private long mintAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MintAmount {
      get { return mintAmount_; }
      set {
        mintAmount_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MintInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MintInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (MintAmount != other.MintAmount) return false;
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (MintAmount != 0L) hash ^= MintAmount.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (MintAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MintAmount);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (MintAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MintAmount);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MintInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.MintAmount != 0L) {
        MintAmount = other.MintAmount;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            MintAmount = input.ReadInt64();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemInput : pb::IMessage<RedeemInput> {
    private static readonly pb::MessageParser<RedeemInput> _parser = new pb::MessageParser<RedeemInput>(() => new RedeemInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemInput(RedeemInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemInput Clone() {
      return new RedeemInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemUnderlyingInput : pb::IMessage<RedeemUnderlyingInput> {
    private static readonly pb::MessageParser<RedeemUnderlyingInput> _parser = new pb::MessageParser<RedeemUnderlyingInput>(() => new RedeemUnderlyingInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemUnderlyingInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemUnderlyingInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemUnderlyingInput(RedeemUnderlyingInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemUnderlyingInput Clone() {
      return new RedeemUnderlyingInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemUnderlyingInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemUnderlyingInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemUnderlyingInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BorrowInput : pb::IMessage<BorrowInput> {
    private static readonly pb::MessageParser<BorrowInput> _parser = new pb::MessageParser<BorrowInput>(() => new BorrowInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BorrowInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowInput(BorrowInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      amount_ = other.amount_;
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BorrowInput Clone() {
      return new BorrowInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BorrowInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BorrowInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Amount != other.Amount) return false;
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BorrowInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepayBorrowInput : pb::IMessage<RepayBorrowInput> {
    private static readonly pb::MessageParser<RepayBorrowInput> _parser = new pb::MessageParser<RepayBorrowInput>(() => new RepayBorrowInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepayBorrowInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowInput(RepayBorrowInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowInput Clone() {
      return new RepayBorrowInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepayBorrowInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepayBorrowInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepayBorrowInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepayBorrowBehalfInput : pb::IMessage<RepayBorrowBehalfInput> {
    private static readonly pb::MessageParser<RepayBorrowBehalfInput> _parser = new pb::MessageParser<RepayBorrowBehalfInput>(() => new RepayBorrowBehalfInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepayBorrowBehalfInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowBehalfInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowBehalfInput(RepayBorrowBehalfInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      amount_ = other.amount_;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrowBehalfInput Clone() {
      return new RepayBorrowBehalfInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 3;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepayBorrowBehalfInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepayBorrowBehalfInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (borrower_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Borrower);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepayBorrowBehalfInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LiquidateBorrowInput : pb::IMessage<LiquidateBorrowInput> {
    private static readonly pb::MessageParser<LiquidateBorrowInput> _parser = new pb::MessageParser<LiquidateBorrowInput>(() => new LiquidateBorrowInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiquidateBorrowInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowInput(LiquidateBorrowInput other) : this() {
      borrowToken_ = other.borrowToken_ != null ? other.borrowToken_.Clone() : null;
      collateralToken_ = other.collateralToken_ != null ? other.collateralToken_.Clone() : null;
      repayAmount_ = other.repayAmount_;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrowInput Clone() {
      return new LiquidateBorrowInput(this);
    }

    /// <summary>Field number for the "borrow_token" field.</summary>
    public const int BorrowTokenFieldNumber = 1;
    private global::AElf.Types.Address borrowToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address BorrowToken {
      get { return borrowToken_; }
      set {
        borrowToken_ = value;
      }
    }

    /// <summary>Field number for the "collateral_token" field.</summary>
    public const int CollateralTokenFieldNumber = 2;
    private global::AElf.Types.Address collateralToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address CollateralToken {
      get { return collateralToken_; }
      set {
        collateralToken_ = value;
      }
    }

    /// <summary>Field number for the "repay_amount" field.</summary>
    public const int RepayAmountFieldNumber = 3;
    private long repayAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RepayAmount {
      get { return repayAmount_; }
      set {
        repayAmount_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 4;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiquidateBorrowInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiquidateBorrowInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BorrowToken, other.BorrowToken)) return false;
      if (!object.Equals(CollateralToken, other.CollateralToken)) return false;
      if (RepayAmount != other.RepayAmount) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (borrowToken_ != null) hash ^= BorrowToken.GetHashCode();
      if (collateralToken_ != null) hash ^= CollateralToken.GetHashCode();
      if (RepayAmount != 0L) hash ^= RepayAmount.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (borrowToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BorrowToken);
      }
      if (collateralToken_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CollateralToken);
      }
      if (RepayAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RepayAmount);
      }
      if (borrower_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Borrower);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (borrowToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BorrowToken);
      }
      if (collateralToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollateralToken);
      }
      if (RepayAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RepayAmount);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiquidateBorrowInput other) {
      if (other == null) {
        return;
      }
      if (other.borrowToken_ != null) {
        if (borrowToken_ == null) {
          BorrowToken = new global::AElf.Types.Address();
        }
        BorrowToken.MergeFrom(other.BorrowToken);
      }
      if (other.collateralToken_ != null) {
        if (collateralToken_ == null) {
          CollateralToken = new global::AElf.Types.Address();
        }
        CollateralToken.MergeFrom(other.CollateralToken);
      }
      if (other.RepayAmount != 0L) {
        RepayAmount = other.RepayAmount;
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (borrowToken_ == null) {
              BorrowToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(BorrowToken);
            break;
          }
          case 18: {
            if (collateralToken_ == null) {
              CollateralToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(CollateralToken);
            break;
          }
          case 24: {
            RepayAmount = input.ReadInt64();
            break;
          }
          case 34: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddReservesInput : pb::IMessage<AddReservesInput> {
    private static readonly pb::MessageParser<AddReservesInput> _parser = new pb::MessageParser<AddReservesInput>(() => new AddReservesInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddReservesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReservesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReservesInput(AddReservesInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReservesInput Clone() {
      return new AddReservesInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddReservesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddReservesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddReservesInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReduceReservesInput : pb::IMessage<ReduceReservesInput> {
    private static readonly pb::MessageParser<ReduceReservesInput> _parser = new pb::MessageParser<ReduceReservesInput>(() => new ReduceReservesInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReduceReservesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReduceReservesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReduceReservesInput(ReduceReservesInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReduceReservesInput Clone() {
      return new ReduceReservesInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReduceReservesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReduceReservesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReduceReservesInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SeizeInput : pb::IMessage<SeizeInput> {
    private static readonly pb::MessageParser<SeizeInput> _parser = new pb::MessageParser<SeizeInput>(() => new SeizeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeizeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeInput(SeizeInput other) : this() {
      collateralToken_ = other.collateralToken_ != null ? other.collateralToken_.Clone() : null;
      seizerToken_ = other.seizerToken_ != null ? other.seizerToken_.Clone() : null;
      liquidator_ = other.liquidator_ != null ? other.liquidator_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      seizeTokens_ = other.seizeTokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeizeInput Clone() {
      return new SeizeInput(this);
    }

    /// <summary>Field number for the "collateral_token" field.</summary>
    public const int CollateralTokenFieldNumber = 1;
    private global::AElf.Types.Address collateralToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address CollateralToken {
      get { return collateralToken_; }
      set {
        collateralToken_ = value;
      }
    }

    /// <summary>Field number for the "seizer_token" field.</summary>
    public const int SeizerTokenFieldNumber = 2;
    private global::AElf.Types.Address seizerToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address SeizerToken {
      get { return seizerToken_; }
      set {
        seizerToken_ = value;
      }
    }

    /// <summary>Field number for the "liquidator" field.</summary>
    public const int LiquidatorFieldNumber = 3;
    private global::AElf.Types.Address liquidator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Liquidator {
      get { return liquidator_; }
      set {
        liquidator_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 4;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "seizeTokens" field.</summary>
    public const int SeizeTokensFieldNumber = 5;
    private long seizeTokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SeizeTokens {
      get { return seizeTokens_; }
      set {
        seizeTokens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeizeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeizeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CollateralToken, other.CollateralToken)) return false;
      if (!object.Equals(SeizerToken, other.SeizerToken)) return false;
      if (!object.Equals(Liquidator, other.Liquidator)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (SeizeTokens != other.SeizeTokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (collateralToken_ != null) hash ^= CollateralToken.GetHashCode();
      if (seizerToken_ != null) hash ^= SeizerToken.GetHashCode();
      if (liquidator_ != null) hash ^= Liquidator.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (SeizeTokens != 0L) hash ^= SeizeTokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (collateralToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CollateralToken);
      }
      if (seizerToken_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SeizerToken);
      }
      if (liquidator_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Liquidator);
      }
      if (borrower_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Borrower);
      }
      if (SeizeTokens != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SeizeTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (collateralToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollateralToken);
      }
      if (seizerToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SeizerToken);
      }
      if (liquidator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Liquidator);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (SeizeTokens != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeizeTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeizeInput other) {
      if (other == null) {
        return;
      }
      if (other.collateralToken_ != null) {
        if (collateralToken_ == null) {
          CollateralToken = new global::AElf.Types.Address();
        }
        CollateralToken.MergeFrom(other.CollateralToken);
      }
      if (other.seizerToken_ != null) {
        if (seizerToken_ == null) {
          SeizerToken = new global::AElf.Types.Address();
        }
        SeizerToken.MergeFrom(other.SeizerToken);
      }
      if (other.liquidator_ != null) {
        if (liquidator_ == null) {
          Liquidator = new global::AElf.Types.Address();
        }
        Liquidator.MergeFrom(other.Liquidator);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.SeizeTokens != 0L) {
        SeizeTokens = other.SeizeTokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (collateralToken_ == null) {
              CollateralToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(CollateralToken);
            break;
          }
          case 18: {
            if (seizerToken_ == null) {
              SeizerToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(SeizerToken);
            break;
          }
          case 26: {
            if (liquidator_ == null) {
              Liquidator = new global::AElf.Types.Address();
            }
            input.ReadMessage(Liquidator);
            break;
          }
          case 34: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 40: {
            SeizeTokens = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetInterestRateModelInput : pb::IMessage<SetInterestRateModelInput> {
    private static readonly pb::MessageParser<SetInterestRateModelInput> _parser = new pb::MessageParser<SetInterestRateModelInput>(() => new SetInterestRateModelInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetInterestRateModelInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetInterestRateModelInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetInterestRateModelInput(SetInterestRateModelInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      model_ = other.model_ != null ? other.model_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetInterestRateModelInput Clone() {
      return new SetInterestRateModelInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private global::AElf.Types.Address model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetInterestRateModelInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetInterestRateModelInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (model_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetInterestRateModelInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.model_ != null) {
        if (model_ == null) {
          Model = new global::AElf.Types.Address();
        }
        Model.MergeFrom(other.Model);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (model_ == null) {
              Model = new global::AElf.Types.Address();
            }
            input.ReadMessage(Model);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetReserveFactorInput : pb::IMessage<SetReserveFactorInput> {
    private static readonly pb::MessageParser<SetReserveFactorInput> _parser = new pb::MessageParser<SetReserveFactorInput>(() => new SetReserveFactorInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetReserveFactorInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetReserveFactorInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetReserveFactorInput(SetReserveFactorInput other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      reserveFactor_ = other.reserveFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetReserveFactorInput Clone() {
      return new SetReserveFactorInput(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "reserve_factor" field.</summary>
    public const int ReserveFactorFieldNumber = 2;
    private long reserveFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReserveFactor {
      get { return reserveFactor_; }
      set {
        reserveFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetReserveFactorInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetReserveFactorInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (ReserveFactor != other.ReserveFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (ReserveFactor != 0L) hash ^= ReserveFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (ReserveFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReserveFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (ReserveFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReserveFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetReserveFactorInput other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.ReserveFactor != 0L) {
        ReserveFactor = other.ReserveFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            ReserveFactor = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///output
  /// </summary>
  public sealed partial class GetAccountSnapshotOutput : pb::IMessage<GetAccountSnapshotOutput> {
    private static readonly pb::MessageParser<GetAccountSnapshotOutput> _parser = new pb::MessageParser<GetAccountSnapshotOutput>(() => new GetAccountSnapshotOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountSnapshotOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountSnapshotOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountSnapshotOutput(GetAccountSnapshotOutput other) : this() {
      aTokenBalance_ = other.aTokenBalance_;
      borrowBalance_ = other.borrowBalance_;
      exchangeRate_ = other.exchangeRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountSnapshotOutput Clone() {
      return new GetAccountSnapshotOutput(this);
    }

    /// <summary>Field number for the "a_token_balance" field.</summary>
    public const int ATokenBalanceFieldNumber = 1;
    private long aTokenBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ATokenBalance {
      get { return aTokenBalance_; }
      set {
        aTokenBalance_ = value;
      }
    }

    /// <summary>Field number for the "borrow_balance" field.</summary>
    public const int BorrowBalanceFieldNumber = 2;
    private long borrowBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowBalance {
      get { return borrowBalance_; }
      set {
        borrowBalance_ = value;
      }
    }

    /// <summary>Field number for the "exchange_rate" field.</summary>
    public const int ExchangeRateFieldNumber = 3;
    private long exchangeRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExchangeRate {
      get { return exchangeRate_; }
      set {
        exchangeRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountSnapshotOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountSnapshotOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ATokenBalance != other.ATokenBalance) return false;
      if (BorrowBalance != other.BorrowBalance) return false;
      if (ExchangeRate != other.ExchangeRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ATokenBalance != 0L) hash ^= ATokenBalance.GetHashCode();
      if (BorrowBalance != 0L) hash ^= BorrowBalance.GetHashCode();
      if (ExchangeRate != 0L) hash ^= ExchangeRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ATokenBalance != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ATokenBalance);
      }
      if (BorrowBalance != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BorrowBalance);
      }
      if (ExchangeRate != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExchangeRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ATokenBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ATokenBalance);
      }
      if (BorrowBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowBalance);
      }
      if (ExchangeRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExchangeRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountSnapshotOutput other) {
      if (other == null) {
        return;
      }
      if (other.ATokenBalance != 0L) {
        ATokenBalance = other.ATokenBalance;
      }
      if (other.BorrowBalance != 0L) {
        BorrowBalance = other.BorrowBalance;
      }
      if (other.ExchangeRate != 0L) {
        ExchangeRate = other.ExchangeRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ATokenBalance = input.ReadInt64();
            break;
          }
          case 16: {
            BorrowBalance = input.ReadInt64();
            break;
          }
          case 24: {
            ExchangeRate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Events
  /// </summary>
  public sealed partial class AccrueInterest : pb::IMessage<AccrueInterest> {
    private static readonly pb::MessageParser<AccrueInterest> _parser = new pb::MessageParser<AccrueInterest>(() => new AccrueInterest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccrueInterest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccrueInterest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccrueInterest(AccrueInterest other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      cash_ = other.cash_;
      interestAccumulated_ = other.interestAccumulated_;
      borrowIndex_ = other.borrowIndex_;
      totalBorrows_ = other.totalBorrows_;
      borrowRatePerBlock_ = other.borrowRatePerBlock_;
      supplyRatePerBlock_ = other.supplyRatePerBlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccrueInterest Clone() {
      return new AccrueInterest(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "cash" field.</summary>
    public const int CashFieldNumber = 2;
    private long cash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Cash {
      get { return cash_; }
      set {
        cash_ = value;
      }
    }

    /// <summary>Field number for the "interestAccumulated" field.</summary>
    public const int InterestAccumulatedFieldNumber = 3;
    private long interestAccumulated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InterestAccumulated {
      get { return interestAccumulated_; }
      set {
        interestAccumulated_ = value;
      }
    }

    /// <summary>Field number for the "borrowIndex" field.</summary>
    public const int BorrowIndexFieldNumber = 4;
    private long borrowIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowIndex {
      get { return borrowIndex_; }
      set {
        borrowIndex_ = value;
      }
    }

    /// <summary>Field number for the "total_borrows" field.</summary>
    public const int TotalBorrowsFieldNumber = 5;
    private long totalBorrows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBorrows {
      get { return totalBorrows_; }
      set {
        totalBorrows_ = value;
      }
    }

    /// <summary>Field number for the "borrow_rate_per_block" field.</summary>
    public const int BorrowRatePerBlockFieldNumber = 6;
    private long borrowRatePerBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowRatePerBlock {
      get { return borrowRatePerBlock_; }
      set {
        borrowRatePerBlock_ = value;
      }
    }

    /// <summary>Field number for the "supply_rate_per_block" field.</summary>
    public const int SupplyRatePerBlockFieldNumber = 7;
    private long supplyRatePerBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SupplyRatePerBlock {
      get { return supplyRatePerBlock_; }
      set {
        supplyRatePerBlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccrueInterest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccrueInterest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Cash != other.Cash) return false;
      if (InterestAccumulated != other.InterestAccumulated) return false;
      if (BorrowIndex != other.BorrowIndex) return false;
      if (TotalBorrows != other.TotalBorrows) return false;
      if (BorrowRatePerBlock != other.BorrowRatePerBlock) return false;
      if (SupplyRatePerBlock != other.SupplyRatePerBlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Cash != 0L) hash ^= Cash.GetHashCode();
      if (InterestAccumulated != 0L) hash ^= InterestAccumulated.GetHashCode();
      if (BorrowIndex != 0L) hash ^= BorrowIndex.GetHashCode();
      if (TotalBorrows != 0L) hash ^= TotalBorrows.GetHashCode();
      if (BorrowRatePerBlock != 0L) hash ^= BorrowRatePerBlock.GetHashCode();
      if (SupplyRatePerBlock != 0L) hash ^= SupplyRatePerBlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (Cash != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Cash);
      }
      if (InterestAccumulated != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(InterestAccumulated);
      }
      if (BorrowIndex != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BorrowIndex);
      }
      if (TotalBorrows != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalBorrows);
      }
      if (BorrowRatePerBlock != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BorrowRatePerBlock);
      }
      if (SupplyRatePerBlock != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(SupplyRatePerBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Cash != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Cash);
      }
      if (InterestAccumulated != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InterestAccumulated);
      }
      if (BorrowIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowIndex);
      }
      if (TotalBorrows != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBorrows);
      }
      if (BorrowRatePerBlock != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowRatePerBlock);
      }
      if (SupplyRatePerBlock != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SupplyRatePerBlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccrueInterest other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Cash != 0L) {
        Cash = other.Cash;
      }
      if (other.InterestAccumulated != 0L) {
        InterestAccumulated = other.InterestAccumulated;
      }
      if (other.BorrowIndex != 0L) {
        BorrowIndex = other.BorrowIndex;
      }
      if (other.TotalBorrows != 0L) {
        TotalBorrows = other.TotalBorrows;
      }
      if (other.BorrowRatePerBlock != 0L) {
        BorrowRatePerBlock = other.BorrowRatePerBlock;
      }
      if (other.SupplyRatePerBlock != 0L) {
        SupplyRatePerBlock = other.SupplyRatePerBlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 16: {
            Cash = input.ReadInt64();
            break;
          }
          case 24: {
            InterestAccumulated = input.ReadInt64();
            break;
          }
          case 32: {
            BorrowIndex = input.ReadInt64();
            break;
          }
          case 40: {
            TotalBorrows = input.ReadInt64();
            break;
          }
          case 48: {
            BorrowRatePerBlock = input.ReadInt64();
            break;
          }
          case 56: {
            SupplyRatePerBlock = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Mint : pb::IMessage<Mint> {
    private static readonly pb::MessageParser<Mint> _parser = new pb::MessageParser<Mint>(() => new Mint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mint(Mint other) : this() {
      underlying_ = other.underlying_;
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      underlyingAmount_ = other.underlyingAmount_;
      aTokenAmount_ = other.aTokenAmount_;
      sender_ = other.sender_ != null ? other.sender_.Clone() : null;
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mint Clone() {
      return new Mint(this);
    }

    /// <summary>Field number for the "underlying" field.</summary>
    public const int UnderlyingFieldNumber = 1;
    private string underlying_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Underlying {
      get { return underlying_; }
      set {
        underlying_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 2;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "underlying_amount" field.</summary>
    public const int UnderlyingAmountFieldNumber = 3;
    private long underlyingAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnderlyingAmount {
      get { return underlyingAmount_; }
      set {
        underlyingAmount_ = value;
      }
    }

    /// <summary>Field number for the "a_token_amount" field.</summary>
    public const int ATokenAmountFieldNumber = 4;
    private long aTokenAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ATokenAmount {
      get { return aTokenAmount_; }
      set {
        aTokenAmount_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 5;
    private global::AElf.Types.Address sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 6;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Underlying != other.Underlying) return false;
      if (!object.Equals(AToken, other.AToken)) return false;
      if (UnderlyingAmount != other.UnderlyingAmount) return false;
      if (ATokenAmount != other.ATokenAmount) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Underlying.Length != 0) hash ^= Underlying.GetHashCode();
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (UnderlyingAmount != 0L) hash ^= UnderlyingAmount.GetHashCode();
      if (ATokenAmount != 0L) hash ^= ATokenAmount.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Underlying.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Underlying);
      }
      if (aToken_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AToken);
      }
      if (UnderlyingAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UnderlyingAmount);
      }
      if (ATokenAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ATokenAmount);
      }
      if (sender_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Sender);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Underlying.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlying);
      }
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (UnderlyingAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnderlyingAmount);
      }
      if (ATokenAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ATokenAmount);
      }
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mint other) {
      if (other == null) {
        return;
      }
      if (other.Underlying.Length != 0) {
        Underlying = other.Underlying;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.UnderlyingAmount != 0L) {
        UnderlyingAmount = other.UnderlyingAmount;
      }
      if (other.ATokenAmount != 0L) {
        ATokenAmount = other.ATokenAmount;
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          Sender = new global::AElf.Types.Address();
        }
        Sender.MergeFrom(other.Sender);
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Underlying = input.ReadString();
            break;
          }
          case 18: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 24: {
            UnderlyingAmount = input.ReadInt64();
            break;
          }
          case 32: {
            ATokenAmount = input.ReadInt64();
            break;
          }
          case 42: {
            if (sender_ == null) {
              Sender = new global::AElf.Types.Address();
            }
            input.ReadMessage(Sender);
            break;
          }
          case 50: {
            Channel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Redeem : pb::IMessage<Redeem> {
    private static readonly pb::MessageParser<Redeem> _parser = new pb::MessageParser<Redeem>(() => new Redeem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Redeem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeem(Redeem other) : this() {
      underlying_ = other.underlying_;
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      underlyingAmount_ = other.underlyingAmount_;
      aTokenAmount_ = other.aTokenAmount_;
      sender_ = other.sender_ != null ? other.sender_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeem Clone() {
      return new Redeem(this);
    }

    /// <summary>Field number for the "underlying" field.</summary>
    public const int UnderlyingFieldNumber = 1;
    private string underlying_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Underlying {
      get { return underlying_; }
      set {
        underlying_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 2;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "underlying_amount" field.</summary>
    public const int UnderlyingAmountFieldNumber = 3;
    private long underlyingAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnderlyingAmount {
      get { return underlyingAmount_; }
      set {
        underlyingAmount_ = value;
      }
    }

    /// <summary>Field number for the "a_token_amount" field.</summary>
    public const int ATokenAmountFieldNumber = 4;
    private long aTokenAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ATokenAmount {
      get { return aTokenAmount_; }
      set {
        aTokenAmount_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 5;
    private global::AElf.Types.Address sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Redeem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Redeem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Underlying != other.Underlying) return false;
      if (!object.Equals(AToken, other.AToken)) return false;
      if (UnderlyingAmount != other.UnderlyingAmount) return false;
      if (ATokenAmount != other.ATokenAmount) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Underlying.Length != 0) hash ^= Underlying.GetHashCode();
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (UnderlyingAmount != 0L) hash ^= UnderlyingAmount.GetHashCode();
      if (ATokenAmount != 0L) hash ^= ATokenAmount.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Underlying.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Underlying);
      }
      if (aToken_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AToken);
      }
      if (UnderlyingAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UnderlyingAmount);
      }
      if (ATokenAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ATokenAmount);
      }
      if (sender_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Sender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Underlying.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlying);
      }
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (UnderlyingAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnderlyingAmount);
      }
      if (ATokenAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ATokenAmount);
      }
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Redeem other) {
      if (other == null) {
        return;
      }
      if (other.Underlying.Length != 0) {
        Underlying = other.Underlying;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.UnderlyingAmount != 0L) {
        UnderlyingAmount = other.UnderlyingAmount;
      }
      if (other.ATokenAmount != 0L) {
        ATokenAmount = other.ATokenAmount;
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          Sender = new global::AElf.Types.Address();
        }
        Sender.MergeFrom(other.Sender);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Underlying = input.ReadString();
            break;
          }
          case 18: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 24: {
            UnderlyingAmount = input.ReadInt64();
            break;
          }
          case 32: {
            ATokenAmount = input.ReadInt64();
            break;
          }
          case 42: {
            if (sender_ == null) {
              Sender = new global::AElf.Types.Address();
            }
            input.ReadMessage(Sender);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Borrow : pb::IMessage<Borrow> {
    private static readonly pb::MessageParser<Borrow> _parser = new pb::MessageParser<Borrow>(() => new Borrow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Borrow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Borrow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Borrow(Borrow other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      amount_ = other.amount_;
      borrowBalance_ = other.borrowBalance_;
      totalBorrows_ = other.totalBorrows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Borrow Clone() {
      return new Borrow(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 2;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "borrow_balance" field.</summary>
    public const int BorrowBalanceFieldNumber = 4;
    private long borrowBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowBalance {
      get { return borrowBalance_; }
      set {
        borrowBalance_ = value;
      }
    }

    /// <summary>Field number for the "total_borrows" field.</summary>
    public const int TotalBorrowsFieldNumber = 5;
    private long totalBorrows_;
    /// <summary>
    ///  string borrow_rate = 6;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBorrows {
      get { return totalBorrows_; }
      set {
        totalBorrows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Borrow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Borrow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (Amount != other.Amount) return false;
      if (BorrowBalance != other.BorrowBalance) return false;
      if (TotalBorrows != other.TotalBorrows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (BorrowBalance != 0L) hash ^= BorrowBalance.GetHashCode();
      if (TotalBorrows != 0L) hash ^= TotalBorrows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (borrower_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Borrower);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (BorrowBalance != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BorrowBalance);
      }
      if (TotalBorrows != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalBorrows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (BorrowBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowBalance);
      }
      if (TotalBorrows != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBorrows);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Borrow other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.BorrowBalance != 0L) {
        BorrowBalance = other.BorrowBalance;
      }
      if (other.TotalBorrows != 0L) {
        TotalBorrows = other.TotalBorrows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 32: {
            BorrowBalance = input.ReadInt64();
            break;
          }
          case 40: {
            TotalBorrows = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepayBorrow : pb::IMessage<RepayBorrow> {
    private static readonly pb::MessageParser<RepayBorrow> _parser = new pb::MessageParser<RepayBorrow>(() => new RepayBorrow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepayBorrow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrow(RepayBorrow other) : this() {
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      payer_ = other.payer_ != null ? other.payer_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      amount_ = other.amount_;
      borrowBalance_ = other.borrowBalance_;
      totalBorrows_ = other.totalBorrows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepayBorrow Clone() {
      return new RepayBorrow(this);
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 1;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "payer" field.</summary>
    public const int PayerFieldNumber = 2;
    private global::AElf.Types.Address payer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Payer {
      get { return payer_; }
      set {
        payer_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 3;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "borrow_balance" field.</summary>
    public const int BorrowBalanceFieldNumber = 5;
    private long borrowBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BorrowBalance {
      get { return borrowBalance_; }
      set {
        borrowBalance_ = value;
      }
    }

    /// <summary>Field number for the "total_borrows" field.</summary>
    public const int TotalBorrowsFieldNumber = 6;
    private long totalBorrows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBorrows {
      get { return totalBorrows_; }
      set {
        totalBorrows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepayBorrow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepayBorrow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AToken, other.AToken)) return false;
      if (!object.Equals(Payer, other.Payer)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (Amount != other.Amount) return false;
      if (BorrowBalance != other.BorrowBalance) return false;
      if (TotalBorrows != other.TotalBorrows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (payer_ != null) hash ^= Payer.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (BorrowBalance != 0L) hash ^= BorrowBalance.GetHashCode();
      if (TotalBorrows != 0L) hash ^= TotalBorrows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (aToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AToken);
      }
      if (payer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payer);
      }
      if (borrower_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Borrower);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (BorrowBalance != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(BorrowBalance);
      }
      if (TotalBorrows != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalBorrows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (payer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payer);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (BorrowBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BorrowBalance);
      }
      if (TotalBorrows != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBorrows);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepayBorrow other) {
      if (other == null) {
        return;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.payer_ != null) {
        if (payer_ == null) {
          Payer = new global::AElf.Types.Address();
        }
        Payer.MergeFrom(other.Payer);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.BorrowBalance != 0L) {
        BorrowBalance = other.BorrowBalance;
      }
      if (other.TotalBorrows != 0L) {
        TotalBorrows = other.TotalBorrows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 18: {
            if (payer_ == null) {
              Payer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Payer);
            break;
          }
          case 26: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
          case 40: {
            BorrowBalance = input.ReadInt64();
            break;
          }
          case 48: {
            TotalBorrows = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LiquidateBorrow : pb::IMessage<LiquidateBorrow> {
    private static readonly pb::MessageParser<LiquidateBorrow> _parser = new pb::MessageParser<LiquidateBorrow>(() => new LiquidateBorrow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiquidateBorrow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrow(LiquidateBorrow other) : this() {
      repayAToken_ = other.repayAToken_ != null ? other.repayAToken_.Clone() : null;
      liquidator_ = other.liquidator_ != null ? other.liquidator_.Clone() : null;
      borrower_ = other.borrower_ != null ? other.borrower_.Clone() : null;
      repayAmount_ = other.repayAmount_;
      seizeAToken_ = other.seizeAToken_ != null ? other.seizeAToken_.Clone() : null;
      seizeTokenAmount_ = other.seizeTokenAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiquidateBorrow Clone() {
      return new LiquidateBorrow(this);
    }

    /// <summary>Field number for the "repay_a_token" field.</summary>
    public const int RepayATokenFieldNumber = 1;
    private global::AElf.Types.Address repayAToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address RepayAToken {
      get { return repayAToken_; }
      set {
        repayAToken_ = value;
      }
    }

    /// <summary>Field number for the "liquidator" field.</summary>
    public const int LiquidatorFieldNumber = 2;
    private global::AElf.Types.Address liquidator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Liquidator {
      get { return liquidator_; }
      set {
        liquidator_ = value;
      }
    }

    /// <summary>Field number for the "borrower" field.</summary>
    public const int BorrowerFieldNumber = 3;
    private global::AElf.Types.Address borrower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Borrower {
      get { return borrower_; }
      set {
        borrower_ = value;
      }
    }

    /// <summary>Field number for the "repay_amount" field.</summary>
    public const int RepayAmountFieldNumber = 4;
    private long repayAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RepayAmount {
      get { return repayAmount_; }
      set {
        repayAmount_ = value;
      }
    }

    /// <summary>Field number for the "seize_a_token" field.</summary>
    public const int SeizeATokenFieldNumber = 5;
    private global::AElf.Types.Address seizeAToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address SeizeAToken {
      get { return seizeAToken_; }
      set {
        seizeAToken_ = value;
      }
    }

    /// <summary>Field number for the "seize_token_amount" field.</summary>
    public const int SeizeTokenAmountFieldNumber = 6;
    private long seizeTokenAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SeizeTokenAmount {
      get { return seizeTokenAmount_; }
      set {
        seizeTokenAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiquidateBorrow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiquidateBorrow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RepayAToken, other.RepayAToken)) return false;
      if (!object.Equals(Liquidator, other.Liquidator)) return false;
      if (!object.Equals(Borrower, other.Borrower)) return false;
      if (RepayAmount != other.RepayAmount) return false;
      if (!object.Equals(SeizeAToken, other.SeizeAToken)) return false;
      if (SeizeTokenAmount != other.SeizeTokenAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (repayAToken_ != null) hash ^= RepayAToken.GetHashCode();
      if (liquidator_ != null) hash ^= Liquidator.GetHashCode();
      if (borrower_ != null) hash ^= Borrower.GetHashCode();
      if (RepayAmount != 0L) hash ^= RepayAmount.GetHashCode();
      if (seizeAToken_ != null) hash ^= SeizeAToken.GetHashCode();
      if (SeizeTokenAmount != 0L) hash ^= SeizeTokenAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (repayAToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RepayAToken);
      }
      if (liquidator_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Liquidator);
      }
      if (borrower_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Borrower);
      }
      if (RepayAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RepayAmount);
      }
      if (seizeAToken_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SeizeAToken);
      }
      if (SeizeTokenAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(SeizeTokenAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (repayAToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RepayAToken);
      }
      if (liquidator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Liquidator);
      }
      if (borrower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Borrower);
      }
      if (RepayAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RepayAmount);
      }
      if (seizeAToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SeizeAToken);
      }
      if (SeizeTokenAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeizeTokenAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiquidateBorrow other) {
      if (other == null) {
        return;
      }
      if (other.repayAToken_ != null) {
        if (repayAToken_ == null) {
          RepayAToken = new global::AElf.Types.Address();
        }
        RepayAToken.MergeFrom(other.RepayAToken);
      }
      if (other.liquidator_ != null) {
        if (liquidator_ == null) {
          Liquidator = new global::AElf.Types.Address();
        }
        Liquidator.MergeFrom(other.Liquidator);
      }
      if (other.borrower_ != null) {
        if (borrower_ == null) {
          Borrower = new global::AElf.Types.Address();
        }
        Borrower.MergeFrom(other.Borrower);
      }
      if (other.RepayAmount != 0L) {
        RepayAmount = other.RepayAmount;
      }
      if (other.seizeAToken_ != null) {
        if (seizeAToken_ == null) {
          SeizeAToken = new global::AElf.Types.Address();
        }
        SeizeAToken.MergeFrom(other.SeizeAToken);
      }
      if (other.SeizeTokenAmount != 0L) {
        SeizeTokenAmount = other.SeizeTokenAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (repayAToken_ == null) {
              RepayAToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(RepayAToken);
            break;
          }
          case 18: {
            if (liquidator_ == null) {
              Liquidator = new global::AElf.Types.Address();
            }
            input.ReadMessage(Liquidator);
            break;
          }
          case 26: {
            if (borrower_ == null) {
              Borrower = new global::AElf.Types.Address();
            }
            input.ReadMessage(Borrower);
            break;
          }
          case 32: {
            RepayAmount = input.ReadInt64();
            break;
          }
          case 42: {
            if (seizeAToken_ == null) {
              SeizeAToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(SeizeAToken);
            break;
          }
          case 48: {
            SeizeTokenAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdminChanged : pb::IMessage<AdminChanged> {
    private static readonly pb::MessageParser<AdminChanged> _parser = new pb::MessageParser<AdminChanged>(() => new AdminChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdminChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminChanged(AdminChanged other) : this() {
      oldAdmin_ = other.oldAdmin_ != null ? other.oldAdmin_.Clone() : null;
      newAdmin_ = other.newAdmin_ != null ? other.newAdmin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminChanged Clone() {
      return new AdminChanged(this);
    }

    /// <summary>Field number for the "old_admin" field.</summary>
    public const int OldAdminFieldNumber = 1;
    private global::AElf.Types.Address oldAdmin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address OldAdmin {
      get { return oldAdmin_; }
      set {
        oldAdmin_ = value;
      }
    }

    /// <summary>Field number for the "new_admin" field.</summary>
    public const int NewAdminFieldNumber = 2;
    private global::AElf.Types.Address newAdmin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address NewAdmin {
      get { return newAdmin_; }
      set {
        newAdmin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdminChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdminChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OldAdmin, other.OldAdmin)) return false;
      if (!object.Equals(NewAdmin, other.NewAdmin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oldAdmin_ != null) hash ^= OldAdmin.GetHashCode();
      if (newAdmin_ != null) hash ^= NewAdmin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (oldAdmin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OldAdmin);
      }
      if (newAdmin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewAdmin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oldAdmin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OldAdmin);
      }
      if (newAdmin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewAdmin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdminChanged other) {
      if (other == null) {
        return;
      }
      if (other.oldAdmin_ != null) {
        if (oldAdmin_ == null) {
          OldAdmin = new global::AElf.Types.Address();
        }
        OldAdmin.MergeFrom(other.OldAdmin);
      }
      if (other.newAdmin_ != null) {
        if (newAdmin_ == null) {
          NewAdmin = new global::AElf.Types.Address();
        }
        NewAdmin.MergeFrom(other.NewAdmin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (oldAdmin_ == null) {
              OldAdmin = new global::AElf.Types.Address();
            }
            input.ReadMessage(OldAdmin);
            break;
          }
          case 18: {
            if (newAdmin_ == null) {
              NewAdmin = new global::AElf.Types.Address();
            }
            input.ReadMessage(NewAdmin);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReserveFactorChanged : pb::IMessage<ReserveFactorChanged> {
    private static readonly pb::MessageParser<ReserveFactorChanged> _parser = new pb::MessageParser<ReserveFactorChanged>(() => new ReserveFactorChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReserveFactorChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReserveFactorChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReserveFactorChanged(ReserveFactorChanged other) : this() {
      oldReserveFactor_ = other.oldReserveFactor_;
      newReserveFactor_ = other.newReserveFactor_;
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReserveFactorChanged Clone() {
      return new ReserveFactorChanged(this);
    }

    /// <summary>Field number for the "old_reserve_factor" field.</summary>
    public const int OldReserveFactorFieldNumber = 1;
    private long oldReserveFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OldReserveFactor {
      get { return oldReserveFactor_; }
      set {
        oldReserveFactor_ = value;
      }
    }

    /// <summary>Field number for the "new_reserve_factor" field.</summary>
    public const int NewReserveFactorFieldNumber = 2;
    private long newReserveFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewReserveFactor {
      get { return newReserveFactor_; }
      set {
        newReserveFactor_ = value;
      }
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 3;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReserveFactorChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReserveFactorChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldReserveFactor != other.OldReserveFactor) return false;
      if (NewReserveFactor != other.NewReserveFactor) return false;
      if (!object.Equals(AToken, other.AToken)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldReserveFactor != 0L) hash ^= OldReserveFactor.GetHashCode();
      if (NewReserveFactor != 0L) hash ^= NewReserveFactor.GetHashCode();
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldReserveFactor != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OldReserveFactor);
      }
      if (NewReserveFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewReserveFactor);
      }
      if (aToken_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldReserveFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OldReserveFactor);
      }
      if (NewReserveFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewReserveFactor);
      }
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReserveFactorChanged other) {
      if (other == null) {
        return;
      }
      if (other.OldReserveFactor != 0L) {
        OldReserveFactor = other.OldReserveFactor;
      }
      if (other.NewReserveFactor != 0L) {
        NewReserveFactor = other.NewReserveFactor;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OldReserveFactor = input.ReadInt64();
            break;
          }
          case 16: {
            NewReserveFactor = input.ReadInt64();
            break;
          }
          case 26: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservesAdded : pb::IMessage<ReservesAdded> {
    private static readonly pb::MessageParser<ReservesAdded> _parser = new pb::MessageParser<ReservesAdded>(() => new ReservesAdded());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservesAdded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservesAdded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservesAdded(ReservesAdded other) : this() {
      underlying_ = other.underlying_;
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      addAmount_ = other.addAmount_;
      totalReserves_ = other.totalReserves_;
      sender_ = other.sender_ != null ? other.sender_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservesAdded Clone() {
      return new ReservesAdded(this);
    }

    /// <summary>Field number for the "underlying" field.</summary>
    public const int UnderlyingFieldNumber = 1;
    private string underlying_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Underlying {
      get { return underlying_; }
      set {
        underlying_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 2;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "add_amount" field.</summary>
    public const int AddAmountFieldNumber = 3;
    private long addAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AddAmount {
      get { return addAmount_; }
      set {
        addAmount_ = value;
      }
    }

    /// <summary>Field number for the "total_reserves" field.</summary>
    public const int TotalReservesFieldNumber = 4;
    private long totalReserves_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalReserves {
      get { return totalReserves_; }
      set {
        totalReserves_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 5;
    private global::AElf.Types.Address sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservesAdded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservesAdded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Underlying != other.Underlying) return false;
      if (!object.Equals(AToken, other.AToken)) return false;
      if (AddAmount != other.AddAmount) return false;
      if (TotalReserves != other.TotalReserves) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Underlying.Length != 0) hash ^= Underlying.GetHashCode();
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (AddAmount != 0L) hash ^= AddAmount.GetHashCode();
      if (TotalReserves != 0L) hash ^= TotalReserves.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Underlying.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Underlying);
      }
      if (aToken_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AToken);
      }
      if (AddAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AddAmount);
      }
      if (TotalReserves != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalReserves);
      }
      if (sender_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Sender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Underlying.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlying);
      }
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (AddAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AddAmount);
      }
      if (TotalReserves != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalReserves);
      }
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservesAdded other) {
      if (other == null) {
        return;
      }
      if (other.Underlying.Length != 0) {
        Underlying = other.Underlying;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.AddAmount != 0L) {
        AddAmount = other.AddAmount;
      }
      if (other.TotalReserves != 0L) {
        TotalReserves = other.TotalReserves;
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          Sender = new global::AElf.Types.Address();
        }
        Sender.MergeFrom(other.Sender);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Underlying = input.ReadString();
            break;
          }
          case 18: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 24: {
            AddAmount = input.ReadInt64();
            break;
          }
          case 32: {
            TotalReserves = input.ReadInt64();
            break;
          }
          case 42: {
            if (sender_ == null) {
              Sender = new global::AElf.Types.Address();
            }
            input.ReadMessage(Sender);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservesReduced : pb::IMessage<ReservesReduced> {
    private static readonly pb::MessageParser<ReservesReduced> _parser = new pb::MessageParser<ReservesReduced>(() => new ReservesReduced());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservesReduced> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservesReduced() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservesReduced(ReservesReduced other) : this() {
      underlying_ = other.underlying_;
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      reduceAmount_ = other.reduceAmount_;
      totalReserves_ = other.totalReserves_;
      sender_ = other.sender_ != null ? other.sender_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservesReduced Clone() {
      return new ReservesReduced(this);
    }

    /// <summary>Field number for the "underlying" field.</summary>
    public const int UnderlyingFieldNumber = 1;
    private string underlying_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Underlying {
      get { return underlying_; }
      set {
        underlying_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 2;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "reduce_amount" field.</summary>
    public const int ReduceAmountFieldNumber = 3;
    private long reduceAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReduceAmount {
      get { return reduceAmount_; }
      set {
        reduceAmount_ = value;
      }
    }

    /// <summary>Field number for the "total_reserves" field.</summary>
    public const int TotalReservesFieldNumber = 4;
    private long totalReserves_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalReserves {
      get { return totalReserves_; }
      set {
        totalReserves_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 5;
    private global::AElf.Types.Address sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservesReduced);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservesReduced other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Underlying != other.Underlying) return false;
      if (!object.Equals(AToken, other.AToken)) return false;
      if (ReduceAmount != other.ReduceAmount) return false;
      if (TotalReserves != other.TotalReserves) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Underlying.Length != 0) hash ^= Underlying.GetHashCode();
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (ReduceAmount != 0L) hash ^= ReduceAmount.GetHashCode();
      if (TotalReserves != 0L) hash ^= TotalReserves.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Underlying.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Underlying);
      }
      if (aToken_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AToken);
      }
      if (ReduceAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ReduceAmount);
      }
      if (TotalReserves != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalReserves);
      }
      if (sender_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Sender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Underlying.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlying);
      }
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (ReduceAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReduceAmount);
      }
      if (TotalReserves != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalReserves);
      }
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservesReduced other) {
      if (other == null) {
        return;
      }
      if (other.Underlying.Length != 0) {
        Underlying = other.Underlying;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.ReduceAmount != 0L) {
        ReduceAmount = other.ReduceAmount;
      }
      if (other.TotalReserves != 0L) {
        TotalReserves = other.TotalReserves;
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          Sender = new global::AElf.Types.Address();
        }
        Sender.MergeFrom(other.Sender);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Underlying = input.ReadString();
            break;
          }
          case 18: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 24: {
            ReduceAmount = input.ReadInt64();
            break;
          }
          case 32: {
            TotalReserves = input.ReadInt64();
            break;
          }
          case 42: {
            if (sender_ == null) {
              Sender = new global::AElf.Types.Address();
            }
            input.ReadMessage(Sender);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CallbackInfo : pb::IMessage<CallbackInfo> {
    private static readonly pb::MessageParser<CallbackInfo> _parser = new pb::MessageParser<CallbackInfo>(() => new CallbackInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallbackInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallbackInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallbackInfo(CallbackInfo other) : this() {
      contractAddress_ = other.contractAddress_ != null ? other.contractAddress_.Clone() : null;
      methodName_ = other.methodName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallbackInfo Clone() {
      return new CallbackInfo(this);
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 1;
    private global::AElf.Types.Address contractAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = value;
      }
    }

    /// <summary>Field number for the "method_name" field.</summary>
    public const int MethodNameFieldNumber = 2;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallbackInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallbackInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ContractAddress, other.ContractAddress)) return false;
      if (MethodName != other.MethodName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contractAddress_ != null) hash ^= ContractAddress.GetHashCode();
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contractAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ContractAddress);
      }
      if (MethodName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MethodName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contractAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContractAddress);
      }
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallbackInfo other) {
      if (other == null) {
        return;
      }
      if (other.contractAddress_ != null) {
        if (contractAddress_ == null) {
          ContractAddress = new global::AElf.Types.Address();
        }
        ContractAddress.MergeFrom(other.ContractAddress);
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (contractAddress_ == null) {
              ContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ContractAddress);
            break;
          }
          case 18: {
            MethodName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Balance : pb::IMessage<Balance> {
    private static readonly pb::MessageParser<Balance> _parser = new pb::MessageParser<Balance>(() => new Balance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Balance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balance(Balance other) : this() {
      symbol_ = other.symbol_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balance Clone() {
      return new Balance(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Balance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Balance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (owner_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Owner);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Balance other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Balances : pb::IMessage<Balances> {
    private static readonly pb::MessageParser<Balances> _parser = new pb::MessageParser<Balances>(() => new Balances());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Balances> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balances() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balances(Balances other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balances Clone() {
      return new Balances(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Awaken.Contracts.AToken.Balance> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::Awaken.Contracts.AToken.Balance.Parser);
    private readonly pbc::RepeatedField<global::Awaken.Contracts.AToken.Balance> value_ = new pbc::RepeatedField<global::Awaken.Contracts.AToken.Balance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Awaken.Contracts.AToken.Balance> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Balances);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Balances other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Balances other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferInput : pb::IMessage<TransferInput> {
    private static readonly pb::MessageParser<TransferInput> _parser = new pb::MessageParser<TransferInput>(() => new TransferInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferInput(TransferInput other) : this() {
      to_ = other.to_ != null ? other.to_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      memo_ = other.memo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferInput Clone() {
      return new TransferInput(this);
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 1;
    private global::AElf.Types.Address to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 4;
    private string memo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Memo {
      get { return memo_; }
      set {
        memo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(To, other.To)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      if (Memo != other.Memo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (to_ != null) hash ^= To.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Memo.Length != 0) hash ^= Memo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (to_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(To);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (Memo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Memo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Memo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Memo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferInput other) {
      if (other == null) {
        return;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::AElf.Types.Address();
        }
        To.MergeFrom(other.To);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Memo.Length != 0) {
        Memo = other.Memo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (to_ == null) {
              To = new global::AElf.Types.Address();
            }
            input.ReadMessage(To);
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            Memo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferFromInput : pb::IMessage<TransferFromInput> {
    private static readonly pb::MessageParser<TransferFromInput> _parser = new pb::MessageParser<TransferFromInput>(() => new TransferFromInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferFromInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferFromInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferFromInput(TransferFromInput other) : this() {
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      memo_ = other.memo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferFromInput Clone() {
      return new TransferFromInput(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private global::AElf.Types.Address from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::AElf.Types.Address to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 5;
    private string memo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Memo {
      get { return memo_; }
      set {
        memo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferFromInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferFromInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      if (Memo != other.Memo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Memo.Length != 0) hash ^= Memo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (Memo.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Memo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Memo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Memo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferFromInput other) {
      if (other == null) {
        return;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::AElf.Types.Address();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::AElf.Types.Address();
        }
        To.MergeFrom(other.To);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Memo.Length != 0) {
        Memo = other.Memo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (from_ == null) {
              From = new global::AElf.Types.Address();
            }
            input.ReadMessage(From);
            break;
          }
          case 18: {
            if (to_ == null) {
              To = new global::AElf.Types.Address();
            }
            input.ReadMessage(To);
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
          case 42: {
            Memo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApproveInput : pb::IMessage<ApproveInput> {
    private static readonly pb::MessageParser<ApproveInput> _parser = new pb::MessageParser<ApproveInput>(() => new ApproveInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApproveInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveInput(ApproveInput other) : this() {
      spender_ = other.spender_ != null ? other.spender_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveInput Clone() {
      return new ApproveInput(this);
    }

    /// <summary>Field number for the "spender" field.</summary>
    public const int SpenderFieldNumber = 1;
    private global::AElf.Types.Address spender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Spender {
      get { return spender_; }
      set {
        spender_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApproveInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApproveInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spender, other.Spender)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spender_ != null) hash ^= Spender.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (spender_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spender);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spender);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApproveInput other) {
      if (other == null) {
        return;
      }
      if (other.spender_ != null) {
        if (spender_ == null) {
          Spender = new global::AElf.Types.Address();
        }
        Spender.MergeFrom(other.Spender);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spender_ == null) {
              Spender = new global::AElf.Types.Address();
            }
            input.ReadMessage(Spender);
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBalancesInput : pb::IMessage<GetBalancesInput> {
    private static readonly pb::MessageParser<GetBalancesInput> _parser = new pb::MessageParser<GetBalancesInput>(() => new GetBalancesInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalancesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesInput(GetBalancesInput other) : this() {
      symbols_ = other.symbols_.Clone();
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesInput Clone() {
      return new GetBalancesInput(this);
    }

    /// <summary>Field number for the "symbols" field.</summary>
    public const int SymbolsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_symbols_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> symbols_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Symbols {
      get { return symbols_; }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalancesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalancesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!symbols_.Equals(other.symbols_)) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= symbols_.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      symbols_.WriteTo(output, _repeated_symbols_codec);
      if (owner_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += symbols_.CalculateSize(_repeated_symbols_codec);
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalancesInput other) {
      if (other == null) {
        return;
      }
      symbols_.Add(other.symbols_);
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            symbols_.AddEntriesFrom(input, _repeated_symbols_codec);
            break;
          }
          case 18: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllowanceInput : pb::IMessage<GetAllowanceInput> {
    private static readonly pb::MessageParser<GetAllowanceInput> _parser = new pb::MessageParser<GetAllowanceInput>(() => new GetAllowanceInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllowanceInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllowanceInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllowanceInput(GetAllowanceInput other) : this() {
      symbol_ = other.symbol_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      spender_ = other.spender_ != null ? other.spender_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllowanceInput Clone() {
      return new GetAllowanceInput(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "spender" field.</summary>
    public const int SpenderFieldNumber = 3;
    private global::AElf.Types.Address spender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Spender {
      get { return spender_; }
      set {
        spender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllowanceInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllowanceInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (!object.Equals(Spender, other.Spender)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (spender_ != null) hash ^= Spender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (owner_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Owner);
      }
      if (spender_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Spender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (spender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllowanceInput other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.spender_ != null) {
        if (spender_ == null) {
          Spender = new global::AElf.Types.Address();
        }
        Spender.MergeFrom(other.Spender);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 26: {
            if (spender_ == null) {
              Spender = new global::AElf.Types.Address();
            }
            input.ReadMessage(Spender);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Transferred : pb::IMessage<Transferred> {
    private static readonly pb::MessageParser<Transferred> _parser = new pb::MessageParser<Transferred>(() => new Transferred());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transferred> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transferred() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transferred(Transferred other) : this() {
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      memo_ = other.memo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transferred Clone() {
      return new Transferred(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private global::AElf.Types.Address from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::AElf.Types.Address to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 5;
    private string memo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Memo {
      get { return memo_; }
      set {
        memo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transferred);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transferred other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      if (Memo != other.Memo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Memo.Length != 0) hash ^= Memo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (Memo.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Memo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Memo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Memo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transferred other) {
      if (other == null) {
        return;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::AElf.Types.Address();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::AElf.Types.Address();
        }
        To.MergeFrom(other.To);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Memo.Length != 0) {
        Memo = other.Memo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (from_ == null) {
              From = new global::AElf.Types.Address();
            }
            input.ReadMessage(From);
            break;
          }
          case 18: {
            if (to_ == null) {
              To = new global::AElf.Types.Address();
            }
            input.ReadMessage(To);
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
          case 42: {
            Memo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Approved : pb::IMessage<Approved> {
    private static readonly pb::MessageParser<Approved> _parser = new pb::MessageParser<Approved>(() => new Approved());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Approved> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approved() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approved(Approved other) : this() {
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      spender_ = other.spender_ != null ? other.spender_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approved Clone() {
      return new Approved(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "spender" field.</summary>
    public const int SpenderFieldNumber = 2;
    private global::AElf.Types.Address spender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Spender {
      get { return spender_; }
      set {
        spender_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Approved);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Approved other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Owner, other.Owner)) return false;
      if (!object.Equals(Spender, other.Spender)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (spender_ != null) hash ^= Spender.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (owner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Owner);
      }
      if (spender_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spender);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (spender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spender);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Approved other) {
      if (other == null) {
        return;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.spender_ != null) {
        if (spender_ == null) {
          Spender = new global::AElf.Types.Address();
        }
        Spender.MergeFrom(other.Spender);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 18: {
            if (spender_ == null) {
              Spender = new global::AElf.Types.Address();
            }
            input.ReadMessage(Spender);
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnApproved : pb::IMessage<UnApproved> {
    private static readonly pb::MessageParser<UnApproved> _parser = new pb::MessageParser<UnApproved>(() => new UnApproved());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnApproved> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnApproved() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnApproved(UnApproved other) : this() {
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      spender_ = other.spender_ != null ? other.spender_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnApproved Clone() {
      return new UnApproved(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "spender" field.</summary>
    public const int SpenderFieldNumber = 2;
    private global::AElf.Types.Address spender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Spender {
      get { return spender_; }
      set {
        spender_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnApproved);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnApproved other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Owner, other.Owner)) return false;
      if (!object.Equals(Spender, other.Spender)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (spender_ != null) hash ^= Spender.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (owner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Owner);
      }
      if (spender_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spender);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (spender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spender);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnApproved other) {
      if (other == null) {
        return;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.spender_ != null) {
        if (spender_ == null) {
          Spender = new global::AElf.Types.Address();
        }
        Spender.MergeFrom(other.Spender);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 18: {
            if (spender_ == null) {
              Spender = new global::AElf.Types.Address();
            }
            input.ReadMessage(Spender);
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenCreated : pb::IMessage<TokenCreated> {
    private static readonly pb::MessageParser<TokenCreated> _parser = new pb::MessageParser<TokenCreated>(() => new TokenCreated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Awaken.Contracts.AToken.ATokenContractReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenCreated(TokenCreated other) : this() {
      symbol_ = other.symbol_;
      tokenName_ = other.tokenName_;
      decimals_ = other.decimals_;
      aToken_ = other.aToken_ != null ? other.aToken_.Clone() : null;
      underlying_ = other.underlying_;
      tokenContract_ = other.tokenContract_ != null ? other.tokenContract_.Clone() : null;
      controller_ = other.controller_ != null ? other.controller_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenCreated Clone() {
      return new TokenCreated(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 2;
    private string tokenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 3;
    private int decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "a_token" field.</summary>
    public const int ATokenFieldNumber = 4;
    private global::AElf.Types.Address aToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AToken {
      get { return aToken_; }
      set {
        aToken_ = value;
      }
    }

    /// <summary>Field number for the "underlying" field.</summary>
    public const int UnderlyingFieldNumber = 5;
    private string underlying_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Underlying {
      get { return underlying_; }
      set {
        underlying_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_contract" field.</summary>
    public const int TokenContractFieldNumber = 6;
    private global::AElf.Types.Address tokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address TokenContract {
      get { return tokenContract_; }
      set {
        tokenContract_ = value;
      }
    }

    /// <summary>Field number for the "controller" field.</summary>
    public const int ControllerFieldNumber = 7;
    private global::AElf.Types.Address controller_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Controller {
      get { return controller_; }
      set {
        controller_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (TokenName != other.TokenName) return false;
      if (Decimals != other.Decimals) return false;
      if (!object.Equals(AToken, other.AToken)) return false;
      if (Underlying != other.Underlying) return false;
      if (!object.Equals(TokenContract, other.TokenContract)) return false;
      if (!object.Equals(Controller, other.Controller)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (aToken_ != null) hash ^= AToken.GetHashCode();
      if (Underlying.Length != 0) hash ^= Underlying.GetHashCode();
      if (tokenContract_ != null) hash ^= TokenContract.GetHashCode();
      if (controller_ != null) hash ^= Controller.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TokenName);
      }
      if (Decimals != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Decimals);
      }
      if (aToken_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AToken);
      }
      if (Underlying.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Underlying);
      }
      if (tokenContract_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TokenContract);
      }
      if (controller_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Controller);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      if (aToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AToken);
      }
      if (Underlying.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlying);
      }
      if (tokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenContract);
      }
      if (controller_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Controller);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenCreated other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.aToken_ != null) {
        if (aToken_ == null) {
          AToken = new global::AElf.Types.Address();
        }
        AToken.MergeFrom(other.AToken);
      }
      if (other.Underlying.Length != 0) {
        Underlying = other.Underlying;
      }
      if (other.tokenContract_ != null) {
        if (tokenContract_ == null) {
          TokenContract = new global::AElf.Types.Address();
        }
        TokenContract.MergeFrom(other.TokenContract);
      }
      if (other.controller_ != null) {
        if (controller_ == null) {
          Controller = new global::AElf.Types.Address();
        }
        Controller.MergeFrom(other.Controller);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            TokenName = input.ReadString();
            break;
          }
          case 24: {
            Decimals = input.ReadInt32();
            break;
          }
          case 34: {
            if (aToken_ == null) {
              AToken = new global::AElf.Types.Address();
            }
            input.ReadMessage(AToken);
            break;
          }
          case 42: {
            Underlying = input.ReadString();
            break;
          }
          case 50: {
            if (tokenContract_ == null) {
              TokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(TokenContract);
            break;
          }
          case 58: {
            if (controller_ == null) {
              Controller = new global::AElf.Types.Address();
            }
            input.ReadMessage(Controller);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
